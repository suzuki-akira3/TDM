Kinetic energy classification and smoothing for compact B-spline basis sets in quantum Monte Carlo
Quantum Monte Carlo calculations of defect properties of transition metal oxides have become feasible in recent years due to increases in computing power. As the system size has grown, availability of on-node memory has become a limiting factor. Saving memory while minimizing computational cost is now a priority. The main growth in memory demand stems from the B-spline representation of the single particle orbitals, especially for heavier elements such as transition metals where semi-core states are present. Despite the associated memory costs, splines are computationally efficient. In this work, we explore alternatives to reduce the memory usage of splined orbitals without significantly affecting numerical fidelity or computational efficiency. We make use of the kinetic energy operator to both classify and smooth the occupied set of orbitals prior to splining. By using a partitioning scheme based on the per-orbital kinetic energy distributions, we show that memory savings of about 50% is possible for select transition metal oxide systems. For production supercells of practical interest, our scheme incurs a performance penalty of less than 5%.
I. INTRODUCTION
Continuum quantum Monte Carlo [1] (QMC) methods are among the most accurate for large scale electronic structure calculations. These methods have been applied in an increasingly broad array of settings, including traditional insulators and semiconductors [1], van der Waals dominated materials [2], and transition metal oxides (TMO’s) [3]. Scaling these methods effectively to larger systems is important to enable an accurate assessment of a range of phenomena, including defect physics, metal-insulator transitions, and catalysis.
In order to reach larger physical systems, finite computational resources, including collective central processing unit (CPU) power and memory, must be managed effectively. The major computational cost in modern QMC calculations, including variational [4], diffusion [5], and reptation [6] Monte Carlo, derives from the evaluation of the trial wavefunction and its derivatives at the real space locations of the electrons, which are updated in series in a random walk. The trial wavefunction is a numerical approximation to the true fermionic ground state and some of its terms are typically derived from other electronic structure methods, such as density functional theory [7,8] (DFT). In the case of periodic materials calculations, the DFT orbitals originating in a complete plane wave basis are transferred onto a uniform 3D B-spline grid [9] for rapid evaluation, but this comes with a trade-off in terms of memory usage due to the fine grids required. In recent years, application to transition metal oxides (TMO’s) has required the use of hard pseudopotentials [10,11] resulting in larger plane wave cutoffs and correspondingly finer B-spline meshes to reach convergence. The memory usage increases cubically with inverse grid spacing and so for even moderate system sizes, the available on-node memory of high performance computing resources can become exhausted. Approaches to reduce memory demands without compromising orbital evaluation efficiency are thus highly desirable. We note that at least two approaches have been devised before to reduce memory demands relating to the orbitals. Localized truncated orbital schemes, first developed by Alfè and Gillan [12] and later by others [13], can save a significant amount of memory, but this comes at the expense of efficiency due to slower memory access patterns. Another approach added an auxiliary radial basis set within atom-centered spheres to capture the most rapidly varying part of the orbitals [14], with the added difficulty of appropriately enforcing continuity at the sphere boundaries. To the best of the authors’ knowledge, neither approach has yet found widespread use.
In this work, we retain the B-spline approach for efficiency and employ a combined orbital smoothing and multiresolution approach to reduce the memory demands of splined orbitals. The main tool we use to classify and improve the smoothness of orbitals is the per-orbital kinetic energy distribution and its moments. Orbitals with a large component on high kinetic energies can be expected to vary rapidly and thus require fine B-spline grids. As we will show in a test example, the first and second moments of the kinetic energy distribution are related linearly to leading order, and thus much of the high kinetic energy information contained in the variance is also contained in the mean. We explore whether orbitals with similar smoothness can be grouped according to the similarity of their mean kinetic energies and also the effectiveness of attempting to improve smoothness by seeking an optimal unitary transformation of the orbitals [15]. We test this smoothing and partitioning strategy by applying B-spline grids of varying fineness to each group and monitoring QMC-appropriate quality metrics: the total energy and its variance, as calculated within variational Monte Carlo (VMC). Conclusions about orbital quality derived from VMC can be expected to carry over to the computationally more expensive diffusion Monte Carlo (DMC) method, as it depends only indirectly on the inputted orbitals through the fixed node/phase constraint [16–18].
II. CONTINUUM QUANTUM MONTE CARLO
Continuum quantum Monte Carlo methods fall under the general class of wavefunction-based techniques to solve the many-body Schrödinger equation [19]. The methods are, in general, variational with the calculated energy remaining an upper bound to the true ground state energy. We will briefly review the two main flavors of continuum QMC widely in use today: variational Monte Carlo (VMC) and diffusion Monte Carlo (DMC). Here we provide a sketch of the methods, emphasizing details pertinent to the current discussion. For a more complete account of the methodology, the reader is referred to the detailed review of Foulkes et_al [1]
In variational Monte Carlo, the total energy and other properties are calculated from an approximate trial wavefunction Ψ_{T}(R), which depends explicitly on N electronic positions in real space R = [r_{1}, r_{2}, …, r_{N}]. In principle, any form can be used for the trial wavefunction. The most commonly used choice for large systems is a spin unrestricted Slater-Jastrow [20,21] wavefunction
though a multi-determinant expansion is often used for molecules. In the preceding, J(R) is the Jastrow factor (symmetric under like-spin electron exchange and depending explicitly on at least pair distances) and D_{↑}/D_{↓} are Slater determinants composed of occupied up/down single particle orbitals ({ϕ_{↑}} or {ϕ_{↓}}).
Within VMC the total energy is calculated directly as
where Ĥ represents the many-electron Hamiltonian operator and the local energy is defined as E_{L}≡ΨT−1ĤΨ_{T}.
For a general wavefunction, the most efficient manner to evaluate the 3N-dimensional integral in Eq. (2) is via Monte Carlo integration. In this case, the squared wavefunction is interpreted as a probability distribution that can be sampled with the Metropolis-Hastings [22,23] algorithm. A sequence of M real space electron configurations R_{1}, R_{2}, …, R_{M} is generated according to a drifted Brownian random walk
that is subject to a Metropolis accept/reject criterion. Here η is a vector of Gaussian distributed random numbers and τ is the time step. This is not the only choice that can be made for the VMC random walk, but it is commonly made as it reflects the structure of the drift-diffusion part of diffusion Monte Carlo. From this set of configurations, the total energy is sampled explicitly
with a precision that improves as 1/M. The variational principle is invoked to arrive at improved trial wavefunctions’ self-consistently within VMC through well-developed optimization methods [24].
Diffusion Monte Carlo moves beyond the restrictions of the parametric form of the trial wavefunction via imaginary time projection toward the many-electron ground state. Formally the DMC energy is found through the following imaginary time projection process:
In practice the projection operator is modified via a similarity transformation [5,25] based on the trial function (known as importance sampling), P^(t)=∫dRdR^{′}RΨ_{T}(R)Re^{−tĤ}R^{′}/Ψ_{T}(R^{′})R^{′}, which also has the effect of constraining the nodal structure of the projected wavefunction to remain identical to the trial wavefunction. Within this fixed node approximation, dynamical correlations are well accounted for although a generally small error remains. If the nodal constraint is released [26], the exact fermionic ground state energy is approached, though with an exponentially increasing statistical noise, and hence computational cost, with increasing imaginary time t.
The Monte Carlo process for DMC differs from what is described for VMC above, only in the addition of a branching process. A configuration at position R_{m} carries a weight w_{m},
In the simplest algorithm, a configuration at step m branches into an integer number B_{m} = w_{m}+u of identical configurations, where u is a uniformly distributed random number and ⋅ indicates the floor function. A configuration may be deleted (B_{m} = 0), be preserved (B_{m} = 1), or have multiple copies made (B_{m} > 1). In this way, an average weight of w_{m} is carried forward into the next drift-diffusion step.
What both VMC and DMC share in common are frequent evaluations of Ψ_{T}(R), ∇Ψ_{T}(R), and ∇^{2}Ψ_{T}(R) as part of the trial probability distribution, the drift step, and the evaluation of the local energy as the random walk in position space progresses. Traditional quantum chemical methods are performed within the basis of Slater determinants constructed from single particle orbitals and the computational cost of these methods can be minimized by using compact Gaussian basis sets with known analytical kinetic and potential matrix elements. By contrast, within continuum QMC methods the efficiency of the calculations is determined in large measure by the cost of evaluating the wavefunction and its derivatives along the random walk, with a large component of the cost coming from the evaluation of the single particle orbitals [see Eq. (1)]. This places different requirements on the basis set used to represent the orbitals, making a B-spline basis generally preferable to Gaussians. As the details of this basis may not be widely known, we proceed in Sec. III to describe the B-spline basis as it has been used in quantum chemical, density functional, and quantum Monte Carlo calculations.
III. THE B-SPLINE BASIS
Basis splines—referred to commonly as “B”-splines—were first introduced over seventy years ago in the context of interpolation theory [27]. In the time intervening, B-splines have become important in applied mathematics in a number of areas, with specific applications in signal processing and computer graphics [28]. Because of their ability to represent fairly arbitrary functions compactly and accurately, B-splines have also found application in multiple computational methods in electronic structure theory, including density functional theory, quantum Monte Carlo, and quantum chemical methods.
B-splines were introduced into solid state density functional theory calculations in the context of linear scaling DFT [29]. It was soon realized that this basis had potential to also make quantum Monte Carlo calculations more efficient and the first QMC implementation was made a few years later [9]. B-splines have also been used as radial basis sets in place of more traditional Gaussian-type or Slater-type bases in very high precision quantum chemical calculations (including Hartree-Fock, multiconfigurational Hartree-Fock, many-body perturbation theory, relativistic configuration interaction, etc.) of bound, quasi-bound, and continuum states in atoms and molecules, where demands on basis set quality are stringent [30].
Cardinal B-splines are a family of functions with compact support that are related by successive convolution of the unit rectangle function. In this way, cardinal B-splines B^{n}(x) can be understood in the context of probability theory as the distributions that arise from the sum of n uniformly distributed random numbers, with B^{n}(x) becoming Gaussian in the limit as n approaches infinity. As an illustration, Fig. 1 contains centered cardinal B-splines of degree 0-3 as well as the infinite Gaussian limit.
For the purposes of this article, we focus on cubic B-splines, since splines of this type are often used to describe the orbitals in periodic quantum Monte Carlo calculations. In this case, the cardinal spline is given explicitly by
Unlike Gaussian basis sets, where contracted functions are obtained from a superposition of centered Gaussians of different widths, a B-spline basis {Bmn} in one dimension is obtained by creating a collection of shifted copies of the same cardinal B-spline of fixed width,
The basis is generalized to three dimensions by direct product,
where μ ≡ (m_{1}, m_{2}, m_{3}) and u ≡ (x, y, z).
Solid state quantum chemistry calculations typically construct Bloch orbitals as linear combinations of atomic orbitals (LCAOs) [31],
where χ_{ν} are Gaussian-based atomic orbitals, respectively, centered on atoms located at r_{ν}, k is the crystal momentum of the state, and {R} is the set of simulation cell lattice vectors. The orbitals take on a similar form when cast in terms of B-splines,
where δr is a matrix containing the B-spline separation vectors, which are related to the simulation cell axes a_{i} (i = 1, 2, 3) by δr_{i} = a_{i}/M_{i} with M_{i} being the B-spline grid size in dimension i (giving M_{1}M_{2}M_{3} B-spline basis elements/coefficients in total). The B-spline basis size then generally grows linearly with the volume of the periodic cell, or equivalently, the number of atoms in the simulation, though it is generally much larger than the size of an LCAO basis due to the fineness of the grid required to reach convergence.
The B-spline basis is advantageous because it is unbiased and becomes complete simply by decreasing a single parameter (the grid spacing), though in the context of QMC the main advantage for using the B-spline basis is evaluation efficiency. In order to obtain the value or spatial derivatives of a particular orbital ϕ_{kℓ} at any given point r, only (n + 1)^{3} coefficients (i.e., 64 for cubic B-splines) need to be considered—independent of the number of atoms—since B-splines vanish a fixed distance away from their centers. This fixed evaluation efficiency comes at the price of memory storage (M_{1}M_{2}M_{3} is large) which is the primary obstacle for scaling to large system sizes.
The B-spline representation shares a close relationship to plane waves. A Bloch orbital expressed in the plane wave basis is
with {G} denoting the set of reciprocal space vectors dual to {R} above. In their original work [29], Hernández, Gillan, and Goringe connect plane waves and analogous B-spline waves in reciprocal space. This leads to an expectation that the size of the basis sets required to reach convergence is related, with the B-spline grid resolution ∥δr_{i}∥ being related to the largest plane wave G-vector Gimax≡max_{{G}}∥G_{i}∥ approximately by Gimax≈π/∥δr_{i}∥. Thus the size of the required B-spline basis is closely related to the kinetic energy content of a given orbital or orbital subspace. In Sec. IV, we expand on this physical connection to arrive at more compact (smaller) B-spline basis sets both by tailoring the basis sets more closely to subsets of the orbitals and also by tailoring the orbitals—within the freedom allowed by unitary transformations of the occupied subspace—to be more compatible with the underlying basis.
IV. COMPACT B-SPLINE BASES BY ORBITAL CLASSIFICATION AND SMOOTHING
The solution to Schrödinger’s equation [19] tends to vary rapidly in spatial regions of high kinetic energy and we expect that these same regions are responsible for determining the minimum length scale or grid spacing required for an accurate description in terms of B-splines. We can view these regions in aggregate by organizing the kinetic energy contributions of an orbital into a distribution function. Given a single particle orbital in the plane wave representation of Eq. (13), we define its kinetic energy distribution as
where we have introduced the composite index n ≡ kℓ for simplicity of notation and T is the scalar valued kinetic energy in hartree units. The tail of the distribution corresponds to the high kinetic energy regions of the orbital.
A scalar quantity that captures information about the extent of the distribution, and hence its tail, is the standard deviation,
In the above expression, the quantities ⟨T^{m}⟩ are just the moments of the distribution,
As can be shown by direct calculation, these moments are identical to the expectation values of the kinetic energy operator, T^≡−12∇^{2}, for each orbital,
A large standard deviation implies a large component on high kinetic energies in the tail of the distribution. In practice, we find that the mean ⟨T⟩ and standard deviation σ(T) of the kinetic energy distribution of each orbital are related nearly linearly (see Sec. VI), indicating that much of the information captured by the standard deviation is also captured by the mean.
A reasonable way to reduce the memory demands of splining the orbitals is to group together orbitals with similar length scale requirements (similar “smoothness”), as indicated by the mean or the standard deviation of the per-orbital kinetic energy distributions, and apply a separate B-spline basis to each group. We explore the effectiveness of this approach further in Secs. VI and VII, where we find that grouping based on the standard deviation is sufficient.
Orbital grouping based on the standard deviation of the kinetic energy can be rationalized on purely physical grounds. If an orbital ϕ is the solution to a particular mean field Schrödinger equation
then it is straightforward to show that the standard deviation of the kinetic energy is identical to the standard deviation of the potential energy for that orbital,
which is in turn dominated by contributions near the atomic core for tightly bound states (semi-core states for pseudopotentials). A partitioning of orbitals based on the per-orbital kinetic or potential standard deviation can then be understood as a type of core-valence partitioning of the orbitals where the orbitals of each type have distinct localization properties (with high/low kinetic energy corresponding to core/valence).
Since a unitary transformation of an orbital set does not change a Slater determinant constructed from them, further gains in memory savings can potentially be realized by exploiting the degree of freedom offered by rotations in the occupied orbitals. We seek a unitary transformation that smooths the low kinetic energy orbitals while relegating more of the oscillatory behavior to high kinetic energy ones so as to improve the contrast provided by the partitioning scheme and enhance the memory savings. A direct way to achieve this extremization is to diagonalize the kinetic energy operator in the basis of the occupied orbitals, as this will increase the spread in the mean kinetic energies, and hence the gridding and memory requirements which are associated with the compactness of the underlying B-spline basis.
Perfect eigenstates of the kinetic energy operator
maximally reduce the distribution width
and the lowest kinetic energy eigenstates represent an extreme in terms of B-spline compactness by their close relationship to plane waves (see Sec. III). Since the occupied set of orbitals is not complete, approximately diagonalizing the kinetic energy operator in this subspace will not produce eigenstates. However, it will still extremize the kinetic energy mean and standard deviation, σ, to the extent possible within this subspace and hence give maximal/minimal compactness within the B-spline basis for the low/high kinetic energy orbitals. This is the physical connection on which our method relies.
Specifically, we construct the matrix
in the basis of the occupied orbitals (separately for up and down) and obtain new orbitals for partitioning by finding the eigenstates
The new diagonalized orbitals, {ϕ̃}, are related to the original ones by
and we have
The values {T̃} then refer to the mean kinetic energies of the diagonalized orbitals {ϕ̃}.
In Secs. V–VIII, we refer to these orbitals interchangeably as “diagonalized” or “smoothed,” where it is understood that the orbitals with lowest mean/standard deviation of kinetic energy following the diagonalization are the ones that have experienced a smoothing effect.
V. IMPLEMENTATION AND CALCULATION DETAILS
All quantum Monte Carlo calculations in this study were performed with the QMCPACK [32] simulation code. The object oriented nature of QMCPACK allowed us to create multiple distinct orbital groups, each with its own B-spline basis, with only minor modifications to the code. Internally, the separate orbital sets were combined into a single abstract group that functions like a single orbital set. In all cases, the orbitals were originally obtained in the plane wave representation from the Quantum Espresso [33] DFT package. A conversion tool packaged with QMCPACK was used to repack the orbitals into a platform independent data file in the HDF5 [34] format, which provided a convenient entry point for the orbital manipulations outlined in Sec. IV.
We wrote a custom Python [35] program to work with the orbital files. This tool was used to assess the orbital kinetic energy distributions [Eq. (14)] and calculate the associated moments. It was also used to perform the kinetic energy diagonalization and sorting procedures needed for orbital grouping and partitioning. The tool produces a fresh HDF5 file as input to QMCPACK following each operation. It has been included in the main QMCPACK distribution for general use.
The test runs detailed in Sec. VI were driven with the Nexus [36] workflow automation tool. All runs used previously developed pseudopotentials designed for plane wave/B-spline calculations [11].
VI. SIMPLE MnO TEST CASE
As a first test of the kinetic energy-based partitioning and smoothing technique, we examine its performance for a simple but representative test system: an 8-atom supercell of rock salt MnO in an AFM spin configuration. The cubic supercell for this system is 4.49 Å on a side and contains 84 electrons in total. The occupied set of orbitals (42 up and 42 down) was obtained within the LDA+U framework (U = 3 eV) in a plane wave basis with an energy cutoff of 300 Ry. Using the Python tool described in Sec. V, we obtained the kinetic energy distribution of each orbital, as defined in Eq. (14), and also its first and second moments [Eq. (17)].
The resulting kinetic energy distributions are shown in Fig. 2 on a log-log scale in order to make the high kinetic energy tails of the distributions visible. The distributions naturally fall into groups clustered by similar shape and asymptotics, with one particular group (shown in red) having roughly an order of magnitude more weight in the high kinetic energy tail region. These are the orbitals we expect to require a finer B-spline mesh and therefore drive the memory requirements of QMC calculations. The clustering visible in Fig. 2 is mirrored in the moments of the distributions.
The mean and standard deviation of each orbital’s kinetic energy distribution are plotted in Fig. 3. From Fig. 3, we can see that the mean and standard deviation of kinetic energy scale with each other in a roughly linear fashion, suggesting that the mean kinetic energy values contain similar information about the tails of the distribution as the standard deviation. Clustering by mean kinetic energy suggests three groups, while clustering via the standard deviation suggests only two. We consider here whether or not the additional clustering suggested by the mean provides meaningful distinctions in the B-spline basis requirements of the orbital groups. Orbitals with low, medium, and high mean kinetic energy are colored green, blue, and red, respectively, in Figs. 2 and 3.
The Python tool was further employed to create two new orbital sets for subsequent multiresolution meshing in the B-spline representation. The first orbital set was constructed by simply rearranging the orbitals in order of mean kinetic energy. The second was obtained by applying Eq. (23) to smooth the low kinetic energy orbitals by diagonalization followed by the same kinetic energy ordering procedure. A separate B-spline basis was constructed for each orbital group (low, medium, and high). The ordering procedure facilitates efficient computation as each orbital group is contiguous in memory.
Our task is to find the multiresolution B-spline basis that minimizes memory requirements without compromising the accuracy of a QMC calculation. For the MnO test case, we impose a conservative accuracy criterion: a multiresolution mesh is acceptable if the total energy per MnO unit changes by less than 1 mhartree (∼0.03 eV). We also desire the variance of the total energy to change by as little as possible (<≈10%) since this can affect both the efficiency and stability of diffusion Monte Carlo calculations.
We explored the effects of the multiresolution approach in a stagewise fashion. Three sets of VMC runs were performed across a fixed collection of B-spline meshes ranging from coarse to fine (toward basis set completeness). The three sets of runs were performed for both the sorted and diagonalized/smoothed orbital sets.
• Set 1: Mesh for low, medium, and high orbital groups varied simultaneously. In the absence of orbital partitioning, this is how a typical run is performed and forms the baseline. The runs in this set were used to select the mesh for the high kinetic energy orbitals.
• Set 2: Mesh for low and medium orbital groups varied simultaneously with a fixed mesh for the high group, which is used to select mesh for the medium group.
• Set 3: Mesh for the low group varied with separate fixed meshes for the medium and high orbital groups.
The VMC energies and variances obtained during these sets of runs are summarized in Figs. 4 and 5. In each case, data from sets 1, 2, and 3 are shown as circles (black), squares, and triangles, respectively. Results for the kinetic energy sorted orbitals are shown in magenta, while results for the kinetic energy diagonalized/smoothed orbitals are shown in cyan. In all cases, the solid lines are guides to the eye. In the plots, results are ordered by the B-spline meshfactor (μ) which determines the fineness of the B-spline mesh. The meshfactor is related to the grid spacing δr in ith unit cell dimension by
where Gimax is the magnitude of the largest plane wave G-vector in that dimension. A meshfactor of 1.0 is typically sufficient for basis set convergence.
Performing a simultaneous meshfactor scan over all orbital groups results (black circles in Figs. 4 and 5) in a rapid increase in the VMC variance as the mesh is coarsened (set 1). For this reason, we fix the mesh for the “high” group using the standard meshfactor of 1.0. A subsequent mesh scan for the “medium” and “low” groups (set 2, squares) shows that both the energy and variance remain well behaved for a meshfactor as low as 0.6 (coarse mesh). The final scan performed for the “low” orbitals alone (set 3, “medium” group fixed at meshfactor 0.6, triangles) shows a similar behavior to the set 2 scan and the “medium” and “low” orbitals could have been considered as a single group without detriment. If the standard deviation/variance of the per-orbital kinetic energy distributions had been used for grouping instead of the mean, the “medium” and “low” groups identified by the mean would have naturally appeared as a single group. We therefore recommend this criterion for effective orbital partitioning onto separate B-spline basis sets. The kinetic energy diagonalization/smoothing approach (cyan) improves the quality of the orbitals for coarser meshes (μ < 0.6) compared to kinetic energy sorting alone (magenta). For cases when more aggressive memory savings are needed and looser accuracy tolerance is acceptable, the diagonalization approach is therefore preferred.
For this simple test case, we have shown that a multiresolution B-spline mesh (μ = 1.0 for “high” and μ = 0.6 for “medium” and “low” kinetic energy orbitals) can be found that does not sacrifice QMC accuracy. The resulting memory requirement of this basis is 60% lower than for the standard uniform basis approach. Runs with the multiresolution basis required 15% more wall clock time to complete which is a modest performance impact for this small system. For production sized supercells, the performance impact is considerably diminished to about 3%. In Sec. VII, we briefly summarize memory savings and performance impact for larger problem sizes representative of production research runs.
VII. CrO_{2}, MnO, AND ZnO SUPERCELL TESTS
We repeated the kinetic energy diagonalization and mesh partitioning procedure for supercells of rutile CrO_{2} (36 atoms), rock salt MnO (32 atoms), and wurtzite ZnO (32 atoms). The orbitals for CrO_{2} and MnO were generated in an antiferromagnetic configuration using LDA+U (U = 4 eV). DFT calculations for ZnO were spin unpolarized. For these calculations, the orbitals were partitioned into two sets (high/low) according to the kinetic energy standard deviation of the diagonalized orbitals being above or below a given threshold based on the clustering of the values similar to Sec. VI.
As an example, we show the per-orbital standard deviation of the kinetic energy for ZnO before and after diagonalization in Fig. 6. Prior to diagonalization, the orbital kinetic energy distributions have many widths spanning from low to high. Following diagonalization, the distribution widths spread (extremize) with a gap opening between the “high” and the “low” orbitals. Diagonalization also has the effect creating distributions with more similar widths, which naturally relates to similar degrees of compactness for the resulting B-spline basis sets applied to the two groups. Plots similar to Fig. 6 for MnO and CrO_{2} can be found in the supplementary material.
VMC calculations were performed for a series of B-spline meshes of varying coarseness for the “low” group, while the “high” group of orbitals was rendered on the standard fine mesh. Calculations of this type were performed for both kinetic energy diagonalized (smoothing the “low” group) and kinetic energy sorted orbitals, with diagonalization showing uniformly superior performance in terms of the total energy and its variance as the meshes were coarsened.
For all materials, a meshfactor of 0.6 corresponded to the coarsest mesh that was possible to impose on the kinetic energy diagonalized “low” group without increasing the total energy per formula unit or the variance beyond 1 mhartree or ≈10%, respectively, relative to an unpartitioned reference set of orbitals. The results of the supercell tests are summarized in Table I. For both ZnO and MnO, substantial memory savings are realized. The total memory required to store the orbitals was reduced by 48% for ZnO and 60% for MnO due to the use of a coarser mesh for the “low” group. The memory savings is greater for MnO because a smaller fraction of the orbitals fell in the “high” group. Compared to the small MnO test case in Sec. VI, the CPU cost incurred by the partitioning scheme has been reduced to about 3%, a very modest increase over the standard approach.
The gains of the diagonalization/smoothing scheme over the sorting scheme are significant for ZnO and MnO, but they are much reduced in the case of CrO_{2}. To better understand this effect, we reran the reference calculation while varying the mesh over all orbitals simultaneously. In this case, unlike ZnO and MnO, using the standard unpartitioned approach did not result in a rapid increase in the energy or variance until the mesh was fairly coarse, with the meshfactor ∼0.6 (see the supplementary material for plots analogous to Figs. 4 and 5 for the ZnO, MnO, and CrO_{2} supercells). This indicates that all the orbitals are similarly “soft,” leaving little benefit from further smoothing. Also unlike ZnO and MnO, the kinetic energy standard deviations of the diagonalized CrO_{2} orbitals did not exhibit a significant gap, consistent with the observation that the “high” and “low” orbitals are more similar to each other in this case (see Figs. 1-5 of the supplementary material). From these observations, we must conclude that the memory savings obtainable with our approach will depend on the material under consideration; however, the savings we have demonstrated for ZnO and MnO show the overall value of the procedure.
VIII. SUMMARY
We have developed and tested a method to reduce the amount of memory required to accurately represent orbitals with B-spline basis sets. The key idea is that the kinetic energy distribution and its moments can be used to classify and smooth orbitals. Using the standard deviation of the kinetic energy distribution (per-orbital) as a metric, we collect original or smoothed orbitals into groups and apply separate B-spline basis sets according to the accuracy requirements of each group. The resulting multiresolution representation of the orbitals allows for memory savings without significantly impacting accuracy at the VMC level, indicating that the wavefunction nodal structure is also not significantly altered.
We have tested this approach in the context of an illustrative 8-atom MnO supercell and also larger systems of MnO, ZnO, and CrO_{2} that lie at the boundaries of what can be simulated today due to the memory limitations of current leadership class computing systems. We find that our approach can yield memory savings of up to 60% while increasing the computational cost by less than 5% for the transition metal oxide systems studied, though its effectiveness varies with the properties of the occupied semicore states. This approach could potentially be used in combination with localized truncated orbital schemes or the addition of an auxiliary radial basis to reduce memory requirements further. We also anticipate that this approach, when combined with the larger amounts of memory becoming available in the next generation of high performance computing systems, will enable calculations of defects in transition metal oxides with fully converged basis sets and system sizes comparable to the reach of current plane wave DFT.
SUPPLEMENTARY MATERIAL
TABLE I. 
Performance of the orbital kinetic energy diagonalization (T_{diag}) and sorting (T_{sort}) schemes for production supercells of ZnO, MnO, and CrO_{2} at meshfactor 0.6. The columns contain changes with respect to an unpartitioned reference calculation: total energy per formula unit in mHa (ΔE), percent changes in variance (Δσ^{2}) of total energy, memory usage for “low” orbitals (ΔM_{low}), total memory usage (ΔM_{tot}), and CPU time (ΔT_{cpu}).
TABLE I. -body
	ΔE	Δσ^{2} (%)	ΔM_{low} (%)	ΔM_{tot} (%)	ΔT_{cpu} (%)
ZnO	T_{diag}	1.1(4)	9	−78	−48	2
	T_{sort}	3.1(4)	45	…	…	2
MnO	T_{diag}	0.0(2)	8	−78	−60	3
	T_{sort}	0.4(2)	18	…	…	3
CrO_{2}	T_{diag}	0.0(2)	11	…	…	3
	T_{sort}	0.5(2)	12	…	…	3
FIG. 1. 
Centered cardinal B-splines from degree 0 to the infinite limit (a). A cubic B-spline basis generated by translation of the cardinal B-spline (b). Units are arbitrary in each case.
FIG. 2. 
Kinetic energy distributions of each orbital in an 8 atom cell of MnO. Distributions grouped by similarity of mean kinetic energy value: high ⟨T⟩ (red), medium ⟨T⟩ (blue), and low ⟨T⟩ (green).
FIG. 3. 
Standard deviation of kinetic energy vs. mean kinetic energy of each orbital in an 8 atom cell of MnO showing a nearly linear relationship between standard deviation and mean. Values grouped by similarity of mean kinetic energy value: high ⟨T⟩ (red triangles), medium ⟨T⟩ (blue squares), and low ⟨T⟩ (green circles).
FIG. 4. 
VMC energy per MnO formula unit vs. partition grid meshfactor. The zero of energy for the plot is set at −120.088 42 hartree. Meshfactor varied across all orbitals (black circles), “medium” and “low” orbitals (magenta/cyan squares), and “low” orbitals only (magenta/cyan triangles). Magenta and cyan colors correspond to orbitals organized by mean kinetic energy before and after diagonalization, respectively. The fit lines are guides to the eye.
FIG. 5. 
VMC variance per MnO formula unit vs. partition grid meshfactor. Meshfactor varied across all orbitals (black circles), “medium” and “low” orbitals (magenta/cyan squares), and “low” orbitals only (magenta/cyan triangles). Magenta and cyan colors correspond to orbitals organized by mean kinetic energy before and after diagonalization, respectively. The fit lines are guides to the eye.
FIG. 6. 
Per-orbital standard deviation of kinetic energy for 208 occupied “up” orbitals for ZnO. Spread of kinetic energy distribution (standard deviation) for unmodified orbitals is shown as blue circles. Corresponding data for orbitals following kinetic energy diagonalization are shown as red triangles. The first 80 orbitals were assigned to the “high” group, as shown by the vertical dashed line.
