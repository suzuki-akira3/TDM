Complex contagions with timers
There has been a great deal of effort to try to model social influence—including the spread of behavior, norms, and ideas—on networks. Most models of social influence tend to assume that individuals react to changes in the states of their neighbors without any time delay, but this is often not true in social contexts, where (for various reasons) different agents can have different response times. To examine such situations, we introduce the idea of a timer into threshold models of social influence. The presence of timers on nodes delays adoptions—i.e., changes of state—by the agents, which in turn delays the adoptions of their neighbors. With a homogeneously-distributed timer, in which all nodes have the same amount of delay, the adoption order of nodes remains the same. However, heterogeneously-distributed timers can change the adoption order of nodes and hence the “adoption paths” through which state changes spread in a network. Using a threshold model of social contagions, we illustrate that heterogeneous timers can either accelerate or decelerate the spread of adoptions compared to an analogous situation with homogeneous timers, and we investigate the relationship of such acceleration or deceleration with respect to the timer distribution and network structure. We derive an analytical approximation for the temporal evolution of the fraction of adopters by modifying a pair approximation for the Watts threshold model, and we find good agreement with numerical simulations. We also examine our new timer model on networks constructed from empirical data.
I. INTRODUCTION
Over the decades, and especially recently amidst the surge in data availability and richness, it has become increasingly popular to take quantitative approaches when studying sociological questions [7–11]. Modeling efforts have drawn from mathematical, statistical, and computational frameworks [12]; and the study of mechanistic models that incorporate data in a meaningful way (see Ref [13] for an example of data-driven mechanistic modeling) can give insights into both existing observations and the forecasting of future dynamics. Indeed, there have been numerous studies of the spread of opinions, actions, memes, information, misinformation, “alternative facts,” and other phenomena in populations in disciplines such as sociology, economics, computer science, physics, and many others [2,3,14–17]. By analogy with the spread of infectious diseases in a population, spreading phenomena—including the spread of defaults of banks, norms in populations, and products or new practices in populations—are often modeled as contagions on a network. To distinguish between different mechanisms in social and biological contagions, the former are often construed as examples of “complex contagions,” and the latter are often construed as examples of “simple contagions.” [14,18–22]
The quantitative study of spreading phenomena in social networks has a long history [4,23–27]. In recent years, studies of social influence have tended to focus on large social and/or communication networks; they have taken advantage of the increased availability of microblogging data sets (e.g., using data from Twitter) with relational information that enables one to incorporate network effects into models [28,29]. In studying social influence, one often explores what conditions yield cascades [30], in which a small seed of activity leads to a large change in a network. In the study of spreading models, a common way to quantify cascades is to examine when an infinitesimally small seed fraction of adopted nodes generates a nonvanishing mean cascade size (of adopted nodes) as the total number N of nodes in a network becomes infinite [3,31]. In practical applications with empirical data, one often measures cascade sizes in other ways (such as by calculating how long it takes for a given fraction of the nodes in a network to adopt). See the discussion of cascade conditions in Ref [3].
A particularly popular framework for studying the spread of behavior in social networks are threshold models, in which nodes update their states if the amount of peer pressure from their neighboring nodes (usually just nearest neighbors) matches or exceeds some personal threshold. The simplest such model is the Watts threshold model (WTM) [5], which uses a linear update rule that is very similar [32] to the one introduced by Granovetter [27] and which was previously examined on networks by Valente [4,33]. (It is also related to bootstrap percolation [34].) The WTM uses a “threshold” to represent the latent tendency of an individual to adopt an innovation (or become infected, if one wants to use more biological terminology) when at least some fraction of its neighbors has adopted the innovation [6]. Threshold models of adoption were first studied by sociologists, and the notion of a threshold incorporates a sociological idea [27] that articulates that people exhibit inertia in adopting innovations as a way to reduce cost in making decisions. The WTM is appealing to study in part because of its mathematical tractability [3,35] and in part because it incorporates simple notions of peer pressure, social reinforcement (because multiple neighbors having adopted an idea increases the peer pressure for a node to adopt), and personal resistance to peer pressure [36]. It thereby provides a simple model of social influence in a network.
The WTM and its generalizations have been studied from many perspectives. Such research includes a considerable amount of work—both analytical and numerical—on WTM dynamics on random networks with various characteristics, including local clustering [37–39], community structure [31], degree–degree correlations [40], and communities with intercommunity correlations [41]. The WTM has also been generalized to dynamics on temporal networks [42] and multiplex networks [43,44]. In the study of networks constructed from empirical data, the WTM has been used to examine phenomena such as protest recruitment [28] and adoption of technology [4].
There are also many variants of the WTM that caricature adoption behavior in different ways. These variants include thresholds that rely on the total number of neighbors [45], a multi-stage threshold model [46], on–off thresholds [47], threshold models with memory [48–50], and a threshold model that incorporates synergistic effects into the rule for updating node states [51]. Different variants of the WTM have adoption rules that codify behavioral latency (i.e., a delay before adopting a behavior) in different ways, and different adoption rules can generate distinct patterns of temporal growth of the fraction of adopters [28,52,53].
In the present paper, we incorporate response times into a threshold model. Even if a threshold is met or exceeded, there is often a delay until a behavior is adopted. There are many possible reasons why somebody may wait before adopting an idea, buying a product, etc. Possibilities include unawareness of an innovation, awareness but not yet deciding to adopt something due to personal inertia or other factors, a “decision” to adopt something but laziness before changing behavior [54], and so on. In this paper, we introduce a timer to model the tendency of individuals to wait for some amount of time between deciding to adopt a behavior and actually adopting it, and we investigate how the incorporation of timers (especially ones that are heterogeneous in a population) changes the qualitative dynamics of the WTM.
The rest of our paper is organized as follows. In Sec. II, we generalize the WTM so that nodes have both an associated adoption threshold and an associated timer. We illustrate the effects of incorporating timers on small networks in Sec. III and on large networks in Sec. IV. In Sec. V, we use a pair approximation to analyze the temporal evolution of adoptions in the WTM with timers. In Sec. VI, we examine “adoption paths” for our model on large networks. We conclude in Sec. VII and include further discussions and calculations in appendices.
II. TIMER MODELS
According to the Oxford English Dictionary, a “timer” is an automatic mechanism for activating an object at a preset time [55]. We apply this concept to a discrete-stage social-influence model on a network by defining a “timer model” as a model in which a node adopts an innovation after a preset number of discrete time steps, where a countdown starts after some other condition (e.g., the peer pressure on the node matching or exceeding the node's stubbornness threshold) has been met. In a timer model, each node in a network has an associated timer that is drawn from some probability distribution. Once the timer of a node is “triggered” (e.g., when the node meets some adoption condition), its counter starts counting down to 0 the next time the node is updated, and the node changes its state when its timer hits 0. We use a discrete-time setting, so each timer starts decrementing one time unit after all other adoption conditions are satisfied. For example, if node v_{i}'s timer τ_{vi}∈ℤ_{≥0} is triggered at time t′_{vi}, it changes its state at time t_{vi}=t′_{vi}+τ_{vi}+1, as that is when its timer countdown reaches 0.
If there is no adoption condition other than a timer-adoption condition, the timers of all nodes are triggered at time step t = 0 (so they start decrementing at t = 1), and the adoption process terminates when the largest timer hits 0. Therefore, the timer of a node is equal to the time of adoption of the node, and the cumulative distribution function of the timer distribution describes the adoption process; the network structure plays no role in this case. Such a naive timer model already illustrates Everett Rogers's ideas about the spread of innovations [1,56], in which different adopter categories (innovators, early adopters, early majority, late majority, and laggards) are determined only by their different adoption times.
We are interested in incorporating the idea of timers (especially heterogeneous ones) into models of spreading. For concreteness, we use the WTM.
A. WTM with timers
One can add a timing mechanism to any existing social-influence model in which nodes adopt an innovation based on the states of other nodes in a network. Let us consider what happens if we add such a mechanism to the WTM. The WTM is a binary-state model [5,35], so a node can be in state s∈{0,1}. The WTM has monotonic dynamics, as a node's state can change from 0 to 1, but any node that attains state 1 remains at that state forever. When a node changes its state from 0 to 1, we say that it “adopts” some behavior or idea. The adoption condition of a node in the WTM is that at least a fraction ϕ_{vi} of its neighbors have previously adopted the behavior. The parameter ϕ_{vi} is the “threshold” for node v_{i}, and the condition that at least this fraction of v_{i}'s neighbors have adopted is the threshold-adoption condition. In the WTM with timers, a node v_{i} must meet its threshold-adoption condition as well as its timer-adoption condition to adopt a behavior: the fraction of adopted neighbors of node v_{i} must be at least its threshold ϕ_{vi}, and then its timer τ_{vi} must hit 0. Update rules for nodes can be either synchronous or asynchronous [3]. In our study, we use synchronous updating, in which all nodes are updated simultaneously during each discrete time step.
B. Adoption paths
We study the WTM with timers on undirected, unweighted networks; and we trace what we call adoption paths, which are acyclic directed paths in a network through which an adoption is transmitted (see Fig. 1). A directed path in a network is a sequence (v_{1},v_{2},…,v_{n}) of nodes in which all nodes are distinct, and for i∈{1,…,n−1}, node v_{i} is adjacent to node v_{i+1} via an edge from v_{i}. The length l=n−1 of a path is the number of edges that comprise the path. In an adoption path, node v_{i} is adjacent to node v_{i+1} if and only if the adoption of v_{i} triggers the timer τ_{vi+1} of v_{i+1}. We call v_{1} the “root” of the adoption path, as it initiates the spread of adoptions [57]. The time t′_{vi} at which the timer of a node v_{i} is triggered is the sum of the timers of all preceding nodes in the adoption path plus the number of synchronous time steps to trigger the timers of the preceding nodes:
In Sec. VI, we use the unidirectional property of adoption paths to scrutinize how adoptions spread on large networks for the WTM with timers.
We examine the adoption paths in an adopted component, which is a component in a network that consists of nodes that adopt at steady state and the edges between those nodes. An adoption path in the WTM with timers terminates when its last node adopts; no other nodes can be triggered as a result this node adopting. In Fig. 1, we show an example of different adoption paths, which can terminate either with an adopted node that has degree 1 or simply because it does not trigger any of its neighbors. The dark brown node v_{0} in the center is a seed node that has state 1 at time t = 0, and the other nodes are in state 0 at t = 0. Each node v_{i} is assigned a timer τ_{vi} and a threshold ϕ_{vi}, where i∈{1,…,5}. Node v_{0} is the seed node, so it starts in the adopted state (and does not need a timer or threshold value). Nodes v_{i}, for i∈{1,…,5}, have threshold ϕ=0.5, so v_{1},…,v_{5} are triggered once even one of their neighbors adopts. In Fig. 1, the number written above each node indicates its timer value. If we run the WTM with timers on this network, we obtain three adoption paths: (v_{0},v_{1},v_{2}),(v_{0},v_{3},v_{4}), and (v_{0}, v_{5}). The lengths of these paths are 2, 2, and 1, respectively. All adoption paths grow from the seed v_{0}, so it is the root of all adoption paths. Each arrow represents the spread of an adoption through a distinct adoption path. The orange adoption path (v_{0},v_{1},v_{2}) terminates at time T_{(v0,v1,v2)}=4; the last node in the path has degree k = 1, so it has no more neighboring nodes to influence. The green adoption path (v_{0},v_{3},v_{4}) terminates at time T_{(v0,v3,v4)}=5, and the blue adoption path (v_{0}, v_{5}) terminates at time T_{(v0,v5)}=6. Each of these adoption paths illustrates one of two possible scenarios: in the blue adoption path, all neighbors of the last node are in state 1 before the last node adopts; in the green adoption path, all neighbors of the last node are in state 0, but the timers of all neighbors have already been triggered. The former scenario is also a condition for the termination of an adoption path in the original WTM, but the latter scenario is a novel feature of the WTM with timers.
III. WTM WITH TIMERS ON SMALL NETWORKS
Clearly, adding timers to the WTM delays adoption processes. The presence of a homogeneous timer merely delays the adoption of each node for exactly the same number of time steps. Suppose that we run the WTM without timers on an arbitrary network and that it takes T_{WTM} time steps to reach a steady state, in which no more nodes can adopt. On the same network, if we run the WTM with homogeneous timers τ_{hom}, it now takes T_{WTM}(τ_{hom}+1) time steps to reach a steady state. However, if timers are heterogeneous, the adoptions of different nodes are delayed by different amounts of time, and it is less straightforward to calculate the time to attain steady state in relation to T_{WTM}.
We calculate the time T_{hom} to reach steady state for the WTM with homogeneous timers and the mean time ⟨T_{het}⟩ to reach steady state for the WTM with heterogeneous timers for the three small example networks in Fig. 2. Suppose that all nodes have a homogeneous threshold of ϕ=0.1, which is small enough so that any node in Fig. 2 is going to adopt the state s = 1 once even one of its neighbors adopts. Using a homogeneous threshold enables us to disentangle the effect of timers from the effect of a heterogeneous threshold. Because all nodes have the same positive threshold, we need a seed node (labeled v_{0} in Fig. 2) in state 1 at time t = 0 to initiate the spread of adoptions.
In Fig. 2(a), we show a one-dimensional (1D) lattice with a seed node at its left end, so adoption occurs from left to right. The time T to reach the steady state (in which all nodes adopt) is
where τ_{vi} is the timer of node v_{i}. We need to add 3 because there are 3 nodes other than the seed, and it takes 1 synchronous time step to start a countdown after a timer is triggered. In Table I, we show results for this network when the nodes have a homogeneous timer with τ_{hom}=4 and heterogeneous timers τ_{het}∈{2,4,6} (note that the mean timer value is the same as in the homogeneous case), and we compare the time T_{hom} to reach steady state for the WTM with homogeneous timers to the mean time ⟨T_{het}⟩ to reach steady state over all possible timer configurations of the WTM with heterogeneous timers. In this example, the time to reach steady state is simply a function of the sum of the timers of all nodes, because adoptions spread from each node to its neighbor on the right. Therefore, for a given mean timer value, the time to reach steady state is the same regardless of whether the timer values are distributed homogeneously or heterogeneously. That is, the ratio ⟨T_{het}⟩/T_{hom}=1. Note that neither the adoption order of the nodes nor the adoption path (v_{0},v_{1},v_{2},v_{3}) can change even if the timers are distributed heterogeneously in the 1D lattice. Adoption always starts from the left end, and it spreads to the right one node at a time, regardless of how the timers are distributed.
Using the same homogeneous threshold value ϕ=0.1 as above, let us now consider what happens in a 4-clique [see Fig. 2(b)]. In a 4-clique, all nodes are adjacent to each other, so v_{1}, v_{2}, and v_{3} are triggered simultaneously by the seed node v_{0} at t = 0. Therefore, with timers, the time T to reach steady state is
We need to add 1 because it takes 1 synchronous time step to start a countdown after a timer is triggered. In a 4-clique, the adoption paths (v_{0}, v_{1}), (v_{0}, v_{2}), and (v_{0}, v_{3}) do not change for any assignment of timers. Moreover, the spread of adoptions in different adoption paths are independent of each other. Therefore, the adoption path that includes the node with the largest timer terminates last, determining the time to reach steady state. Consequently, T_{het} is always larger than T_{hom} for a 4-clique if the mean of the timer distributions is the same for the homogeneous and heterogeneous timers [so ⟨T_{het}⟩/T_{hom}>1 for row (b) in Table I]. This result holds for k-cliques with any value of k ≥ 3. The time to reach steady state in a k-clique is determined by the largest timer, so ⟨T_{het}⟩/T_{hom}>1 if the mean of the timer distributions is the same.
The example in Fig. 2(c) has a seed node adjacent to a square. The adoption of node v_{1} triggers the timers of nodes v_{2} and v_{3} simultaneously, and whichever one adopts earlier triggers the timer of node v_{4}. The time T to reach steady state is
We need to add 2 if adoption paths (v_{0},v_{1},v_{3}) or (v_{0},v_{1},v_{2}) determine the time to reach steady state, and we need to add 3 if adoption paths (v_{0},v_{1},v_{2},v_{4}) or (v_{0},v_{1},v_{3},v_{4}) determine the time to reach steady state. If the timers are homogeneous, the adoption of node v_{1} triggers the timers of both nodes v_{2} and v_{3} simultaneously, and the simultaneous adoption of v_{2} and v_{3} triggers the timer of v_{4}, so the adoption paths are (v_{0},v_{1},v_{2},v_{4}) and (v_{0},v_{1},v_{3},v_{4}). However, if the timers are heterogeneous and the timers of v_{2} and v_{3} are different, there are changes in both the adoption order of the nodes and the adoption paths. Suppose, for example, that the timer of node v_{2} is smaller than that of node v_{3}. In this case, node v_{2} adopts before v_{3}, and it triggers the timer of v_{4}; therefore, the adoption paths are (v_{0},v_{1},v_{2},v_{4}) and (v_{0},v_{1},v_{3}), and the one that takes a longer time to terminate determines the time to reach steady state. In Table I, we compare the time T_{hom} to reach steady state for a homogeneous timer τ_{hom}=4 and the mean time ⟨T_{het}⟩ to reach steady state for heterogeneous timers τ_{het}∈{1,3,5,7}. We see that ⟨T_{het}⟩<T_{hom}, in contrast to the other examples in Fig. 2.
A network with a fixed seed node and fixed threshold assignments has different adoption paths for different distributions of timers only if the network includes at least one cycle with 4 or more nodes. Consider a node v_{i} that is triggered by the adoption of node v_{j} in adoption path X for one timer distribution and by the adoption of node v_{k} (with v_{k}≠v_{j}) in adoption path Y for another timer distribution. All adoption paths—regardless of the timer distribution—must share the same root (i.e., the seed node), because all adoptions spread from the seed. Therefore, adoption paths X and Y must share at least two nodes: v_{i} and the seed node. The network must have a cycle that includes node v_{j} from X, node v_{k} from Y, the seed node, and node v_{i}. Therefore, a network that has different adoption paths for different distributions of timers must have a cycle of length at least 4.
If the thresholds of all nodes in a network are sufficiently small so that any node will adopt if at least one of its neighbors has adopted, an adoption path with nodes that have small timers tends to be long, and one with nodes with large timers tends to be short. Suppose that a node v_{i} adopts if any one of its neighbors v_{j}∈Γ(v_{i}) adopts, and suppose further that each neighbor belongs to a different adoption path of the same length. The time tv_{i}″ at which node v_{i}'s timer is triggered is then
where t′_{vj} is the time that the timer of v_{j} is triggered [see Eq. (1)]. Node v_{i} thereby becomes a part of the adoption path that has the smallest sum of node timers, and this adoption path becomes longer than the other ones. Therefore, in networks with cycles of length at least 4 and heterogeneous timers, adoption paths with small mean timers tend to be long and adoption paths with large mean timers tend to be short. For example, in Fig. 2(c), if v_{2} has a smaller timer than v_{3}, then v_{2} is part of a longer adoption path than v_{3}. We will use the relationship between the length of an adoption path and the timer values of its nodes in Sec. VI B when we investigate long adoption paths with small mean timer values in large random networks. To compel nodes with small timers to be part of long adoption paths, it is useful for their thresholds to be sufficiently small to adopt if at least one of their neighbors adopts. Otherwise, nodes with large timers can be part of longer adoption paths. See Appendix A for more details.
IV. TIMERS ON LARGE RANDOM NETWORKS
We now incorporate both homogeneous and heterogeneous timers into a spreading process on large networks. Specifically, we examine the WTM with a timer on the largest connected component (LCC) of random networks with N = 10 000 nodes (i.e., of “size” 10 000). For many of our random networks, we use a homogeneous threshold ϕ in which any node whose degree is larger than or equal to the graph's mean degree needs only a single adopted neighbor to be triggered (as in the small networks in Fig. 2). Because all nodes have the same threshold, we choose a seed adopted node uniformly at random at t = 0 to initiate the spread of adoptions. For our simulations, we report sample means of many realizations to give an idea of ensemble expectations in the N→∞ limit.
A. Timer distributions and dynamics of the WTM with timers
We first consider the WTM with timers on the LCC of G(N, p) Erdős–Rényi (ER) networks with N = 10 000 nodes and edge probability p = 0.0006 (and thus an expected mean degree of z = 6). We also suppose that all nodes have a homogeneous threshold of ϕ=0.1. We compare the adoption curves—the progress of the adopted fraction ρ(t) of nodes at time t—for homogeneous and heterogeneous timers. Note that the results that we illustrate in this section also arise when we use other values of p and ϕ.
In Fig. 3(a), the pink curve (marked with plus signs) shows the adoption process of the WTM without timers, and the green curve (marked with crosses) shows the adoption process of the WTM with a homogeneous timer τ = 4. Let t_{ρ^{*},WTM} denote the time to reach a fraction ρ^{*} of adopted nodes for the WTM without timers. The time to reach a fraction ρ^{*} of adopted nodes for the WTM with a homogeneous timer is (τ+1)t_{ρ^{*},WTM}, and the presence of a homogeneous timer leads to homogeneous gaps between sets of adoptions as new nodes are triggered. Therefore, as one can see in Fig. 3(a), the green adoption curve has a stair-like shape. If we employ asynchronous updating rather than synchronous updating (so that we choose some number of nodes uniformly at random at each time step to update their states [3]), the change in dynamics is not simply a delay for each adoption, as the randomness in node choice changes the adoption order [58]. See Ref [59] for a discussion of discrete versus continuous dynamics in contagion models on networks. (One models continuous spreading dynamics by using asynchronous updating.)
The orange curve (marked with squares) in Fig. 3(a) is the adoption curve of the WTM with heterogeneous timers on ER networks of size N = 10 000 in which we select timers τ∈{0,1,…,8} uniformly at random. The expected mean μ_{τ} of the timers is 4, which is the same as for the homogeneous timer in the figure. The obvious difference for the case of heterogeneous timers is that the adoption curve is now much smoother than it is for a homogeneous timer. (Compare the orange and green curves.) This arises amidst the change in the adoption order from the heterogeneous timers; nodes that adopt simultaneously when timers are homogeneous now adopt at different times, and there are now fewer nodes that adopt simultaneously. (We also expect that some nodes that adopt at different times with a homogeneous timer now adopt simultaneously.) We also see that the time T_{unif} to reach steady state (vertical orange dashed line) when the heterogeneous timers are distributed uniformly at random occurs earlier than the time T_{hom} to reach steady state (vertical green dashed line) for homogeneous timers. In ER networks, we thus see that uniformly random heterogeneous timers yield a faster adoption process than homogeneous timers. Increasing the heterogeneity in the distribution of the timers accelerates the adoption process even further [see Fig. 3(b)].
Importantly, heterogeneously-distributed timers do not necessarily yield a faster adoption process than homogeneous timers. For example, the blue curve (marked with diamonds) in Fig. 3(a) shows the adoption process of the WTM with timers given by integers that we determine by rounding down from numbers drawn uniformly at random from a Gamma distribution [60] with the same mean μ_{τ}=4 as the uniformly-randomly-distributed timers and with standard deviation σ_{τ}=4. The vertical blue dashed line marks the time T_{Gam} at which the blue adoption curve reaches a steady state, and we observe that it is located to the right of the green dashed line T_{hom}. In Fig. 3(c), we show that increasing the standard deviation of the Gamma distribution decelerates the time to reach steady state for ER networks, in stark contrast to our observations in Fig. 3(b) for timers that are distributed uniformly at random.
Although the time T_{het} to reach a steady state for heterogeneous timers can become either larger or smaller than T_{hom}, depending on the timer distribution, we observe that the majority of nodes adopt noticeably earlier when the timers are distributed either uniformly at random or using a Gamma distribution (and then rounded down to an integer) [61] than they do for homogeneous timers. In Table II, we compare the time t when the adopted fraction ρ(t) reaches at least a certain fraction ρ^{*} of nodes in networks when incorporating a homogeneous timer (t_{hom}), heterogeneous timers distributed uniformly at random (t_{unif}), and heterogeneous timers determined using a Gamma distribution (t_{Gam}). We update nodes synchronously, so we do not in general have exactly the adoption fraction ρ(t)=ρ^{*} at any time. In this case, we calculate the time T′ at which the fraction ρ(T′) of adopted nodes first exceeds ρ^{*}, and we then estimate the time t_{ρ=ρ^{*}} at which the fraction of adopted nodes reaches ρ^{*} to be
As we show in Table II, the fraction ρ(t) of adopted nodes tends to increase faster when incorporating either uniformly-randomly-distributed timers or Gamma-distributed timers than for homogeneous timers, although Gamma-distributed timers take a longer time to reach the steady-state adoption fraction ρ_{∞}. This illustrates that a cascade—the spread of adoptions from a small seed fraction of a network's nodes to a much larger fraction of nodes—can occur earlier for heterogeneous timers than for homogeneous timers. In Sec. VI, we investigate adoption paths and give evidence for how incorporating heterogeneous timers in the WTM can make the majority of nodes adopt earlier than when considering homogeneous timers.
V. ANALYSIS
We present an analytical approximation for the temporal evolution of the fraction of adopted nodes of the WTM with timers. To do this, we use a pair approximation, which has often been applied to the WTM and its variants [3,31,38,46,62]. A pair approximation of the WTM was first developed by Gleeson and Cahalane [62], who built on a method to study the zero-temperature random-field Ising model on Bethe lattices [63]. Gleeson and Cahalane's pair approximation agrees well with the temporal evolution of the WTM, and it takes into account pairwise interactions between nodes [64]. We generalize their pair approximation to examine the temporal evolution of the adopted fraction of nodes in the WTM with timers.
A. Pair approximation for the WTM
We consider a pair approximation of the WTM for undirected, unweighted networks. We assume that our networks are locally tree-like, so that, asymptotically, cycles can be ignored (and there should be few short cycles in empirical networks) [65]. Using these assumptions, it has been shown [35,62] that one can approximate the evolution of the fraction ρ(t) of adopted nodes in a network by calculating the probability that a node chosen uniformly at random is in the adopted state at time t.
To calculate the probability of a node to adopt, we first rearrange a network into a tree with the chosen node at the top level (i.e., level ∞) and its neighbors on the next level (see Fig. 4). The position of a node in the tree is determined by the distance between it and the top-level node. A node's “parent” is a neighbor located one level higher, and its “children” are its neighbors located one level lower.
Because the threshold-adoption condition is that there are at least the threshold fraction of adopted neighbors, the probability of the top-level node to adopt is determined by the fraction of adopted children, whose probability of adoption is in turn determined by their children' adoption status, and so on. We thus write
where ρ_{0} is the fraction of seed nodes, k is degree, P_{k} is the probability that the node degree is k (i.e., {P_{k}} is the degree distribution), m is the number of adopted children, and F(m, k) is the (neighborhood-influence) response function [38,66,67], which corresponds to the probability that a node satisfies the threshold-adoption condition for given values of m and k. As we discussed in Sec. II, the threshold-adoption condition of a node v_{i} is that the fraction m/k of adopted neighbors is at least its threshold ϕ_{i}. Therefore, for the WTM, the response function F(m, k) is the probability for a node to have a threshold lower than m/k; we can calculate this probability from the cumulative distribution function of the thresholds. Finally, the term q_{n}(t) is
where z is the mean degree of a network. Equation (7) gives the probability that a node at level n of the tree has adopted at or before time t (i.e., that it is in the adopted state at time t), conditional on its parent node at level (n+1) being unadopted (i.e., not having adopted). The rationale behind the formula for q_{n}(t) is as follows. A node v_{i} chosen uniformly at random at level n is in the adopted state if either
• the node is a seed, which occurs with probability ρ_{0};
• or the node is not a seed, which occurs with probability (1−ρ_{0}), but it meets the threshold-adoption condition at or before time t.
The factor k – 1 comes from the fact the node has an unadopted parent at level (n+1), so a node with degree k and threshold m/k should have m adopted nodes among the k – 1 child nodes at level n – 1; this yields the term (k−1m)q_{n−1}(t){m}[1−qn−1(t)]{k−1−m}. Finally, we need to sum over all possible k, because the nodes at level n have various degrees that follow the degree distribution {P_{k}}. One reaches a node at level (n−1) by following an edge from a node at level n to a child at level (n−1), so we use the excess degree distribution {kP_{k}/z}.
The above pair approximation shows good agreement with numerical simulations of the WTM [35,62], especially in large networks that are locally tree-like. This pair approximation has been generalized to several situations, including the WTM on networks with community structure (including with heterogeneous communities) [31,41] or other forms of clustering [38,68].
B. Pair approximation for the WTM with timers
We cannot simply use (6) and (7) for the WTM with timers, as a timer affects the time that a node adopts. Therefore, we need to understand the effect of timers on node adoptions and modify the pair-approximation equations accordingly. In the WTM with timers, a node with timer τ waits τ time steps after its threshold fraction of neighbors have adopted before it adopts (where the countdown starts one time step after its threshold-adoption condition is satisfied). In other words, the adoption of a node is determined by both (i) its timer τ and (ii) the fraction of its neighbors that are in the adopted state τ time steps before the current time. We need to consider both of these facets to derive a pair approximation for the WTM with timers.
The condition associated with (i) is determined by the response function G(m,k,τ), which indicates whether a node satisfies both its threshold-adoption condition and its timer-adoption condition. The response function G(m,k,τ) is the probability that a node has a threshold less than m/k and has timer τ. It is given by
where F(m, k) is the response function of the WTM and C_{τ} is the cumulative distribution function of the timers.
One satisfies the condition associated with (ii) if at least a fraction m/k of the children at level (n−1) are in the adopted state τ time steps before the current time t. The probability that a child at level n – 1 is in the adopted state τ time steps ago is q_{n}(t−τ). Combining the conditions from (i) and (ii), we can express the adoption condition of a node with degree k, threshold m/k, and timer τ at time t as
Similar to Eqs. (6) and (7), we need to sum over all m, k, and τ. We thereby obtain
As shown in Fig. 3(a), a numerical evaluation (solid curve) of the algebraic equations (6) and (7) derived from our theory agrees reasonably well with direct numerical simulations (points) of the WTM with timers for ER networks. We also perform our approximation for the WTM with timers on real-world networks. We use two Facebook100 networks [69,70] in Appendix B. Note that our assumption for the pair approximation that a network has a locally tree-like structure often does not hold for real-world networks, which routinely have significant local clustering and community structure. The Facebook100 networks have both of these features [70], although the aforementioned pair approximation for the WTM without timers nevertheless often yields good agreement with direct numerical simulations on most of these networks [65].
One can determine a cascade condition [5] by linearizing Eq. (11). For a given mean threshold and mean degree in a network, a cascade condition gives a criterion for when one expects to observe a global cascade [5,62], in which a small seed fraction ρ_{0} of adopted nodes results in a large value of ρ_{∞}=limt→∞ρ(t). Because the WTM dynamics are monotonic, if a node adopts in the limit t→∞, the node also adopts in the WTM with timers in the limit t→∞. Consequently, in the t→∞ limit, q_{n}(t) of the WTM with timers and q_{n}(t) of the WTM yield the same value q_{n}(∞). Therefore, the cascade condition for the WTM with timers is identical to that for the WTM without timers. In Appendix C, we show a detailed calculation of the cascade condition for the WTM with timers.
VI. ADOPTION PATHS IN LARGE NETWORKS
In Sec. II, we argued that the WTM with a homogeneous timer τ_{hom} has exactly the same adoption paths as in the WTM without timers, because a homogeneous timer does not change the adoption order of nodes, but instead merely delays adoption times (once the threshold-adoption condition is satisfied) uniformly by τ_{hom}. Therefore, the time T_{hom} to achieve a steady state is delayed to T_{hom}=T_{WTM}(1+τ_{hom}), where T_{WTM} is the time to reach steady state when there are no timers. However, if the timers are distributed heterogeneously, the adoption order of nodes can change, so adoption paths can also change (depending on the network structure). Furthermore, the relationship between the time T_{het} to reach steady state for heterogeneous timers and T_{WTM} is more complicated than that between T_{hom} and T_{WTM}. In Sec. IV A, we observed from simulations on ER networks that the WTM with timers distributed uniformly at random and timers determined using a Gamma distribution yield earlier adoptions for the majority of nodes than is the case for a homogeneous timer with the same mean (see Table II). In this section, we explore this issue in depth by investigating adoption paths in the WTM with timers for both synthetic and real-world networks.
A. Stems and branches
As we discussed in Sec. II, all adoption paths grow from the seed, so the seed is the root of all adoption paths. Among the adoption paths, which have various lengths, we pick a longest adoption path at steady state. We use the term stem to indicate a longest adoption path, where we exclude the seed node from the stem. The nodes in a stem of adoption spreading are called stem nodes. If there are two or more adoption paths that both have the largest length, we consider all of them to be stems. The other adoption paths terminate at the ends of branches. In our terminology, we exclude stem nodes and the seed node from the branches. The nodes in a branch of adoption spreading are called branch nodes. The main difference between stems and branches is that stems grow from a seed node, whereas branches can grow from either a stem or a seed node.
We give an example of a stem and branches in Fig. 5. Suppose that we run the WTM with timers on the network in Fig. 5(a) with node v_{0} as a seed and that we obtain five adoption paths: (v_{0},v_{1},v_{2},v_{3},v_{4}),(v_{0},v_{5},v_{6},v_{7}),(v_{0},v_{1},v_{8},v_{7}),(v_{0},v_{1},v_{8},v_{9}), and (v_{0},v_{1},v_{2},v_{10}). Among the adoption paths, (v_{0},v_{1},v_{2},v_{3},v_{4}) has the largest length, so the stem is (v_{1},v_{2},v_{3},v_{4}). The branches are (v_{5},v_{6},v_{7}), (v_{8}, v_{7}), (v_{8}, v_{9}), and (v_{10}). Note that v_{7} and v_{8} each appear in two different adoption paths, because the adoption of v_{8} triggers the timers of v_{7} and v_{9}, and the timer of v_{7} is triggered simultaneously by the adoptions of v_{6} and v_{8}.
From the adoption paths, we construct a tree [see Fig. 5(b)] that demonstrates how adoptions spread in the network in Fig. 5(a). We use the term dissemination tree for a network composed of adoption paths [71,77–80]. Because an adoption path is directed, a dissemination tree does not have a path back to the root (or to any other node), so it is a directed acyclic graph (DAG) [72]. However, as one can see in Fig. 5(b), the underlying undirected graph of a dissemination tree can have a cycle of length at least 4. In Fig. 5(b), this cycle is (v_{0},v_{1},v_{8},v_{7},v_{6},v_{5},v_{0}). However, a dissemination tree's underlying undirected graph cannot have triangular clustering (i.e., 3-node cycles). See Appendix D for further discussion.
B. Dissemination trees in synthetic networks
In Fig. 6, we show dissemination trees that we obtain from running the WTM with timers on the LCC of an ER network of size N = 100, expected mean degree z = 6, and a homogeneous threshold of ϕ=0.1 for each node. We give examples with both homogeneous and heterogeneous timers, and we then examine adoption paths and combine them to create a dissemination tree. We place the root of the stem (i.e., the seed node) at the top of the tree, and we place the rest of the nodes in the subsequent levels based on their distance from the root. In Fig. 6(a), we show a dissemination tree when timers are distributed homogeneously with τ = 4. In Fig. 6(b), we show a dissemination tree when the timers are distributed heterogeneously (and, in particular, drawn uniformly at random from {0,1,…,8}). We color the nodes based on their timer values, which range from 0 (white) to 8 (black). We use stars for nodes in stems and disks for nodes in branches. The thick blue edges are part of a stem, and the thin gray edges are part of a branch. When the timers are homogeneous [see Fig. 6(a)], there are more stems (many different ones with the same maximal length), whose length is smaller than the stems in the example with heterogeneous timers [see Fig. 6(b)]. When the timers are heterogeneous, we also observe that the timers of stem nodes tend to be small (lighter colors). As we discussed in Sec. II B, the time that an adoption path terminates is determined by the sum of the timers of the nodes in the adoption path [see Eq. (1)]. Consequently, the mean timer value of the nodes in an adoption path helps determine how fast an adoption spreads in that path. Therefore, the mean timer value of stem nodes being smaller than the mean timer value of branch nodes suggests that an adoption should tend to spread at a faster rate through stems than through branches.
We now consider networks that we obtain from a configuration model [73] and generalized configuration models that include cliques. We construct configuration-model networks by specifying a degree distribution P_{k} and then connecting stubs (i.e., ends of edges) uniformly at random. We then remove all self-edges and replace multi-edges by single edges. To construct networks using a generalized configuration model, we embellish the above configuration model by incorporating cliques. These models, which are modified versions of the ones in Refs [38] and  [68], are specified by P_{k} and a joint distribution γ(k,c) that indicates the probability that a node chosen uniformly at random has degree k and is used to construct a clique of c nodes (i.e., a c-clique) with c−1 of its neighbors. We use a node chosen from the set of degree-k nodes to form a c-clique with probability γ(k,c)/P_{k}. Note that γ(k,c)=0 for k<c−1, as a node with degree k can only be a member of a c-clique if its degree is large enough to link to all c – 1 neighbors in the clique. The difference between our generalized configuration models and those in Refs [36] and  [68] is that we allow a degree-k node that we have already used to construct a c-clique to form an additional c-clique with probability γ(k,c) if it has enough remaining neighbors. (That is, it is possible to choose the same node two or more times.)
In Table III, we show the results of computations in which we examine whether adoptions spread faster through stems or branches in several families of random networks. We consider both configuration-model networks and network families in which we augment configuration-model networks to incorporate local clustering. For all networks in Table III, we start by considering the LCC of configuration-model networks with N = 10 000 nodes and degrees drawn from the Poisson distribution P_{k}=z^{k}e^{−z}/k! with mean z = 6. In the networks, each node has a homogeneous adoption threshold of ϕ=0.1, so a node with the mean degree adopts if one of its neighbors adopts. We use “Config” to denote a standard configuration model; “Congen-3” to denote a generalized configuration model with 3-cliques and with joint distribution γ(k,c)=[(1−α)δ_{c,1}+αδ_{c,3}]P_{k} for k≥3 (where the parameter α determines the edge–clique ratio for a node of degree k≥3); and “Congen-4” to denote a generalized configuration model with 4-cliques and with joint distribution γ(k,c)=[(1−β)δ_{c,1}+βδ_{c,4}]P_{k} for k≥4 (where β determines the edge–clique ratio for a node of degree k≥4).
As we discussed in Sec. IV, the time T to reach steady state for the WTM with heterogeneous timers can be either shorter (e.g., for timers distributed uniformly at random) or longer (e.g., for Gamma-distributed timers) than for a homogeneous timer, but both of our choices of heterogeneous timer distributions have a smaller value than a homogeneous timer for the time t_{0.9} for at least 90% of the nodes to adopt. Additionally, for both distributions of heterogeneous timers, we observe a smaller mean number n of adoption paths at steady state than for a homogeneous timer. This, in turn, results in a shorter mean adoption-path length μ_{l} for homogeneous timers than for heterogeneous ones, because for a fixed network size N, having a larger number of adoption paths leads to shorter mean adoption-path lengths.
The number of adoption paths increases when a node triggers the timers of multiple neighbors. Suppose that a node v_{i} adopts at time t_{vi}, and that it becomes the latest node of a_{vi} adoption paths. If v_{i} triggers k_{vi} neighbors at the next time step t_{vi}+1, the number of adoption paths with node v_{i} increases to k_{vi}a_{vi}. In this way, the number of adoption paths that include a node increases by a factor of the number of neighbors that the node triggers. Therefore, a_{hom}>a_{unif} and a_{hom}>a_{Gam}, and in general we expect a node to trigger more neighbors for the WTM with a homogeneous timer than for the WTM with heterogeneous timers. Note that it is possible for the mean number a of adoption paths in a network to be larger than the mean number r of adopted nodes in a network.
If timers are homogeneous, adoptions spread at the same rate for every adoption path, and adoption paths that terminate at the same time have the same length. However, for heterogeneous timers, adoption paths that terminate at the same time can have different lengths, because adoptions can spread at different rates. Therefore, one expects the lengths of adoption paths to be more diverse for heterogeneous timers than for homogeneous ones. As we see in Table III, the standard deviation σ_{l} of adoption-path lengths is larger for the WTM with heterogeneous timers than with homogeneous timers. That is, σ_{l,unif}>σ_{l,hom} and σ_{l,Gam}>σ_{l,hom} in our simulations.
Goel et_al [74] studied how viral content in large networks tends to have a different spreading pattern from content that does not go viral, and they introduced the idea of “structural virality” to try quantify the virality of content from its spreading pattern. They defined structural virality v as the mean shortest-path length in a dissemination tree [75], where a larger v signifies a larger mean distance between two nodes chosen uniformly at random from a dissemination tree. If a meme goes viral, it is reasonable that the mean distance between randomly chosen nodes should be larger than for memes that do not become viral. We give the structural viralities of dissemination trees in Table III, and our results provide evidence that v is larger for the WTM with heterogeneous timers than with homogeneous ones.
In Table III, we also show steady-state calculations for several stem-specific and branch-specific diagnostics: the mean percentage f_{rs} of stem nodes and mean percentage f_{rb} of branch nodes among the adopted nodes, the mean percentage f_{as} of stems and mean percentage f_{ab} of branches within the adoption paths, and the mean stem length l_{s} and mean branch length l_{b}. Among these quantities, the stem-specific quantities f_{rs} and f_{as} are smaller than the branch-specific quantities f_{rb} and f_{ab} for all families of random networks in Table III. In particular, both f_{rs} and f_{as} for the two types of heterogeneous timers in Table III are less than 1, and they are smaller than the corresponding quantities for a homogeneous timer. For a homogeneous timer, all adoption paths grow at the same rate, so the adoption path (or paths, if there is a tie) that grows for the longest time is the longest adoption path at steady state. Consequently, in this situation, all adoption paths that grow until steady state are stems. However, adoption paths grow at different rates for heterogeneous timers. Therefore, even if a stem terminates when a simulation reaches a steady state, not all adoption paths that grow until a steady state need to be stems. (A stem can terminate before a branch if the sum of the timers of the stem nodes is smaller than the sum of the branch-node timers.) We believe that this is why the stem percentage f_{as} is smaller for the WTM with heterogeneous timers than it is for a homogeneous timer in our results in Table III.
In Table IV, we show (1) the ratio τ_{s}/⟨τ⟩ of the mean τ_{s} of the timer values of nodes in stems to the mean ⟨τ⟩ of the timer values of all nodes and (2) the ratio τ_{b}/⟨τ⟩ of the mean τ_{b} of the timer values of nodes in branches to ⟨τ⟩. For the WTM with a homogeneous timer, both τ_{s,hom}⟨τ⟩=1 and τ_{b,hom}⟨τ⟩=1, so stems and branches grow at the same rate. When the timers are distributed uniformly at random, stems tend to grow at faster rates than the mean rate because τ_{s,unif}⟨τ⟩<1, whereas branches grow at slower rates than the mean rate because τ_{b,unif}⟨τ⟩ is (slightly) larger than 1. Similarly, when the timers are determined using a Gamma distribution, τ_{s,Gam}⟨τ⟩<1 and τ_{b,Gam}⟨τ⟩ is slightly larger than 1. The reason that there is only a very small difference between τ_{b} and ⟨τ⟩ for the heterogeneous timers that we study is that more than 99% of all adopted nodes in these networks are branch nodes (see Table III).
To better understand why the mean τ_{b} is larger than ⟨τ⟩ and the mean τ_{s} is smaller than ⟨τ⟩, it is useful to revisit our discussion from the end of Sec. III about the relationship between the mean timer values of the nodes in an adoption path and the length of that path. In Sec. III, we used Fig. 2(c) to argue that nodes with small timers tend to be part of long adoption paths and that nodes with large timers tend to be part of short adoption paths if (i) a network has a cycle of length at least 4 and (ii) nodes in the network adopt if a single neighbor adopts. The network families in Table III almost always yield networks that satisfy condition (i), and most of the nodes in the networks satisfy condition (ii). Because both conditions tend to be satisfied, we observe for the WTM with heterogeneous timers that stem nodes in the dissemination trees (see Table III) are more likely than other nodes to have timers that are smaller than the mean. Therefore, the ratio τ_{s}/⟨τ⟩ of the mean timer value of stem nodes to the mean timer value ⟨τ⟩ of all nodes is smaller than 1 for the WTM with heterogeneous timers (see Table IV). Depending on the network structure, it is possible for a stem to have nodes with large timers; see Appendix E for details.
In our calculations, stems seem to play a significant role in spreading adoptions to the majority of nodes faster for heterogeneous timers than for a homogeneous timer. To examine the role of stems in the dynamics of the WTM with timers, we conduct the following experiment on the dissemination trees in Tables III and IV. Suppose that we change the timers of the stem nodes of the dissemination tree to the mean value ⟨τ⟩ of the timers (which is μ_{τ}=4 in our example) without changing the dissemination tree, thus preserving the adoption paths. The times that the stem nodes' neighbors in the dissemination tree adopt also change, as the time of adoption of a node in an adoption path is determined by the sum of its timer and the time of adoption of its predecessor node. (Note that we are not rerunning the WTM dynamics; instead, we are adjusting an adoption curve after a simulation.)
In Fig. 7, we illustrate how the adoption curves change as a result of changing the stem-node timers. The dark orange and dark blue curves are both adoption curves for the WTM with heterogeneous timers on configuration-model networks with a Poisson degree distribution with mean z = 6. The dark orange curve is for uniformly-randomly-distributed timers, and the dark blue curve is for Gamma-distributed timers. We change the stem-node timers for these curves, and we show the resulting adoption curves with corresponding light colors. To facilitate our comparison, we include the green adoption curve (marked with crosses) for a homogeneous timer. We observe that intersections between the light-colored curves and the green curve occur earlier than the corresponding ones between the dark-colored curves and the green curve. We also show in Table V how much the times to reach certain fractions ρ^{*} of nodes, calculated using Eq. (5), change when we adjust the timers of the stem nodes. From both Fig. 7 and Table V, we observe that the adoption processes for the WTM with heterogeneous timers are delayed by changing the timers of stem nodes, even though they constitute a tiny fraction of all nodes in the networks. See Appendix F for further discussion. Although we have examined this feature for specific families of networks, we believe that it is relevant much more broadly. For example, see our discussion of dissemination trees on real-world networks in Sec. VI C.
C. Dissemination trees on real-world networks
We now investigate dissemination trees for the WTM with timers on the LCC of five Facebook100 networks [69,70]. Each network represents a Facebook friendship network at one university in the United States. In each of these networks, a node is an individual, and an unweighted, undirected edge represents a Facebook friendship between a pair of individuals. The networks in Table VI have different mean degrees, but they all have heavy-tailed degree distributions. To ensure that a node with degree equal to the mean degree adopts if a single one of its neighbors has adopted, we consider a homogeneous adoption threshold of ϕ=0.01.
Although the Facebook100 networks have different structural characteristics (e.g., in terms of local clustering and community structure) than the random-graph models, in each of the five networks, we obtain qualitatively similar results as in the random-graph ensembles (see Table VI). For example, the numbers n of adoption paths are larger for the WTM with homogeneous timers than with heterogeneous timers. Moreover, for heterogeneous timers, the lengths l_{s} of the stems and the lengths l_{b} of the branches are both larger than for homogeneous timers. Additionally, the mean timers τ_{s} for stems are smaller than those (τ_{b}) for branches, and the mean percentage f_{as} of adoption paths that are stems is smaller than that (f_{ab}) of those that terminate at the end of a branch. Because of the small timer values, stems (which constitute a small percentage of adoption paths) tend to grow faster than branches. The observed characteristics of the stems and branches for the five Facebook100 networks are similar to those of the random networks that we studied previously. Importantly, when timers are heterogeneous, stems grow faster and become longer, initiating adoption spreading in branches earlier than if the timers are homogeneous. Consequently, a majority of nodes adopt earlier for the WTM model with heterogeneous timers than with a homogeneous one (e.g., t_{0.9,unif}<t_{0.9,Gam}<t_{0.9,hom}). See Table VIII.
VII. CONCLUSIONS
In this paper, we investigated how adoption delays of individuals can affect the spread of adoptions in a network. We explored this idea by augmenting the Watts threshold model (WTM) with timers on the nodes of a network, and we examined how incorporating homogeneous and heterogeneous timers can affect the dynamics of a contagion. For the WTM with homogeneous timers, neither the adoption order of nodes nor adoption paths change, because a homogeneous timer simply delays the adoption of each individual by the same amount of time (once it has decided to adopt). However, heterogeneous timers can change both the adoption order of nodes and adoption paths, and the precise effects depend in an interesting way on both network structure and timer distribution. For example, we observed that incorporating heterogeneous timers into the WTM can either accelerate or decelerate the time to steady state in comparison to incorporating a homogeneous timer. However, in our calculations using two different types of heterogeneous timer distributions (specifically, uniformly random timers and timers determined using a Gamma distribution and then rounded down to an integer), we found that the majority of nodes in networks adopt earlier with heterogeneous timers than with homogeneous ones. We speculate that, for heterogeneous timers, the stems—the longest adoption paths in a dissemination tree—play a significant role for the fast spread of adoptions to the majority of nodes, even though there are many more branch nodes than stem nodes. To support our hypothesis, we examined what happens to our adoption processes when we change the timers of stem nodes to the mean value of the timers, and we found that they are delayed noticeably, even though these nodes constitute a tiny fraction of the adopted nodes in the examined networks. We also developed a pair approximation for the WTM with timers that agrees reasonably well with our numerical simulations of the temporal evolution of the fraction of adopted nodes.
In future work, we seek to investigate real-world observations of the spread of information, memes, innovations, misinformation, and other phenomena on networks using models that include latencies (i.e., timers) in addition to influence thresholds. People can be late adopters for a variety of reasons (e.g., hard to convince, easy to convince but lazy, and so on), and incorporating timers into contagion models should be helpful for exploring different mechanisms of late adoption and their possible consequences for forecasting virality. In these studies, it will be important to augment a variety of different spreading models with timers and to incorporate timers into spreading models in different ways. (For example, insights from Ref [76] suggest other possibilities for how to incorporate timers.) The deterministic update rule in the WTM makes it particularly suitable for a first foray into studying timers in spreading processes, and that is why we used it in the present paper. It will be especially interesting to incorporate timers into stochastic spreading processes to examine how they change spreading behavior and virality forecasts.
Mathematical modeling of social contagions is a useful framework for studying the spread of phenomena such as ideas, memes, misinformation, and “alternative facts” on networks [1–3]. In most models, including classical threshold models [4–6] and their generalizations, the rules for updating node states depend only on the states of the nodes' nearest neighbors. We introduce a temporal element into such update rules by incorporating a timer into our spreading condition to model the tendency of individuals to wait for some amount of time before they adopt a behavior. This idea is relevant for numerous models for social contagions (and other spreading processes), but for concreteness, we incorporate timers into the popular Watts threshold model (WTM) [4,5] of social influence. We investigate the dynamics of the WTM with timers for both homogeneously-distributed and heterogeneously-distributed timers. We derive a pair approximation that gives good agreement with numerical simulations for the temporal evolution of adoptions.
Over the decades, and especially recently amidst the surge in data availability and richness, it has become increasingly popular to take quantitative approaches when studying sociological questions [7–11]. Modeling efforts have drawn from mathematical, statistical, and computational frameworks [12]; and the study of mechanistic models that incorporate data in a meaningful way (see Ref [13] for an example of data-driven mechanistic modeling) can give insights into both existing observations and the forecasting of future dynamics. Indeed, there have been numerous studies of the spread of opinions, actions, memes, information, misinformation, “alternative facts,” and other phenomena in populations in disciplines such as sociology, economics, computer science, physics, and many others [2,3,14–17]. By analogy with the spread of infectious diseases in a population, spreading phenomena—including the spread of defaults of banks, norms in populations, and products or new practices in populations—are often modeled as contagions on a network. To distinguish between different mechanisms in social and biological contagions, the former are often construed as examples of “complex contagions,” and the latter are often construed as examples of “simple contagions.” [14,18–22]
The quantitative study of spreading phenomena in social networks has a long history [4,23–27]. In recent years, studies of social influence have tended to focus on large social and/or communication networks; they have taken advantage of the increased availability of microblogging data sets (e.g., using data from Twitter) with relational information that enables one to incorporate network effects into models [28,29]. In studying social influence, one often explores what conditions yield cascades [30], in which a small seed of activity leads to a large change in a network. In the study of spreading models, a common way to quantify cascades is to examine when an infinitesimally small seed fraction of adopted nodes generates a nonvanishing mean cascade size (of adopted nodes) as the total number N of nodes in a network becomes infinite [3,31]. In practical applications with empirical data, one often measures cascade sizes in other ways (such as by calculating how long it takes for a given fraction of the nodes in a network to adopt). See the discussion of cascade conditions in Ref [3].
A particularly popular framework for studying the spread of behavior in social networks are threshold models, in which nodes update their states if the amount of peer pressure from their neighboring nodes (usually just nearest neighbors) matches or exceeds some personal threshold. The simplest such model is the Watts threshold model (WTM) [5], which uses a linear update rule that is very similar [32] to the one introduced by Granovetter [27] and which was previously examined on networks by Valente [4,33]. (It is also related to bootstrap percolation [34].) The WTM uses a “threshold” to represent the latent tendency of an individual to adopt an innovation (or become infected, if one wants to use more biological terminology) when at least some fraction of its neighbors has adopted the innovation [6]. Threshold models of adoption were first studied by sociologists, and the notion of a threshold incorporates a sociological idea [27] that articulates that people exhibit inertia in adopting innovations as a way to reduce cost in making decisions. The WTM is appealing to study in part because of its mathematical tractability [3,35] and in part because it incorporates simple notions of peer pressure, social reinforcement (because multiple neighbors having adopted an idea increases the peer pressure for a node to adopt), and personal resistance to peer pressure [36]. It thereby provides a simple model of social influence in a network.
The WTM and its generalizations have been studied from many perspectives. Such research includes a considerable amount of work—both analytical and numerical—on WTM dynamics on random networks with various characteristics, including local clustering [37–39], community structure [31], degree–degree correlations [40], and communities with intercommunity correlations [41]. The WTM has also been generalized to dynamics on temporal networks [42] and multiplex networks [43,44]. In the study of networks constructed from empirical data, the WTM has been used to examine phenomena such as protest recruitment [28] and adoption of technology [4].
There are also many variants of the WTM that caricature adoption behavior in different ways. These variants include thresholds that rely on the total number of neighbors [45], a multi-stage threshold model [46], on–off thresholds [47], threshold models with memory [48–50], and a threshold model that incorporates synergistic effects into the rule for updating node states [51]. Different variants of the WTM have adoption rules that codify behavioral latency (i.e., a delay before adopting a behavior) in different ways, and different adoption rules can generate distinct patterns of temporal growth of the fraction of adopters [28,52,53].
In the present paper, we incorporate response times into a threshold model. Even if a threshold is met or exceeded, there is often a delay until a behavior is adopted. There are many possible reasons why somebody may wait before adopting an idea, buying a product, etc. Possibilities include unawareness of an innovation, awareness but not yet deciding to adopt something due to personal inertia or other factors, a “decision” to adopt something but laziness before changing behavior [54], and so on. In this paper, we introduce a timer to model the tendency of individuals to wait for some amount of time between deciding to adopt a behavior and actually adopting it, and we investigate how the incorporation of timers (especially ones that are heterogeneous in a population) changes the qualitative dynamics of the WTM.
The rest of our paper is organized as follows. In Sec. II, we generalize the WTM so that nodes have both an associated adoption threshold and an associated timer. We illustrate the effects of incorporating timers on small networks in Sec. III and on large networks in Sec. IV. In Sec. V, we use a pair approximation to analyze the temporal evolution of adoptions in the WTM with timers. In Sec. VI, we examine “adoption paths” for our model on large networks. We conclude in Sec. VII and include further discussions and calculations in appendices.
According to the Oxford English Dictionary, a “timer” is an automatic mechanism for activating an object at a preset time [55]. We apply this concept to a discrete-stage social-influence model on a network by defining a “timer model” as a model in which a node adopts an innovation after a preset number of discrete time steps, where a countdown starts after some other condition (e.g., the peer pressure on the node matching or exceeding the node's stubbornness threshold) has been met. In a timer model, each node in a network has an associated timer that is drawn from some probability distribution. Once the timer of a node is “triggered” (e.g., when the node meets some adoption condition), its counter starts counting down to 0 the next time the node is updated, and the node changes its state when its timer hits 0. We use a discrete-time setting, so each timer starts decrementing one time unit after all other adoption conditions are satisfied. For example, if node v_{i}'s timer τ_{vi}∈ℤ_{≥0} is triggered at time t′_{vi}, it changes its state at time t_{vi}=t′_{vi}+τ_{vi}+1, as that is when its timer countdown reaches 0.
If there is no adoption condition other than a timer-adoption condition, the timers of all nodes are triggered at time step t = 0 (so they start decrementing at t = 1), and the adoption process terminates when the largest timer hits 0. Therefore, the timer of a node is equal to the time of adoption of the node, and the cumulative distribution function of the timer distribution describes the adoption process; the network structure plays no role in this case. Such a naive timer model already illustrates Everett Rogers's ideas about the spread of innovations [1,56], in which different adopter categories (innovators, early adopters, early majority, late majority, and laggards) are determined only by their different adoption times.
We are interested in incorporating the idea of timers (especially heterogeneous ones) into models of spreading. For concreteness, we use the WTM.
One can add a timing mechanism to any existing social-influence model in which nodes adopt an innovation based on the states of other nodes in a network. Let us consider what happens if we add such a mechanism to the WTM. The WTM is a binary-state model [5,35], so a node can be in state s∈{0,1}. The WTM has monotonic dynamics, as a node's state can change from 0 to 1, but any node that attains state 1 remains at that state forever. When a node changes its state from 0 to 1, we say that it “adopts” some behavior or idea. The adoption condition of a node in the WTM is that at least a fraction ϕ_{vi} of its neighbors have previously adopted the behavior. The parameter ϕ_{vi} is the “threshold” for node v_{i}, and the condition that at least this fraction of v_{i}'s neighbors have adopted is the threshold-adoption condition. In the WTM with timers, a node v_{i} must meet its threshold-adoption condition as well as its timer-adoption condition to adopt a behavior: the fraction of adopted neighbors of node v_{i} must be at least its threshold ϕ_{vi}, and then its timer τ_{vi} must hit 0. Update rules for nodes can be either synchronous or asynchronous [3]. In our study, we use synchronous updating, in which all nodes are updated simultaneously during each discrete time step.
We study the WTM with timers on undirected, unweighted networks; and we trace what we call adoption paths, which are acyclic directed paths in a network through which an adoption is transmitted (see Fig. 1). A directed path in a network is a sequence (v_{1},v_{2},…,v_{n}) of nodes in which all nodes are distinct, and for i∈{1,…,n−1}, node v_{i} is adjacent to node v_{i+1} via an edge from v_{i}. The length l=n−1 of a path is the number of edges that comprise the path. In an adoption path, node v_{i} is adjacent to node v_{i+1} if and only if the adoption of v_{i} triggers the timer τ_{vi+1} of v_{i+1}. We call v_{1} the “root” of the adoption path, as it initiates the spread of adoptions [57]. The time t′_{vi} at which the timer of a node v_{i} is triggered is the sum of the timers of all preceding nodes in the adoption path plus the number of synchronous time steps to trigger the timers of the preceding nodes:
In Sec. VI, we use the unidirectional property of adoption paths to scrutinize how adoptions spread on large networks for the WTM with timers.
We examine the adoption paths in an adopted component, which is a component in a network that consists of nodes that adopt at steady state and the edges between those nodes. An adoption path in the WTM with timers terminates when its last node adopts; no other nodes can be triggered as a result this node adopting. In Fig. 1, we show an example of different adoption paths, which can terminate either with an adopted node that has degree 1 or simply because it does not trigger any of its neighbors. The dark brown node v_{0} in the center is a seed node that has state 1 at time t = 0, and the other nodes are in state 0 at t = 0. Each node v_{i} is assigned a timer τ_{vi} and a threshold ϕ_{vi}, where i∈{1,…,5}. Node v_{0} is the seed node, so it starts in the adopted state (and does not need a timer or threshold value). Nodes v_{i}, for i∈{1,…,5}, have threshold ϕ=0.5, so v_{1},…,v_{5} are triggered once even one of their neighbors adopts. In Fig. 1, the number written above each node indicates its timer value. If we run the WTM with timers on this network, we obtain three adoption paths: (v_{0},v_{1},v_{2}),(v_{0},v_{3},v_{4}), and (v_{0}, v_{5}). The lengths of these paths are 2, 2, and 1, respectively. All adoption paths grow from the seed v_{0}, so it is the root of all adoption paths. Each arrow represents the spread of an adoption through a distinct adoption path. The orange adoption path (v_{0},v_{1},v_{2}) terminates at time T_{(v0,v1,v2)}=4; the last node in the path has degree k = 1, so it has no more neighboring nodes to influence. The green adoption path (v_{0},v_{3},v_{4}) terminates at time T_{(v0,v3,v4)}=5, and the blue adoption path (v_{0}, v_{5}) terminates at time T_{(v0,v5)}=6. Each of these adoption paths illustrates one of two possible scenarios: in the blue adoption path, all neighbors of the last node are in state 1 before the last node adopts; in the green adoption path, all neighbors of the last node are in state 0, but the timers of all neighbors have already been triggered. The former scenario is also a condition for the termination of an adoption path in the original WTM, but the latter scenario is a novel feature of the WTM with timers.
Clearly, adding timers to the WTM delays adoption processes. The presence of a homogeneous timer merely delays the adoption of each node for exactly the same number of time steps. Suppose that we run the WTM without timers on an arbitrary network and that it takes T_{WTM} time steps to reach a steady state, in which no more nodes can adopt. On the same network, if we run the WTM with homogeneous timers τ_{hom}, it now takes T_{WTM}(τ_{hom}+1) time steps to reach a steady state. However, if timers are heterogeneous, the adoptions of different nodes are delayed by different amounts of time, and it is less straightforward to calculate the time to attain steady state in relation to T_{WTM}.
We calculate the time T_{hom} to reach steady state for the WTM with homogeneous timers and the mean time ⟨T_{het}⟩ to reach steady state for the WTM with heterogeneous timers for the three small example networks in Fig. 2. Suppose that all nodes have a homogeneous threshold of ϕ=0.1, which is small enough so that any node in Fig. 2 is going to adopt the state s = 1 once even one of its neighbors adopts. Using a homogeneous threshold enables us to disentangle the effect of timers from the effect of a heterogeneous threshold. Because all nodes have the same positive threshold, we need a seed node (labeled v_{0} in Fig. 2) in state 1 at time t = 0 to initiate the spread of adoptions.
In Fig. 2(a), we show a one-dimensional (1D) lattice with a seed node at its left end, so adoption occurs from left to right. The time T to reach the steady state (in which all nodes adopt) is
where τ_{vi} is the timer of node v_{i}. We need to add 3 because there are 3 nodes other than the seed, and it takes 1 synchronous time step to start a countdown after a timer is triggered. In Table I, we show results for this network when the nodes have a homogeneous timer with τ_{hom}=4 and heterogeneous timers τ_{het}∈{2,4,6} (note that the mean timer value is the same as in the homogeneous case), and we compare the time T_{hom} to reach steady state for the WTM with homogeneous timers to the mean time ⟨T_{het}⟩ to reach steady state over all possible timer configurations of the WTM with heterogeneous timers. In this example, the time to reach steady state is simply a function of the sum of the timers of all nodes, because adoptions spread from each node to its neighbor on the right. Therefore, for a given mean timer value, the time to reach steady state is the same regardless of whether the timer values are distributed homogeneously or heterogeneously. That is, the ratio ⟨T_{het}⟩/T_{hom}=1. Note that neither the adoption order of the nodes nor the adoption path (v_{0},v_{1},v_{2},v_{3}) can change even if the timers are distributed heterogeneously in the 1D lattice. Adoption always starts from the left end, and it spreads to the right one node at a time, regardless of how the timers are distributed.
Using the same homogeneous threshold value ϕ=0.1 as above, let us now consider what happens in a 4-clique [see Fig. 2(b)]. In a 4-clique, all nodes are adjacent to each other, so v_{1}, v_{2}, and v_{3} are triggered simultaneously by the seed node v_{0} at t = 0. Therefore, with timers, the time T to reach steady state is
We need to add 1 because it takes 1 synchronous time step to start a countdown after a timer is triggered. In a 4-clique, the adoption paths (v_{0}, v_{1}), (v_{0}, v_{2}), and (v_{0}, v_{3}) do not change for any assignment of timers. Moreover, the spread of adoptions in different adoption paths are independent of each other. Therefore, the adoption path that includes the node with the largest timer terminates last, determining the time to reach steady state. Consequently, T_{het} is always larger than T_{hom} for a 4-clique if the mean of the timer distributions is the same for the homogeneous and heterogeneous timers [so ⟨T_{het}⟩/T_{hom}>1 for row (b) in Table I]. This result holds for k-cliques with any value of k ≥ 3. The time to reach steady state in a k-clique is determined by the largest timer, so ⟨T_{het}⟩/T_{hom}>1 if the mean of the timer distributions is the same.
The example in Fig. 2(c) has a seed node adjacent to a square. The adoption of node v_{1} triggers the timers of nodes v_{2} and v_{3} simultaneously, and whichever one adopts earlier triggers the timer of node v_{4}. The time T to reach steady state is
We need to add 2 if adoption paths (v_{0},v_{1},v_{3}) or (v_{0},v_{1},v_{2}) determine the time to reach steady state, and we need to add 3 if adoption paths (v_{0},v_{1},v_{2},v_{4}) or (v_{0},v_{1},v_{3},v_{4}) determine the time to reach steady state. If the timers are homogeneous, the adoption of node v_{1} triggers the timers of both nodes v_{2} and v_{3} simultaneously, and the simultaneous adoption of v_{2} and v_{3} triggers the timer of v_{4}, so the adoption paths are (v_{0},v_{1},v_{2},v_{4}) and (v_{0},v_{1},v_{3},v_{4}). However, if the timers are heterogeneous and the timers of v_{2} and v_{3} are different, there are changes in both the adoption order of the nodes and the adoption paths. Suppose, for example, that the timer of node v_{2} is smaller than that of node v_{3}. In this case, node v_{2} adopts before v_{3}, and it triggers the timer of v_{4}; therefore, the adoption paths are (v_{0},v_{1},v_{2},v_{4}) and (v_{0},v_{1},v_{3}), and the one that takes a longer time to terminate determines the time to reach steady state. In Table I, we compare the time T_{hom} to reach steady state for a homogeneous timer τ_{hom}=4 and the mean time ⟨T_{het}⟩ to reach steady state for heterogeneous timers τ_{het}∈{1,3,5,7}. We see that ⟨T_{het}⟩<T_{hom}, in contrast to the other examples in Fig. 2.
A network with a fixed seed node and fixed threshold assignments has different adoption paths for different distributions of timers only if the network includes at least one cycle with 4 or more nodes. Consider a node v_{i} that is triggered by the adoption of node v_{j} in adoption path X for one timer distribution and by the adoption of node v_{k} (with v_{k}≠v_{j}) in adoption path Y for another timer distribution. All adoption paths—regardless of the timer distribution—must share the same root (i.e., the seed node), because all adoptions spread from the seed. Therefore, adoption paths X and Y must share at least two nodes: v_{i} and the seed node. The network must have a cycle that includes node v_{j} from X, node v_{k} from Y, the seed node, and node v_{i}. Therefore, a network that has different adoption paths for different distributions of timers must have a cycle of length at least 4.
If the thresholds of all nodes in a network are sufficiently small so that any node will adopt if at least one of its neighbors has adopted, an adoption path with nodes that have small timers tends to be long, and one with nodes with large timers tends to be short. Suppose that a node v_{i} adopts if any one of its neighbors v_{j}∈Γ(v_{i}) adopts, and suppose further that each neighbor belongs to a different adoption path of the same length. The time tv_{i}″ at which node v_{i}'s timer is triggered is then
where t′_{vj} is the time that the timer of v_{j} is triggered [see Eq. (1)]. Node v_{i} thereby becomes a part of the adoption path that has the smallest sum of node timers, and this adoption path becomes longer than the other ones. Therefore, in networks with cycles of length at least 4 and heterogeneous timers, adoption paths with small mean timers tend to be long and adoption paths with large mean timers tend to be short. For example, in Fig. 2(c), if v_{2} has a smaller timer than v_{3}, then v_{2} is part of a longer adoption path than v_{3}. We will use the relationship between the length of an adoption path and the timer values of its nodes in Sec. VI B when we investigate long adoption paths with small mean timer values in large random networks. To compel nodes with small timers to be part of long adoption paths, it is useful for their thresholds to be sufficiently small to adopt if at least one of their neighbors adopts. Otherwise, nodes with large timers can be part of longer adoption paths. See Appendix A for more details.
We now incorporate both homogeneous and heterogeneous timers into a spreading process on large networks. Specifically, we examine the WTM with a timer on the largest connected component (LCC) of random networks with N = 10 000 nodes (i.e., of “size” 10 000). For many of our random networks, we use a homogeneous threshold ϕ in which any node whose degree is larger than or equal to the graph's mean degree needs only a single adopted neighbor to be triggered (as in the small networks in Fig. 2). Because all nodes have the same threshold, we choose a seed adopted node uniformly at random at t = 0 to initiate the spread of adoptions. For our simulations, we report sample means of many realizations to give an idea of ensemble expectations in the N→∞ limit.
We first consider the WTM with timers on the LCC of G(N, p) Erdős–Rényi (ER) networks with N = 10 000 nodes and edge probability p = 0.0006 (and thus an expected mean degree of z = 6). We also suppose that all nodes have a homogeneous threshold of ϕ=0.1. We compare the adoption curves—the progress of the adopted fraction ρ(t) of nodes at time t—for homogeneous and heterogeneous timers. Note that the results that we illustrate in this section also arise when we use other values of p and ϕ.
In Fig. 3(a), the pink curve (marked with plus signs) shows the adoption process of the WTM without timers, and the green curve (marked with crosses) shows the adoption process of the WTM with a homogeneous timer τ = 4. Let t_{ρ^{*},WTM} denote the time to reach a fraction ρ^{*} of adopted nodes for the WTM without timers. The time to reach a fraction ρ^{*} of adopted nodes for the WTM with a homogeneous timer is (τ+1)t_{ρ^{*},WTM}, and the presence of a homogeneous timer leads to homogeneous gaps between sets of adoptions as new nodes are triggered. Therefore, as one can see in Fig. 3(a), the green adoption curve has a stair-like shape. If we employ asynchronous updating rather than synchronous updating (so that we choose some number of nodes uniformly at random at each time step to update their states [3]), the change in dynamics is not simply a delay for each adoption, as the randomness in node choice changes the adoption order [58]. See Ref [59] for a discussion of discrete versus continuous dynamics in contagion models on networks. (One models continuous spreading dynamics by using asynchronous updating.)
The orange curve (marked with squares) in Fig. 3(a) is the adoption curve of the WTM with heterogeneous timers on ER networks of size N = 10 000 in which we select timers τ∈{0,1,…,8} uniformly at random. The expected mean μ_{τ} of the timers is 4, which is the same as for the homogeneous timer in the figure. The obvious difference for the case of heterogeneous timers is that the adoption curve is now much smoother than it is for a homogeneous timer. (Compare the orange and green curves.) This arises amidst the change in the adoption order from the heterogeneous timers; nodes that adopt simultaneously when timers are homogeneous now adopt at different times, and there are now fewer nodes that adopt simultaneously. (We also expect that some nodes that adopt at different times with a homogeneous timer now adopt simultaneously.) We also see that the time T_{unif} to reach steady state (vertical orange dashed line) when the heterogeneous timers are distributed uniformly at random occurs earlier than the time T_{hom} to reach steady state (vertical green dashed line) for homogeneous timers. In ER networks, we thus see that uniformly random heterogeneous timers yield a faster adoption process than homogeneous timers. Increasing the heterogeneity in the distribution of the timers accelerates the adoption process even further [see Fig. 3(b)].
Importantly, heterogeneously-distributed timers do not necessarily yield a faster adoption process than homogeneous timers. For example, the blue curve (marked with diamonds) in Fig. 3(a) shows the adoption process of the WTM with timers given by integers that we determine by rounding down from numbers drawn uniformly at random from a Gamma distribution [60] with the same mean μ_{τ}=4 as the uniformly-randomly-distributed timers and with standard deviation σ_{τ}=4. The vertical blue dashed line marks the time T_{Gam} at which the blue adoption curve reaches a steady state, and we observe that it is located to the right of the green dashed line T_{hom}. In Fig. 3(c), we show that increasing the standard deviation of the Gamma distribution decelerates the time to reach steady state for ER networks, in stark contrast to our observations in Fig. 3(b) for timers that are distributed uniformly at random.
Although the time T_{het} to reach a steady state for heterogeneous timers can become either larger or smaller than T_{hom}, depending on the timer distribution, we observe that the majority of nodes adopt noticeably earlier when the timers are distributed either uniformly at random or using a Gamma distribution (and then rounded down to an integer) [61] than they do for homogeneous timers. In Table II, we compare the time t when the adopted fraction ρ(t) reaches at least a certain fraction ρ^{*} of nodes in networks when incorporating a homogeneous timer (t_{hom}), heterogeneous timers distributed uniformly at random (t_{unif}), and heterogeneous timers determined using a Gamma distribution (t_{Gam}). We update nodes synchronously, so we do not in general have exactly the adoption fraction ρ(t)=ρ^{*} at any time. In this case, we calculate the time T′ at which the fraction ρ(T′) of adopted nodes first exceeds ρ^{*}, and we then estimate the time t_{ρ=ρ^{*}} at which the fraction of adopted nodes reaches ρ^{*} to be
As we show in Table II, the fraction ρ(t) of adopted nodes tends to increase faster when incorporating either uniformly-randomly-distributed timers or Gamma-distributed timers than for homogeneous timers, although Gamma-distributed timers take a longer time to reach the steady-state adoption fraction ρ_{∞}. This illustrates that a cascade—the spread of adoptions from a small seed fraction of a network's nodes to a much larger fraction of nodes—can occur earlier for heterogeneous timers than for homogeneous timers. In Sec. VI, we investigate adoption paths and give evidence for how incorporating heterogeneous timers in the WTM can make the majority of nodes adopt earlier than when considering homogeneous timers.
We present an analytical approximation for the temporal evolution of the fraction of adopted nodes of the WTM with timers. To do this, we use a pair approximation, which has often been applied to the WTM and its variants [3,31,38,46,62]. A pair approximation of the WTM was first developed by Gleeson and Cahalane [62], who built on a method to study the zero-temperature random-field Ising model on Bethe lattices [63]. Gleeson and Cahalane's pair approximation agrees well with the temporal evolution of the WTM, and it takes into account pairwise interactions between nodes [64]. We generalize their pair approximation to examine the temporal evolution of the adopted fraction of nodes in the WTM with timers.
We consider a pair approximation of the WTM for undirected, unweighted networks. We assume that our networks are locally tree-like, so that, asymptotically, cycles can be ignored (and there should be few short cycles in empirical networks) [65]. Using these assumptions, it has been shown [35,62] that one can approximate the evolution of the fraction ρ(t) of adopted nodes in a network by calculating the probability that a node chosen uniformly at random is in the adopted state at time t.
To calculate the probability of a node to adopt, we first rearrange a network into a tree with the chosen node at the top level (i.e., level ∞) and its neighbors on the next level (see Fig. 4). The position of a node in the tree is determined by the distance between it and the top-level node. A node's “parent” is a neighbor located one level higher, and its “children” are its neighbors located one level lower.
Because the threshold-adoption condition is that there are at least the threshold fraction of adopted neighbors, the probability of the top-level node to adopt is determined by the fraction of adopted children, whose probability of adoption is in turn determined by their children' adoption status, and so on. We thus write
where ρ_{0} is the fraction of seed nodes, k is degree, P_{k} is the probability that the node degree is k (i.e., {P_{k}} is the degree distribution), m is the number of adopted children, and F(m, k) is the (neighborhood-influence) response function [38,66,67], which corresponds to the probability that a node satisfies the threshold-adoption condition for given values of m and k. As we discussed in Sec. II, the threshold-adoption condition of a node v_{i} is that the fraction m/k of adopted neighbors is at least its threshold ϕ_{i}. Therefore, for the WTM, the response function F(m, k) is the probability for a node to have a threshold lower than m/k; we can calculate this probability from the cumulative distribution function of the thresholds. Finally, the term q_{n}(t) is
where z is the mean degree of a network. Equation (7) gives the probability that a node at level n of the tree has adopted at or before time t (i.e., that it is in the adopted state at time t), conditional on its parent node at level (n+1) being unadopted (i.e., not having adopted). The rationale behind the formula for q_{n}(t) is as follows. A node v_{i} chosen uniformly at random at level n is in the adopted state if either
• the node is a seed, which occurs with probability ρ_{0};
• or the node is not a seed, which occurs with probability (1−ρ_{0}), but it meets the threshold-adoption condition at or before time t.
the node is a seed, which occurs with probability ρ_{0};
or the node is not a seed, which occurs with probability (1−ρ_{0}), but it meets the threshold-adoption condition at or before time t.
The factor k – 1 comes from the fact the node has an unadopted parent at level (n+1), so a node with degree k and threshold m/k should have m adopted nodes among the k – 1 child nodes at level n – 1; this yields the term (k−1m)q_{n−1}(t){m}[1−qn−1(t)]{k−1−m}. Finally, we need to sum over all possible k, because the nodes at level n have various degrees that follow the degree distribution {P_{k}}. One reaches a node at level (n−1) by following an edge from a node at level n to a child at level (n−1), so we use the excess degree distribution {kP_{k}/z}.
The above pair approximation shows good agreement with numerical simulations of the WTM [35,62], especially in large networks that are locally tree-like. This pair approximation has been generalized to several situations, including the WTM on networks with community structure (including with heterogeneous communities) [31,41] or other forms of clustering [38,68].
We cannot simply use (6) and (7) for the WTM with timers, as a timer affects the time that a node adopts. Therefore, we need to understand the effect of timers on node adoptions and modify the pair-approximation equations accordingly. In the WTM with timers, a node with timer τ waits τ time steps after its threshold fraction of neighbors have adopted before it adopts (where the countdown starts one time step after its threshold-adoption condition is satisfied). In other words, the adoption of a node is determined by both (i) its timer τ and (ii) the fraction of its neighbors that are in the adopted state τ time steps before the current time. We need to consider both of these facets to derive a pair approximation for the WTM with timers.
The condition associated with (i) is determined by the response function G(m,k,τ), which indicates whether a node satisfies both its threshold-adoption condition and its timer-adoption condition. The response function G(m,k,τ) is the probability that a node has a threshold less than m/k and has timer τ. It is given by
where F(m, k) is the response function of the WTM and C_{τ} is the cumulative distribution function of the timers.
One satisfies the condition associated with (ii) if at least a fraction m/k of the children at level (n−1) are in the adopted state τ time steps before the current time t. The probability that a child at level n – 1 is in the adopted state τ time steps ago is q_{n}(t−τ). Combining the conditions from (i) and (ii), we can express the adoption condition of a node with degree k, threshold m/k, and timer τ at time t as
Similar to Eqs. (6) and (7), we need to sum over all m, k, and τ. We thereby obtain
As shown in Fig. 3(a), a numerical evaluation (solid curve) of the algebraic equations (6) and (7) derived from our theory agrees reasonably well with direct numerical simulations (points) of the WTM with timers for ER networks. We also perform our approximation for the WTM with timers on real-world networks. We use two Facebook100 networks [69,70] in Appendix B. Note that our assumption for the pair approximation that a network has a locally tree-like structure often does not hold for real-world networks, which routinely have significant local clustering and community structure. The Facebook100 networks have both of these features [70], although the aforementioned pair approximation for the WTM without timers nevertheless often yields good agreement with direct numerical simulations on most of these networks [65].
One can determine a cascade condition [5] by linearizing Eq. (11). For a given mean threshold and mean degree in a network, a cascade condition gives a criterion for when one expects to observe a global cascade [5,62], in which a small seed fraction ρ_{0} of adopted nodes results in a large value of ρ_{∞}=limt→∞ρ(t). Because the WTM dynamics are monotonic, if a node adopts in the limit t→∞, the node also adopts in the WTM with timers in the limit t→∞. Consequently, in the t→∞ limit, q_{n}(t) of the WTM with timers and q_{n}(t) of the WTM yield the same value q_{n}(∞). Therefore, the cascade condition for the WTM with timers is identical to that for the WTM without timers. In Appendix C, we show a detailed calculation of the cascade condition for the WTM with timers.
In Sec. II, we argued that the WTM with a homogeneous timer τ_{hom} has exactly the same adoption paths as in the WTM without timers, because a homogeneous timer does not change the adoption order of nodes, but instead merely delays adoption times (once the threshold-adoption condition is satisfied) uniformly by τ_{hom}. Therefore, the time T_{hom} to achieve a steady state is delayed to T_{hom}=T_{WTM}(1+τ_{hom}), where T_{WTM} is the time to reach steady state when there are no timers. However, if the timers are distributed heterogeneously, the adoption order of nodes can change, so adoption paths can also change (depending on the network structure). Furthermore, the relationship between the time T_{het} to reach steady state for heterogeneous timers and T_{WTM} is more complicated than that between T_{hom} and T_{WTM}. In Sec. IV A, we observed from simulations on ER networks that the WTM with timers distributed uniformly at random and timers determined using a Gamma distribution yield earlier adoptions for the majority of nodes than is the case for a homogeneous timer with the same mean (see Table II). In this section, we explore this issue in depth by investigating adoption paths in the WTM with timers for both synthetic and real-world networks.
As we discussed in Sec. II, all adoption paths grow from the seed, so the seed is the root of all adoption paths. Among the adoption paths, which have various lengths, we pick a longest adoption path at steady state. We use the term stem to indicate a longest adoption path, where we exclude the seed node from the stem. The nodes in a stem of adoption spreading are called stem nodes. If there are two or more adoption paths that both have the largest length, we consider all of them to be stems. The other adoption paths terminate at the ends of branches. In our terminology, we exclude stem nodes and the seed node from the branches. The nodes in a branch of adoption spreading are called branch nodes. The main difference between stems and branches is that stems grow from a seed node, whereas branches can grow from either a stem or a seed node.
We give an example of a stem and branches in Fig. 5. Suppose that we run the WTM with timers on the network in Fig. 5(a) with node v_{0} as a seed and that we obtain five adoption paths: (v_{0},v_{1},v_{2},v_{3},v_{4}),(v_{0},v_{5},v_{6},v_{7}),(v_{0},v_{1},v_{8},v_{7}),(v_{0},v_{1},v_{8},v_{9}), and (v_{0},v_{1},v_{2},v_{10}). Among the adoption paths, (v_{0},v_{1},v_{2},v_{3},v_{4}) has the largest length, so the stem is (v_{1},v_{2},v_{3},v_{4}). The branches are (v_{5},v_{6},v_{7}), (v_{8}, v_{7}), (v_{8}, v_{9}), and (v_{10}). Note that v_{7} and v_{8} each appear in two different adoption paths, because the adoption of v_{8} triggers the timers of v_{7} and v_{9}, and the timer of v_{7} is triggered simultaneously by the adoptions of v_{6} and v_{8}.
From the adoption paths, we construct a tree [see Fig. 5(b)] that demonstrates how adoptions spread in the network in Fig. 5(a). We use the term dissemination tree for a network composed of adoption paths [71,77–80]. Because an adoption path is directed, a dissemination tree does not have a path back to the root (or to any other node), so it is a directed acyclic graph (DAG) [72]. However, as one can see in Fig. 5(b), the underlying undirected graph of a dissemination tree can have a cycle of length at least 4. In Fig. 5(b), this cycle is (v_{0},v_{1},v_{8},v_{7},v_{6},v_{5},v_{0}). However, a dissemination tree's underlying undirected graph cannot have triangular clustering (i.e., 3-node cycles). See Appendix D for further discussion.
In Fig. 6, we show dissemination trees that we obtain from running the WTM with timers on the LCC of an ER network of size N = 100, expected mean degree z = 6, and a homogeneous threshold of ϕ=0.1 for each node. We give examples with both homogeneous and heterogeneous timers, and we then examine adoption paths and combine them to create a dissemination tree. We place the root of the stem (i.e., the seed node) at the top of the tree, and we place the rest of the nodes in the subsequent levels based on their distance from the root. In Fig. 6(a), we show a dissemination tree when timers are distributed homogeneously with τ = 4. In Fig. 6(b), we show a dissemination tree when the timers are distributed heterogeneously (and, in particular, drawn uniformly at random from {0,1,…,8}). We color the nodes based on their timer values, which range from 0 (white) to 8 (black). We use stars for nodes in stems and disks for nodes in branches. The thick blue edges are part of a stem, and the thin gray edges are part of a branch. When the timers are homogeneous [see Fig. 6(a)], there are more stems (many different ones with the same maximal length), whose length is smaller than the stems in the example with heterogeneous timers [see Fig. 6(b)]. When the timers are heterogeneous, we also observe that the timers of stem nodes tend to be small (lighter colors). As we discussed in Sec. II B, the time that an adoption path terminates is determined by the sum of the timers of the nodes in the adoption path [see Eq. (1)]. Consequently, the mean timer value of the nodes in an adoption path helps determine how fast an adoption spreads in that path. Therefore, the mean timer value of stem nodes being smaller than the mean timer value of branch nodes suggests that an adoption should tend to spread at a faster rate through stems than through branches.
We now consider networks that we obtain from a configuration model [73] and generalized configuration models that include cliques. We construct configuration-model networks by specifying a degree distribution P_{k} and then connecting stubs (i.e., ends of edges) uniformly at random. We then remove all self-edges and replace multi-edges by single edges. To construct networks using a generalized configuration model, we embellish the above configuration model by incorporating cliques. These models, which are modified versions of the ones in Refs [38] and  [68], are specified by P_{k} and a joint distribution γ(k,c) that indicates the probability that a node chosen uniformly at random has degree k and is used to construct a clique of c nodes (i.e., a c-clique) with c−1 of its neighbors. We use a node chosen from the set of degree-k nodes to form a c-clique with probability γ(k,c)/P_{k}. Note that γ(k,c)=0 for k<c−1, as a node with degree k can only be a member of a c-clique if its degree is large enough to link to all c – 1 neighbors in the clique. The difference between our generalized configuration models and those in Refs [36] and  [68] is that we allow a degree-k node that we have already used to construct a c-clique to form an additional c-clique with probability γ(k,c) if it has enough remaining neighbors. (That is, it is possible to choose the same node two or more times.)
In Table III, we show the results of computations in which we examine whether adoptions spread faster through stems or branches in several families of random networks. We consider both configuration-model networks and network families in which we augment configuration-model networks to incorporate local clustering. For all networks in Table III, we start by considering the LCC of configuration-model networks with N = 10 000 nodes and degrees drawn from the Poisson distribution P_{k}=z^{k}e^{−z}/k! with mean z = 6. In the networks, each node has a homogeneous adoption threshold of ϕ=0.1, so a node with the mean degree adopts if one of its neighbors adopts. We use “Config” to denote a standard configuration model; “Congen-3” to denote a generalized configuration model with 3-cliques and with joint distribution γ(k,c)=[(1−α)δ_{c,1}+αδ_{c,3}]P_{k} for k≥3 (where the parameter α determines the edge–clique ratio for a node of degree k≥3); and “Congen-4” to denote a generalized configuration model with 4-cliques and with joint distribution γ(k,c)=[(1−β)δ_{c,1}+βδ_{c,4}]P_{k} for k≥4 (where β determines the edge–clique ratio for a node of degree k≥4).
As we discussed in Sec. IV, the time T to reach steady state for the WTM with heterogeneous timers can be either shorter (e.g., for timers distributed uniformly at random) or longer (e.g., for Gamma-distributed timers) than for a homogeneous timer, but both of our choices of heterogeneous timer distributions have a smaller value than a homogeneous timer for the time t_{0.9} for at least 90% of the nodes to adopt. Additionally, for both distributions of heterogeneous timers, we observe a smaller mean number n of adoption paths at steady state than for a homogeneous timer. This, in turn, results in a shorter mean adoption-path length μ_{l} for homogeneous timers than for heterogeneous ones, because for a fixed network size N, having a larger number of adoption paths leads to shorter mean adoption-path lengths.
The number of adoption paths increases when a node triggers the timers of multiple neighbors. Suppose that a node v_{i} adopts at time t_{vi}, and that it becomes the latest node of a_{vi} adoption paths. If v_{i} triggers k_{vi} neighbors at the next time step t_{vi}+1, the number of adoption paths with node v_{i} increases to k_{vi}a_{vi}. In this way, the number of adoption paths that include a node increases by a factor of the number of neighbors that the node triggers. Therefore, a_{hom}>a_{unif} and a_{hom}>a_{Gam}, and in general we expect a node to trigger more neighbors for the WTM with a homogeneous timer than for the WTM with heterogeneous timers. Note that it is possible for the mean number a of adoption paths in a network to be larger than the mean number r of adopted nodes in a network.
If timers are homogeneous, adoptions spread at the same rate for every adoption path, and adoption paths that terminate at the same time have the same length. However, for heterogeneous timers, adoption paths that terminate at the same time can have different lengths, because adoptions can spread at different rates. Therefore, one expects the lengths of adoption paths to be more diverse for heterogeneous timers than for homogeneous ones. As we see in Table III, the standard deviation σ_{l} of adoption-path lengths is larger for the WTM with heterogeneous timers than with homogeneous timers. That is, σ_{l,unif}>σ_{l,hom} and σ_{l,Gam}>σ_{l,hom} in our simulations.
Goel et_al [74] studied how viral content in large networks tends to have a different spreading pattern from content that does not go viral, and they introduced the idea of “structural virality” to try quantify the virality of content from its spreading pattern. They defined structural virality v as the mean shortest-path length in a dissemination tree [75], where a larger v signifies a larger mean distance between two nodes chosen uniformly at random from a dissemination tree. If a meme goes viral, it is reasonable that the mean distance between randomly chosen nodes should be larger than for memes that do not become viral. We give the structural viralities of dissemination trees in Table III, and our results provide evidence that v is larger for the WTM with heterogeneous timers than with homogeneous ones.
In Table III, we also show steady-state calculations for several stem-specific and branch-specific diagnostics: the mean percentage f_{rs} of stem nodes and mean percentage f_{rb} of branch nodes among the adopted nodes, the mean percentage f_{as} of stems and mean percentage f_{ab} of branches within the adoption paths, and the mean stem length l_{s} and mean branch length l_{b}. Among these quantities, the stem-specific quantities f_{rs} and f_{as} are smaller than the branch-specific quantities f_{rb} and f_{ab} for all families of random networks in Table III. In particular, both f_{rs} and f_{as} for the two types of heterogeneous timers in Table III are less than 1, and they are smaller than the corresponding quantities for a homogeneous timer. For a homogeneous timer, all adoption paths grow at the same rate, so the adoption path (or paths, if there is a tie) that grows for the longest time is the longest adoption path at steady state. Consequently, in this situation, all adoption paths that grow until steady state are stems. However, adoption paths grow at different rates for heterogeneous timers. Therefore, even if a stem terminates when a simulation reaches a steady state, not all adoption paths that grow until a steady state need to be stems. (A stem can terminate before a branch if the sum of the timers of the stem nodes is smaller than the sum of the branch-node timers.) We believe that this is why the stem percentage f_{as} is smaller for the WTM with heterogeneous timers than it is for a homogeneous timer in our results in Table III.
In Table IV, we show (1) the ratio τ_{s}/⟨τ⟩ of the mean τ_{s} of the timer values of nodes in stems to the mean ⟨τ⟩ of the timer values of all nodes and (2) the ratio τ_{b}/⟨τ⟩ of the mean τ_{b} of the timer values of nodes in branches to ⟨τ⟩. For the WTM with a homogeneous timer, both τ_{s,hom}⟨τ⟩=1 and τ_{b,hom}⟨τ⟩=1, so stems and branches grow at the same rate. When the timers are distributed uniformly at random, stems tend to grow at faster rates than the mean rate because τ_{s,unif}⟨τ⟩<1, whereas branches grow at slower rates than the mean rate because τ_{b,unif}⟨τ⟩ is (slightly) larger than 1. Similarly, when the timers are determined using a Gamma distribution, τ_{s,Gam}⟨τ⟩<1 and τ_{b,Gam}⟨τ⟩ is slightly larger than 1. The reason that there is only a very small difference between τ_{b} and ⟨τ⟩ for the heterogeneous timers that we study is that more than 99% of all adopted nodes in these networks are branch nodes (see Table III).
To better understand why the mean τ_{b} is larger than ⟨τ⟩ and the mean τ_{s} is smaller than ⟨τ⟩, it is useful to revisit our discussion from the end of Sec. III about the relationship between the mean timer values of the nodes in an adoption path and the length of that path. In Sec. III, we used Fig. 2(c) to argue that nodes with small timers tend to be part of long adoption paths and that nodes with large timers tend to be part of short adoption paths if (i) a network has a cycle of length at least 4 and (ii) nodes in the network adopt if a single neighbor adopts. The network families in Table III almost always yield networks that satisfy condition (i), and most of the nodes in the networks satisfy condition (ii). Because both conditions tend to be satisfied, we observe for the WTM with heterogeneous timers that stem nodes in the dissemination trees (see Table III) are more likely than other nodes to have timers that are smaller than the mean. Therefore, the ratio τ_{s}/⟨τ⟩ of the mean timer value of stem nodes to the mean timer value ⟨τ⟩ of all nodes is smaller than 1 for the WTM with heterogeneous timers (see Table IV). Depending on the network structure, it is possible for a stem to have nodes with large timers; see Appendix E for details.
In our calculations, stems seem to play a significant role in spreading adoptions to the majority of nodes faster for heterogeneous timers than for a homogeneous timer. To examine the role of stems in the dynamics of the WTM with timers, we conduct the following experiment on the dissemination trees in Tables III and IV. Suppose that we change the timers of the stem nodes of the dissemination tree to the mean value ⟨τ⟩ of the timers (which is μ_{τ}=4 in our example) without changing the dissemination tree, thus preserving the adoption paths. The times that the stem nodes' neighbors in the dissemination tree adopt also change, as the time of adoption of a node in an adoption path is determined by the sum of its timer and the time of adoption of its predecessor node. (Note that we are not rerunning the WTM dynamics; instead, we are adjusting an adoption curve after a simulation.)
In Fig. 7, we illustrate how the adoption curves change as a result of changing the stem-node timers. The dark orange and dark blue curves are both adoption curves for the WTM with heterogeneous timers on configuration-model networks with a Poisson degree distribution with mean z = 6. The dark orange curve is for uniformly-randomly-distributed timers, and the dark blue curve is for Gamma-distributed timers. We change the stem-node timers for these curves, and we show the resulting adoption curves with corresponding light colors. To facilitate our comparison, we include the green adoption curve (marked with crosses) for a homogeneous timer. We observe that intersections between the light-colored curves and the green curve occur earlier than the corresponding ones between the dark-colored curves and the green curve. We also show in Table V how much the times to reach certain fractions ρ^{*} of nodes, calculated using Eq. (5), change when we adjust the timers of the stem nodes. From both Fig. 7 and Table V, we observe that the adoption processes for the WTM with heterogeneous timers are delayed by changing the timers of stem nodes, even though they constitute a tiny fraction of all nodes in the networks. See Appendix F for further discussion. Although we have examined this feature for specific families of networks, we believe that it is relevant much more broadly. For example, see our discussion of dissemination trees on real-world networks in Sec. VI C.
We now investigate dissemination trees for the WTM with timers on the LCC of five Facebook100 networks [69,70]. Each network represents a Facebook friendship network at one university in the United States. In each of these networks, a node is an individual, and an unweighted, undirected edge represents a Facebook friendship between a pair of individuals. The networks in Table VI have different mean degrees, but they all have heavy-tailed degree distributions. To ensure that a node with degree equal to the mean degree adopts if a single one of its neighbors has adopted, we consider a homogeneous adoption threshold of ϕ=0.01.
Although the Facebook100 networks have different structural characteristics (e.g., in terms of local clustering and community structure) than the random-graph models, in each of the five networks, we obtain qualitatively similar results as in the random-graph ensembles (see Table VI). For example, the numbers n of adoption paths are larger for the WTM with homogeneous timers than with heterogeneous timers. Moreover, for heterogeneous timers, the lengths l_{s} of the stems and the lengths l_{b} of the branches are both larger than for homogeneous timers. Additionally, the mean timers τ_{s} for stems are smaller than those (τ_{b}) for branches, and the mean percentage f_{as} of adoption paths that are stems is smaller than that (f_{ab}) of those that terminate at the end of a branch. Because of the small timer values, stems (which constitute a small percentage of adoption paths) tend to grow faster than branches. The observed characteristics of the stems and branches for the five Facebook100 networks are similar to those of the random networks that we studied previously. Importantly, when timers are heterogeneous, stems grow faster and become longer, initiating adoption spreading in branches earlier than if the timers are homogeneous. Consequently, a majority of nodes adopt earlier for the WTM model with heterogeneous timers than with a homogeneous one (e.g., t_{0.9,unif}<t_{0.9,Gam}<t_{0.9,hom}). See Table VIII.
In this paper, we investigated how adoption delays of individuals can affect the spread of adoptions in a network. We explored this idea by augmenting the Watts threshold model (WTM) with timers on the nodes of a network, and we examined how incorporating homogeneous and heterogeneous timers can affect the dynamics of a contagion. For the WTM with homogeneous timers, neither the adoption order of nodes nor adoption paths change, because a homogeneous timer simply delays the adoption of each individual by the same amount of time (once it has decided to adopt). However, heterogeneous timers can change both the adoption order of nodes and adoption paths, and the precise effects depend in an interesting way on both network structure and timer distribution. For example, we observed that incorporating heterogeneous timers into the WTM can either accelerate or decelerate the time to steady state in comparison to incorporating a homogeneous timer. However, in our calculations using two different types of heterogeneous timer distributions (specifically, uniformly random timers and timers determined using a Gamma distribution and then rounded down to an integer), we found that the majority of nodes in networks adopt earlier with heterogeneous timers than with homogeneous ones. We speculate that, for heterogeneous timers, the stems—the longest adoption paths in a dissemination tree—play a significant role for the fast spread of adoptions to the majority of nodes, even though there are many more branch nodes than stem nodes. To support our hypothesis, we examined what happens to our adoption processes when we change the timers of stem nodes to the mean value of the timers, and we found that they are delayed noticeably, even though these nodes constitute a tiny fraction of the adopted nodes in the examined networks. We also developed a pair approximation for the WTM with timers that agrees reasonably well with our numerical simulations of the temporal evolution of the fraction of adopted nodes.
In future work, we seek to investigate real-world observations of the spread of information, memes, innovations, misinformation, and other phenomena on networks using models that include latencies (i.e., timers) in addition to influence thresholds. People can be late adopters for a variety of reasons (e.g., hard to convince, easy to convince but lazy, and so on), and incorporating timers into contagion models should be helpful for exploring different mechanisms of late adoption and their possible consequences for forecasting virality. In these studies, it will be important to augment a variety of different spreading models with timers and to incorporate timers into spreading models in different ways. (For example, insights from Ref [76] suggest other possibilities for how to incorporate timers.) The deterministic update rule in the WTM makes it particularly suitable for a first foray into studying timers in spreading processes, and that is why we used it in the present paper. It will be especially interesting to incorporate timers into stochastic spreading processes to examine how they change spreading behavior and virality forecasts.
APPENDIX A: ADOPTION PATHS WHEN NODES HAVE LARGE ADOPTION THRESHOLDS
When most node timers are small, we saw in Sec. III that we tend to obtain long adoption paths only when the adoption thresholds are sufficiently small (e.g., so that only one neighbor needs to adopt for a node to adopt). In this appendix, we consider adoption paths when some nodes have large adoption thresholds. In Fig. 8, we illustrate an example network in which the last node to adopt (v_{2} in this case) has a sufficiently large threshold so that it adopts after both nodes v_{1} and v_{3} adopt. In this scenario, when the timers of v_{1} and v_{3} are different, the node that adopts later triggers the adoption of node v_{2} and becomes part of the longer adoption path. In our example in Fig. 8, node v_{2} has a larger timer than v_{3}, so v_{2} yields a longer adoption path [given by (v_{0},v_{1},v_{2})] than v_{3}. Accordingly, if we abandon scenarios in which most nodes adopt if one neighbor adopts, nodes with large timers can more readily become part of long adoption paths.
APPENDIX B: ADOPTION CURVES FOR THE WTM WITH TIMERS ON FACEBOOK100 NETWORKS
In Fig. 9, we use (the LCC of) two Facebook100 networks to examine adoption curves for the WTM with homogeneous timers (green crosses), timers distributed uniformly at random from the set {0,1,…,8} (orange squares), and timers determined using a Gamma distribution with mean μ_{τ}=4 and standard deviation σ_{τ}=4 and then rounded down to an integer. The solid curves are the results of our pair approximation (see Sec. V).
Although the Facebook100 networks do not have a locally tree-like structure, the results of our pair approximation agree reasonably well with the results of our numerical simulations for the WTM with heterogeneous timers. (See the orange and blue curves in Fig. 9.) For homogeneous timers (see the green crosses in Fig. 9), the pair approximation is able to capture when the adoption fractions change (though not the magnitudes of these changes). The adoption curves' different growth patterns arise from different distributions of timers as well as from different network structures. For example, the WTM with uniformly-randomly-distributed timers on the two Facebook100 networks (i.e., the orange squares in Fig. 9) has adoption curves that increase at an approximately steady (and seemingly linear) rate from time t = 5 to t = 11 for Fig. 9(b) and from t = 7 to t = 14 for Fig. 9(e). In contrast, when we draw the timers from a Gamma distribution [see Figs. 9(c) and 9(f)], the adoption curves do not exhibit such seemingly linear growth during any extended period.
APPENDIX C: CASCADE CONDITION FOR THE WTM WITH TIMERS
As we saw in Sec. V, a global cascade occurs when a small seed fraction ρ_{0} of adopters leads to a much larger steady-state adoption fraction ρ_{∞}. In this appendix, we show that the cascade condition for the WTM with timers is the same as that for the WTM without a timer.
As one can see from Eq. (10), one can determine ρ_{∞} from q_{∞}, which is the fixed point of Eq. (11). In this appendix, we calculate the condition for a small seed fraction ρ_{0}=q_{n}(0) to result in a global cascade [i.e., ρ_{∞}≫ρ_{0}=q_{n}(0)].
We rewrite Eq. (11) as
where
where we note that K(0)=F(0).
We examine the t→∞ limit, because we are interested in steady-state behavior of the WTM with timers. For a fixed timer τ≪t, the probability q_{n}(t−τ)≈q_{n}(t) as t→∞, and both q_{n}(t−τ) and q_{n}(t) approach the same limit q_{∞}. Additionally, ∑_{τ}G(m,k,τ)=F(m,k), because ∑_{τ}[C_{τ}(τ)−C_{τ}(τ−1)]=1. (Note that C_{τ}(−1) = 0, because there are no negative timers.) For τ≈t, the response function G(m,k,τ)≈0, because limτ→t[C_{τ}(τ)−C_{τ}(τ−1)]≈0 as t→∞. Therefore, as t→∞, we write
We linearize Eq. (C1) near q = 0 to obtain
where
is the coefficient of the linear term of the Taylor expansion around q = 0. We now rearrange Eq. (C4) to obtain
If the denominator of (C6) is negative, the approximate value of q_{∞} is positive. (With K(0)>0 and at least one seed adopted node, the numerator is always positive.) Additionally, the order of magnitude of q_{∞} is the same as that of ρ_{0}, so the resulting steady-state value ρ_{∞} cannot be much larger than ρ_{0}, so we do not obtain a global cascade. Therefore, the condition to observe a global cascade is
The cascade condition (C7) for the WTM with timers is the same as that for the WTM without a timer. We obtain this result because WTM dynamics are monotonic: if a node adopts in the WTM without a timer in the limit t→∞, then it must also adopt in the WTM with timers in the limit t→∞. Consequently, in the t→∞ limit, q_{n}(t) for the WTM with timers and q_{n}(t) of the WTM must yield the same value q_{n}(∞). Therefore, the cascade condition (C7) for the WTM with timers is identical to that for the WTM without timers.
APPENDIX D: CYCLES IN THE UNDERLYING UNDIRECTED NETWORKS OF DISSEMINATION TREES
For a 3-cycle to exist in a dissemination tree's underlying undirected graph, a node's timer needs to be triggered by the simultaneous adoption of two neighbors. However, these neighbors cannot be adjacent to each other in a dissemination tree, as adjacent nodes in a dissemination tree cannot adopt simultaneously. A pair of nodes becomes neighbors in a dissemination tree if and only if one triggers the timer of the other. Therefore, there cannot exist a 3-cycle in the underlying undirected network of a dissemination tree.
In contrast, a dissemination tree can have cycles with 4 or more nodes in its underlying undirected graph. This occurs when nodes in different adoption paths have a common predecessor. Specifically, for the WTM with heterogeneous timers, any k-cycle with k≥4 can exist; for a homogeneous timer, k must be even. Assume that there is a cycle in the underlying undirected network of a dissemination tree (see Fig. 10). This implies that there exist two different adoption paths (X and Y in Fig. 10) with at least two common nodes (v_{i} and v_{j}). Suppose that v_{i} adopts before v_{j}. If the timers are homogeneous, the adoption spreads from v_{i} to v_{j} at the same rate in X and Y. Therefore, the cycle sizes for a homogeneous timer can only be even. However, for heterogeneous timers, the rates of adoption spreading in X and Y can be different. Therefore, any k-cycle with k≥4 can exist for the WTM with heterogeneous timers.
APPENDIX E: STEMS WITH LARGE TIMERS
In this appendix, we discuss situations in which a stem in a network includes nodes with large timers, in contrast to those that we investigated in Sec. VI. The characteristics of stems and branches depend on both network structure and the timers. Previously, we focused on examining homogeneous adoption thresholds in which nodes whose degree is equal to a network's mean degree satisfy the threshold-adoption condition if even a single neighbor has adopted, and we observed that stem nodes tend to have smaller mean timers than branch nodes.
However, depending on the network structure [see Fig. 11(a)] and the assignments of timers [see Fig. 11(b)], it is possible for the mean of the stem-node timers to be larger than the mean of the branch-node timers. In Fig. 11(a), the adoption paths do not change, regardless of the assignments of thresholds and timers, because the seed node is not adjacent to any node in a cycle of length 4 or more (see Sec. III). Therefore, in Fig. 11(a), the stems (v_{3},v_{4},v_{5},v_{6}) and (v_{7},v_{8},v_{9},v_{10}) have larger mean timers than the branches.
Even if a network includes a cycle with 4 or more nodes, stem nodes can still have a larger mean timer than branch nodes, depending on the network structure and timer assignments. With the given timer assignment, the network in Fig. 11(b) has the stem (v_{1},v_{6},v_{5},v_{7},v_{8}), which has a larger mean timer than the branch (v_{2},v_{3},v_{4}).
APPENDIX F: CHANGE OF ADOPTION CURVES AFTER ADJUSTING THE TIMERS OF STEM NODES IN DISSEMINATION TREES
As in Sec. VI B, we change the timers of stem nodes of dissemination trees to the mean value ⟨τ⟩ of the timers (which is μ_{τ}=4 in our example). The times that the stem nodes' neighbors in a tree adopt then also change, as the adoption time of a node in an adoption path is determined by the sum of its timer and the adoption time of its predecessor node. (Note that we are not rerunning the WTM dynamics.)
In Fig. 12, we illustrate how the adoption curves change because of the changes in the timers of stem nodes. We use generalized configuration-model networks with either 3-cliques or 4-cliques (as in Table III). For the networks with 3-cliques, we use the edge–clique ratios α=0.5 [see Fig. 12(a)] and α=1.0 [see Fig. 12(b)]. For the networks with 4-cliques, we use the edge–clique ratios β=0.5 [see Fig. 12(c)] and β=1.0 [see Fig. 12(d)]. In each figure, the dark orange and dark blue curves represent adoption curves for the WTM with heterogeneous timers. The orange curves (marked with squares) indicate results for timers that are distributed uniformly at random from the set {0,1,…,8}. The blue curves (marked with diamonds) indicate results for timers that are determined from a Gamma distribution with mean μ_{τ}=4 and standard deviation σ_{τ}=4 (and are then rounded down to an integer). The curves with lighter colors are the adoption curves after we change the timers of the stem nodes of the dissemination trees. The light orange curve is for uniformly-randomly-distributed timers, and the light blue curve is for Gamma-distributed timers. The green curve (marked with crosses), which we include for comparison, is for a WTM with a homogeneous timer. We observe that the light-colored curves intersect the green curve earlier than do the dark-colored curves.
In Table VII, we show the times to achieve certain adoption fractions ρ^{*} of nodes—calculated with Eq. (6) from the main text—after adjusting the timers of stem nodes. From both Fig. 12 and Table VII, we observe that adoptions for heterogeneous timers are delayed noticeably by changing the timers of the stem nodes, even though they constitute a tiny fraction of all nodes in the networks.
APPENDIX G: TIME TO REACH CERTAIN FRACTIONS OF ADOPTED NODES FOR FACEBOOK100 NETWORKS
In Table VIII, we give the times to reach certain fractions ρ^{*} of adopted nodes for Facebook100 networks when timers are homogeneous, distributed uniformly at random, and determined using a Gamma distribution and then rounded down to an integer.
TABLE I. 
The time that it takes for all nodes to adopt (i.e., for a network to reach the fully-adopted state, which is the steady state) for the small networks in Fig. 2 for the WTM with homogeneous timers τ_{hom}=4, heterogeneous timers τ_{het}∈{2,4,6} for the non-seed nodes in Fig. 2(a), and heterogeneous timers τ_{het}∈{1,3,5,7} for the non-seed nodes in Figs. 2(b) and 2(c). The mean value of the heterogeneous timers is ⟨τ_{het}⟩=4=τ_{hom}. We calculate the mean time ⟨T_{het}⟩ to reach steady state for heterogeneous timers by averaging over all possible configurations of timers with the given set of heterogeneous timers. In comparing results from homogeneous and heterogeneous timers in these networks, we also indicate if the adoption orders of nodes and/or adoption paths can change (i.e., if they can be different in the two scenarios) from what occurs in the WTM without timers.
TABLE II. 
Time to reach certain fractions of adopted nodes for the WTM on ER networks with homogeneous timers, heterogeneous timers distributed uniformly at random, and heterogeneous timers determined using a Gamma distribution and then rounded down to an integer. This table uses our simulation results from Fig. 3.
TABLE III. 
Comparison between the characteristics of stems and branches from running the WTM with timers on configuration-model networks (“Config”), generalized configuration-model networks with 3-cliques (“Congen-3”), and generalized configuration-model networks with 4-cliques (“Congen-4”). For all networks in this table, we start with the LCC of a configuration-model network with N = 10 000 nodes and degrees drawn from a Poisson distribution P_{k}=z^{k}e^{−z}/k! with mean z = 6. All nodes have a homogeneous threshold of ϕ=0.1, so a node with the mean degree adopts if one of its neighbors adopts. For the generalized configuration models, we consider different values of the edge–clique ratios α and β, where α determines the edge–clique ratio for a node of degree k≥3 in Congen-3 and β determines the edge–clique ratio for a node of degree k≥4 in Congen-4. The subscript _{hom} corresponds to homogeneous timers, the subscript _{unif} corresponds to timers that are distributed uniformly at random (from the set {0,…,8}), and the subscript _{Gam} corresponds to timers that are determined using a Gamma distribution (with mean 4 and standard deviation 4) and then rounded down to the nearest integer. The quantity T is the time to reach steady state, and t_{ρ^{*}} is the time that it takes to achieve an adopted fraction of ρ^{*}. (In this table, we use ρ^{*}=0.9.) All other quantities give steady-state measurements. The quantity r is the mean number of adopted nodes at steady state, a is the mean number of adoption paths, μ_{l} is the mean adoption-path length, σ_{l} is the standard deviation of the lengths of adoption paths, v is structural virality (which is defined as the mean shortest-path length in a dissemination tree), f_{rs} is the mean percentage of adopted nodes that are stem nodes, f_{rb} is the mean percentage of adopted nodes that are branch nodes, f_{as} is the mean percentage of adoption paths that are stems, f_{ab} is the mean percentage of adoption paths that terminate at the end of a branch, l_{s} is the mean stem length, and l_{b} is the mean branch length. To compare the effects of different timer distributions, in a given realization, we augment the WTM with these timer distributions on the same network with the same seed node and the same adoption-threshold distribution (i.e., ϕ=0.1 for all nodes). Each reported value is a mean over 100 simulations of the WTM with timers on networks generated independently for each simulation.
TABLE IV. 
Comparison between the mean timers of stems and branches for the WTM model with a homogeneous timer, uniformly-randomly-distributed timers, and timers determined using a Gamma distribution. The networks that we use for this table are the same as those in Table III. We also use the same seed nodes and the same values for node thresholds and timers. As in Table III, we use the subscript _{hom} to indicate quantities for homogeneous timers, _{unif} to indicate quantities for timers that are distributed uniformly at random, and _{Gam} to indicate quantities for timers that are determined using a Gamma distribution. The quantity τ_{s} is the mean stem-node timer, τ_{b} is the mean branch-node timer, and ⟨τ⟩ is the mean of all timers.
TABLE V. 
Time to reach certain fractions of adopted nodes for the adoption curves in Fig. 7.
TABLE VI. 
Comparison between stem and branch characteristics for the WTM model with timers on the LCC of Facebook100 networks. The quantity N is the number of nodes, z is a network's mean degree, and ⟨l⟩ is the mean shortest-path length between pairs of nodes. Each node has a homogeneous adoption threshold of ϕ=0.01. The subscript _{hom} indicates homogeneous timers, the subscript _{unif} indicates timers that are distributed uniformly at random from the set {0,…,8}, and the subscript _{Gam} indicates timers determined using a Gamma distribution (with mean 4 and standard deviation 4). The quantity T is the time that it takes to reach steady state, and t_{ρ^{*}} is the time that it takes for a fraction ρ^{*} of nodes to adopt. (We use ρ^{*}=0.9 in this table; see Table VIII for other values of ρ^{*}.) All other quantities give steady-state measurements. The quantity a is the mean number of adoption paths at steady state, μ_{l} is the mean adoption-path length, σ_{l} is the standard deviation of the adoption-path lengths, and v is structural virality. The quantity f_{as} is the mean percentage of adoption paths that are stems, f_{ab} is the mean percentage of adoption paths that terminate at the end of a branch, l_{s} is the mean stem length, l_{b} is the mean branch length, τ_{s} is the mean timer value of stem nodes, τ_{b} is the mean timer value of branch nodes, and ⟨τ⟩ is the mean value of all timers. Each quantity is a mean over 100 realizations with different timers and seed nodes (which are determined uniformly at random).
TABLE VII. 
Time t_{WTM} to reach certain fractions of adopted nodes for the dark-colored curves (i.e., the WTM with timers) in Fig. 12 and the time t_{dis} to reach certain fractions of adopted nodes for the light-colored curves (i.e., after we adjust the timers of stem nodes of the dissemination tree to the mean timer value). The subscript _{hom} indicates homogeneous timers, the subscript _{unif} indicates timers that are distributed uniformly at random, and the subscript _{Gam} indicates timers that are determined using a Gamma distribution and then rounded down to an integer.
TABLE VIII. 
Time to reach certain fractions of adopted nodes in the WTM with homogeneous and heterogeneous timers on the LCC of Facebook100 networks. The quantity N is the number of nodes, z is a network's mean degree, and ⟨l⟩ is its mean shortest-path length between pairs of nodes. All nodes have a homogeneous adoption threshold of ϕ=0.01. The subscript _{hom} indicates homogeneous timers, the subscript _{unif} indicates timers that are distributed uniformly at random, and the subscript _{Gam} indicates timers determined using a Gamma distribution. (We use the same timer distributions as in Table VI.) The quantity T is the time that it takes to reach a steady state and t_{ρ^{*}} is the time that it takes for the fraction ρ(t) of adopted nodes to reach ρ^{*}. Each quantity is a mean over 100 realizations, and we use a different distribution of timers for each realization. We also choose the seed node uniformly at random for each realization.
TABLE I. -body
	T_{WTM}a	T_{hom}b	⟨T_{het}⟩c	⟨T_{het}⟩T_{hom}	Change of adoption order	Change of adoption paths
(a)	3	15	15	1	˟	˟
(b)	1	5	7	1.4	✓	˟
(c)	3	15	13.33	0.89	✓	✓
^{a} Time to reach the fully-adopted state in the original WTM (i.e., without timers).
^{b} Mean time to reach the fully-adopted state when the timers are homogeneous.
^{c} Mean time to reach the fully-adopted state averaged over all possible configurations of heterogeneous timers.
TABLE II. -body
ρ^{*}a	t_{hom}b	t_{unif}c	t_{unif}t_{hom}	t_{Gam}d	t_{Gam}t_{hom}
0.5	29.31	21.97	0.75	20.05	0.68
0.6	29.52	23.18	0.79	21.21	0.72
0.7	29.74	24.48	0.82	22.59	0.76
0.8	29.95	25.97	0.87	24.43	0.82
0.9	34.48	28.10	0.81	27.56	0.80
ρ_{∞}e	42.41	40.21	0.95	60.44	1.43
^{a} Fraction of adopted nodes.
^{b} Time to reach ρ^{*} when timers are homogeneous.
^{c} Time to reach ρ^{*} when the timers are distributed uniformly at random.
^{d} Time to reach ρ^{*} when the timers are determined using a Gamma distribution and then rounded down to an integer.
^{e} Fraction of adopted nodes at steady state.
TABLE III. -body
	Homogeneous timer
	T_{hom}	t_{0.9,hom}	r_{hom}	a_{hom}	μ_{l,hom}	σ_{l,hom}	v_{hom}	f_{rs} (%)	f_{rb} (%)	f_{as}(%)	f_{ab}(%)	l_{s,hom}	l_{b,hom}
Config	42.76	32.97	9999.43	17505.69	7.72	0.36	7.15	4.44	95.56	1.07	98.93	9.55	4.13
Congen-3 (α=0.5)	44.06	34.30	9998.99	16754.55	7.91	0.37	7.31	4.70	95.30	1.25	98.75	9.81	4.30
Congen-3 (α=1.0)	46.32	35.43	9993.95	15770.20	8.16	0.37	7.54	3.02	96.98	0.62	99.38	10.26	4.57
Congen-4 (β=0.5)	45.41	35.03	9987.32	17316.51	8.05	0.41	7.48	3.46	96.54	0.88	99.12	10.08	4.56
Congen-4 (β=1.0)	52.17	38.78	9996.23	17250.30	8.72	0.43	8.17	1.66	98.34	0.31	99.69	11.43	5.57
	Uniformly random distribution of timers
	T_{unif}	t_{0.9,unif}	r_{unif}	a_{unif}	μ_{l,unif}	σ_{l,unif}	v_{unif}	f_{rs} (%)	f_{rb} (%)	f_{as}(%)	f_{ab}(%)	l_{s,unif}	l_{b,unif}
Config	40.39	27.26	9999.43	7935.59	9.02	0.46	10.52	0.34	99.66	0.05	99.95	15.90	6.57
Congen-3 (α=0.5)	41.76	28.34	9998.99	7763.81	9.19	0.49	10.79	0.35	99.65	0.35	99.65	16.13	6.75
Congen-3 (α=1.0)	44.10	29.77	9993.95	7511.16	9.38	0.47	11.16	0.35	99.65	0.06	99.94	16.53	6.92
Congen-4 (β=0.5)	42.81	27.13	9987.32	7798.33	9.29	0.54	11.03	0.35	99.65	0.06	99.94	16.30	6.84
Congen-4 (β=1.0)	49.60	32.81	9996.23	7500.79	9.87	0.54	12.05	0.34	99.66	0.05	99.95	17.35	7.36
	Gamma distribution (and then rounded down to an integer) of timers
	T_{Gam}	t_{0.9,Gam}	r_{Gam}	a_{Gam}	μ_{l,Gam}	σ_{l,Gam}	v_{Gam}	f_{rs} (%)	f_{rb} (%)	f_{as}(%)	f_{ab}(%)	l_{s,Gam}	l_{b,Gam}
Config	61.19	29.89	9999.43	7786.92	8.51	0.44	10.45	0.50	99.50	0.09	99.91	13.15	6.13
Congen-3 (α=0.5)	61.92	30.93	9998.99	7630.97	8.72	0.47	10.75	0.48	99.52	0.08	99.92	13.52	6.32
Congen-3 (α=1.0)	63.67	32.23	9993.95	7400.31	8.98	0.47	11.14	0.44	99.56	0.07	99.93	14.09	6.60
Congen-4 (β=0.5)	62.69	31.75	9987.32	7701.32	8.88	0.52	11.00	0.45	99.55	0.08	99.92	13.85	6.46
Congen-4 (β=1.0)	66.99	35.23	9996.23	7493.46	9.60	0.53	12.08	0.41	99.59	0.07	99.93	15.26	7.12
TABLE IV. -body
	Homogeneous timer	Uniformly-randomly-distributed timers	Gamma-distributed timers
	τ_{s,hom}⟨τ⟩	τ_{b,hom}⟨τ⟩	τ_{s,unif}⟨τ⟩	τ_{b,unif}⟨τ⟩	τ_{s,Gam}⟨τ⟩	τ_{b,Gam}⟨τ⟩
Config	1.0	1.0	0.29	1.00	0.42	1.01
Congen-3 (α=0.5)	1.0	1.0	0.30	1.00	0.40	1.01
Congen-3 (α=1.0)	1.0	1.0	0.33	1.00	0.40	1.00
Congen-4 (β=0.5)	1.0	1.0	0.32	1.00	0.39	1.00
Congen-4 (β=1.0)	1.0	1.0	0.35	1.00	0.44	1.00
TABLE V. -body
ρ^{*}a	t_{hom}b	t_{unif,WTM}c	t_{unif,dis}d	t_{Gam,WTM}e	t_{Gam,dis}f
0.5	29.02	22.01	25.17	22.76	25.70
0.6	29.82	23.10	26.71	23.89	27.24
0.7	30.42	24.24	28.48	25.21	29.04
0.8	31.26	25.54	30.79	26.97	31.36
0.9	32.97	27.26	34.59	29.88	35.01
ρ_{∞}g	42.76	40.40	74.55	61.19	67.55
^{a} Fraction of adopted nodes.
^{b} Time to reach ρ^{*} for the WTM with a homogeneous timer (green curve in Fig. 7).
^{c} Time to reach ρ^{*} for the WTM with timers distributed uniformly at random (dark orange curve in Fig. 7).
^{d} Time to reach ρ^{*} after we change the timers of the stem nodes for timers that are distributed uniformly at random (light orange curve in Fig. 7).
^{e} Time to reach ρ^{*} for the WTM with timers determined using a Gamma distribution (dark blue curve in Fig. 7).
^{f} Time to reach ρ^{*} after we change the timers of the stem nodes for timers determined using a Gamma distribution (light blue curve in Fig. 7).
^{g} Fraction of adopted nodes at steady state.
TABLE VI. -body
				Homogeneous timer
	N	z	⟨l⟩	T_{hom}	t_{0.9,hom}	a_{hom}	μ_{l,hom}	σ_{l,hom}	v_{hom}	f_{as}(%)	f_{ab}(%)	l_{s,hom}	l_{b,hom}	τ_{s,hom}⟨τ⟩	τ_{b,hom}⟨τ⟩
Reed	962	39	1.62	23.38	16.03	18329.97	4.36	0.40	3.29	5.75	94.25	5.68	1.71	1.0	1.0
Simmons	1510	43	2.57	25.14	16.64	36247.05	4.53	0.39	3.40	3.79	96.21	6.03	1.93	1.0	1.0
Caltech	762	43	1.54	21.94	15.55	17083.39	4.25	0.36	3.13	7.15	92.85	5.39	1.54	1.0	1.0
Haverford	1446	82	1.50	25.86	15.60	78135.33	4.31	0.38	2.98	2.63	97.37	6.17	2.46	1.0	1.0
Swarthmore	1657	73	2.32	24.39	15.97	83141.94	4.40	0.39	3.10	3.12	96.88	5.88	1.98	1.0	1.0
				Uniformly random distribution of timers
	N	z	⟨l⟩	T_{unif}	t_{0.9,unif}	a_{unif}	μ_{l,unif}	σ_{l,unif}	v_{unif}	f_{as}(%)	f_{ab}(%)	l_{s,unif}	l_{b,unif}	τ_{s,unif}⟨τ⟩	τ_{b,unif}⟨τ⟩
Reed	962	39	1.62	21.92	11.96	3223.54	5.01	0.60	4.11	0.95	99.05	8.00	2.43	0.28	1.02
Simmons	1510	43	2.57	23.34	12.13	6516.15	5.40	0.57	4.31	1.30	98.70	8.19	2.45	0.24	1.02
Caltech	762	43	1.54	21.19	11.85	2721.44	4.83	0.52	3.89	1.55	98.45	7.30	2.10	0.28	1.03
Haverford	1446	82	1.50	22.04	11.50	13573.66	5.33	0.57	3.79	0.83	99.17	8.11	2.51	0.21	1.02
Swarthmore	1657	73	2.32	21.02	11.66	14358.79	5.41	0.56	3.94	0.95	99.05	8.13	2.38	0.18	1.02
				Gamma distribution (and then rounded down to an integer) of timers
	N	z	⟨l⟩	T_{Gam}	t_{0.9,Gam}	a_{Gam}	μ_{l,Gam}	σ_{l,Gam}	v_{Gam}	f_{as}(%)	f_{ab}(%)	l_{s,Gam}	l_{b,Gam}	τ_{s,Gam}⟨τ⟩	τ_{b,Gam}⟨τ⟩
Reed	962	39	1.62	37.60	15.57	2902.57	4.40	0.47	4.23	1.89	98.11	6.55	2.12	0.45	1.02
Simmons	1510	43	2.57	39.84	15.86	5069.47	4.62	0.46	4.48	1.78	98.22	6.72	2.17	0.43	1.02
Caltech	762	43	1.54	36.15	15.39	2586.5	4.29	0.44	4.01	2.32	97.68	6.20	1.96	0.45	1.03
Haverford	1446	82	1.50	38.24	15.15	8664.29	4.51	0.43	4.11	1.03	98.97	6.88	2.59	0.47	1.01
Swarthmore	1657	73	2.32	38.71	15.28	9306.55	4.58	0.44	4.24	1.50	98.50	6.62	2.19	0.38	1.02
TABLE VII. -body
	Congen-3
	α=0.5	α=1.0
ρ^{*}	t_{WTM,hom}	t_{WTM,unif}	t_{dis,unif}	t_{WTM,Gam}	t_{dis,Gam}	t_{WTM,hom}	t_{WTM,unif}	t_{dis,unif}	t_{WTM,Gam}	t_{dis,Gam}
0.5	29.82	22.94	26.05	23.71	26.63	30.56	24.17	27.18	24.87	27.67
0.6	30.43	24.05	27.37	24.87	28.19	31.52	25.32	28.76	26.07	29.26
0.7	31.27	25.23	29.37	26.22	30.02	32.70	26.53	30.58	27.46	31.19
0.8	32.53	26.56	31.67	27.99	32.37	34.25	27.91	32.95	29.27	33.49
0.9	34.30	28.34	35.47	30.93	36.07	35.43	29.77	36.88	32.23	37.49
1.0	44.06	41.76	75.70	61.92	69.01	46.32	44.10	77.67	63.67	70.87
	Congen-4
	β=0.5	β=1.0
ρ^{*}	t_{WTM,hom}	t_{WTM,unif}	t_{dis,unif}	t_{WTM,Gam}	t_{dis,Gam}	t_{WTM,hom}	t_{WTM,unif}	t_{dis,unif}	t_{WTM,Gam}	t_{dis,Gam}
0.5	30.26	23.60	26.75	24.47	27.39	33.57	26.81	29.81	27.58	30.38
0.6	31.08	24.74	28.32	25.65	28.96	34.71	28.04	31.45	28.87	32.05
0.7	32.14	25.93	30.12	27.02	30.80	35.69	29.33	33.32	30.33	33.98
0.8	33.62	27.29	32.46	28.81	33.18	36.83	30.81	35.72	32.21	36.46
0.9	35.05	29.11	36.35	31.75	36.91	38.78	32.81	39.68	35.23	40.35
1.0	45.43	42.79	76.63	62.86	70.14	52.17	49.60	81.77	66.99	75.53
TABLE VIII. -body
				Homogeneous timer
	N	z	⟨l⟩	T_{hom}	t_{0.9,hom}	t_{0.8,hom}	t_{0.7,hom}	t_{0.6,hom}	t_{0.5,hom}
Reed	962	39	1.62	23.40	16.19	15.22	14.40	13.44	12.55
Simmons	1510	43	2.57	25.34	16.90	15.71	15.27	14.44	13.69
Caltech	762	43	1.54	21.95	15.60	14.75	14.01	12.91	12.07
Haverford	1446	82	1.50	25.83	15.38	14.96	14.51	13.71	13.17
Swarthmore	1657	73	2.32	24.35	15.91	15.17	14.69	14.20	13.37
				Timers distributed uniformly at random
	N	z	⟨l⟩	T_{unif}	t_{0.9,unif}	t_{0.8,unif}	t_{0.7,unif}	t_{0.6,unif}	t_{0.5,unif}
Reed	962	39	1.62	22.00	12.08	10.92	9.96	9.03	8.10
Simmons	1510	43	2.57	23.47	12.22	11.07	10.11	9.18	8.26
Caltech	762	43	1.54	21.24	11.84	10.69	9.72	8.80	7.86
Haverford	1446	82	1.50	22.36	11.45	10.43	9.50	8.59	7.68
Swarthmore	1657	73	2.32	21.01	11.61	10.58	9.65	8.73	7.82
				Timers determined from a Gamma distribution and then rounded down to an integer
	N	z	⟨l⟩	T_{Gam}	t_{0.9,Gam}	t_{0.8,Gam}	t_{0.7,Gam}	t_{0.6,Gam}	t_{0.5,Gam}
Reed	962	39	1.62	37.33	15.58	12.63	10.90	9.66	8.66
Simmons	1510	43	2.57	39.92	15.95	13.02	11.30	10.06	9.07
Caltech	762	43	1.54	37.04	15.58	13.20	11.42	10.15	9.15
Haverford	1446	82	1.50	38.44	15.12	12.28	10.62	9.44	8.50
Swarthmore	1657	73	2.32	38.63	15.27	12.45	10.79	9.60	8.68
FIG. 1. 
Illustration of different adoption paths in the Watts threshold model (WTM) with timers. Each node v_{i} is assigned a timer τ_{vi} and a threshold ϕ_{vi}, where i∈{1,…,5}. We initiate node v_{0} in state 1, so we do not need to assign it a threshold or a timer. Suppose that all nodes v_{i} (with i∈{1,…,5}) have the same threshold ϕ=0.5. Any node among v_{1},…,v_{5} is triggered once even one of its neighbors adopts.
FIG. 2. 
Small examples to illustrate the effect of incorporating timers in the WTM. The dark brown node v_{0} is the seed node (so it is in state s = 1 at t = 0), and all other nodes are in state s = 0 at t = 0. The thresholds are homogeneous, with ϕ=0.1 for each node.
FIG. 3. 
(a) Adoption curves of the WTM with timers. Different markers indicate the results of numerical simulations of the WTM with different distributions of timers: pink plus signs indicate no timers, green crosses indicate a homogeneous timer with τ = 4, orange squares indicate heterogeneous timers that are distributed uniformly at random from the set {0,1,…,8}, and blue diamonds indicate heterogeneous timers given by integers that we obtain by rounding down from a random variable that follows a Gamma distribution with mean μ_{τ}=4 and standard deviation σ_{τ}=4. The solid curves are results from an analytical approximation (see Sec. V) for the adoption process of the corresponding color, and we can see that the analytical approximation agrees reasonably well with our numerical simulations. We thicken the solid orange curve to make it more easily distinguishable from the blue curve. The dashed lines mark the times at which the adoption process of the corresponding color reaches a steady state. (b, c) Change of the times to reach steady state (T_{unif} and T_{Gam}, respectively) by increasing the standard deviation σ when timers are distributed (b) uniformly at random and (c) approximately according to a Gamma distribution. Our simulation results are means over 1000 realizations of the WTM with timers on the largest connected component of G(N, p) ER networks with N = 10 000 nodes and edge probability p = 0.0006. To isolate the effects of incorporating timers, we use the same 1000 ER networks for each of the 4 different cases.
FIG. 4. 
An illustration of level-by-level spreading of adoptions in a network.
FIG. 5. 
(a) An example network on which we run the WTM with timers. The arrows illustrate the spread of adoptions in the stem and branches. The brown arrow indicates the stem (v_{1},v_{2},v_{3},v_{4}), and the green arrows indicate the branches (v_{5},v_{6},v_{7}), (v_{8}, v_{7}), (v_{8}, v_{9}), and (v_{10}). (b) Graphical illustration of the dissemination tree from the spread of adoptions in panel (a). The root of the stem (v_{1},v_{2},v_{3},v_{4}) is the seed node v_{0}. Nodes v_{0}, v_{1}, and v_{2} initiate the adoptions in branches.
FIG. 6. 
Dissemination trees for the WTM on the LCC of a 100-node ER network with (a) homogeneous timers and (b) heterogeneous timers. The edges are directed from higher levels to lower levels. The thick blue edges are part of a stem, and the thin gray edges are part of a branch. To represent the timer values of the nodes, we use the same color scale—ranging from 0 (white) to 8 (black)—in the two panels. We use stars for nodes in stems and disks for nodes in branches. The number of levels in the dissemination tree with homogeneous timers is 5, and the number of levels in the tree with heterogeneous timers is 8.
FIG. 7. 
Adoption curves of the WTM with timers along with their adoption curves after we change the timers of the stem nodes of the dissemination trees. The green crosses are results of simulations of the WTM with homogeneous timers with τ = 4, the orange squares are for heterogeneous timers τ that are distributed uniformly at random from the set {0,1,…,8}, and the blue diamonds are for heterogeneous timers determined from a Gamma distribution with mean μ_{τ}=4 and standard deviation σ_{τ}=4 and then rounded down to an integer. To isolate the effects of different distributions of timers, in each case, we run the WTM using the same networks with the same seed nodes. The dark orange and dark blue curves are before we change the timers in dissemination trees, and the corresponding light-colored curves are after we change those timer values. The dashed vertical lines mark the times at which the adoption process of the corresponding color reaches a steady state. Our simulation results are means over 1000 realizations of the WTM with timers on the LCC of configuration-model networks with N = 10 000 nodes and a Poisson degree distribution with expected mean z = 6. For each realization, we generate an independent network. We also determine the seed node (uniformly at random) and timer values separately for each realization. The dashed lines in the adoption curves are for visual guidance.
FIG. 8. 
Example of adoption paths when there is a node with a large adoption threshold.
FIG. 9. 
Adoption curves of the WTM with timers on the LCC of two Facebook100 networks: (a)–(c) Swarthmore and (d)–(f) Michigan. In each simulation, each node has a homogeneous threshold value of ϕ=0.01, and we use different timer distributions for differently-colored curves. The green crosses indicate the results of numerical simulations of the WTM with homogeneous timers with τ = 4, the orange squares are for heterogeneous timers τ that are distributed uniformly at random from the set {0,1,…,8}, and the blue diamonds are for heterogeneous timers determined from a Gamma distribution with mean μ_{τ}=4 and standard deviation σ_{τ}=4 and then rounded down to an integer. The dashed lines mark the times at which each adoption process reaches a steady state. The solid curves are results of our pair approximation, and we can see that the approximations agree reasonably well with our numerical simulations for heterogeneous timers and are able to capture when the adoption fractions change (though not the magnitudes of these changes) for homogeneous timers. To isolate the effects of different distributions of timers, in each case, we run the WTM using the same seed nodes. For each realization, we determine the seed node (uniformly at random) and timer values separately. Our numerical simulations are means over 100 realizations.
FIG. 10. 
Illustration of a cycle in (the underlying undirected network of) a dissemination tree. (Recall that a dissemination tree is actually a directed acyclic graph.)
FIG. 11. 
Examples of networks with larger mean stem-node timers than mean branch-node timers.
FIG. 12. 
Adoption curves of the WTM with timers and adoption curves after we adjust the timers of stem nodes of dissemination trees on the LCC of generalized configuration-model networks with (a, b) 3-cliques and (c, d) 4-cliques. These networks (see Table III in the main text) have N = 10 000 nodes, and the underlying configuration-model networks have a Poisson degree distribution with expected mean degree z = 6. We use the edge–clique ratios α=0.5 in panel (a), α = 1 in panel (b), β=0.5 in panel (c), and β = 1 in panel (d). For all networks, each node has a homogeneous threshold value of ϕ=0.1. The green crosses indicate the results of numerical simulations of the WTM with homogeneous timers with τ = 4, the orange squares are for heterogeneous timers τ that are distributed uniformly at random from the set {0,1,…,8}, and the blue diamonds are for heterogeneous timers determined from a Gamma distribution with mean μ_{τ}=4 and standard deviation σ_{τ}=4 and then rounded down to an integer. The dark orange and dark blue curves are before we change the timers in dissemination trees, and the corresponding light-colored curves are after we change those timer values. The vertical dashed lines mark the times at which the adoption process of the corresponding color reaches a steady state. Our simulation results are means over 1000 realizations. For each realization, we generate an independent network. We also determine the seed node (uniformly at random) and timer values separately for each realization. To isolate the effects of different distributions of timers, in each scenario, we run the WTM using the same networks with the same seed nodes.
