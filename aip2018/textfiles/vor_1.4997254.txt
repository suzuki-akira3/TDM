Dynamic range maximization in excitable networks
We study the strategy to optimally maximize the dynamic range of excitable networks by removing the minimal number of links. A network of excitable elements can distinguish a broad range of stimulus intensities and has its dynamic range maximized at criticality. In this study, we formulate the activation propagation in excitable networks as a message passing process in which a critical state is reached when the largest eigenvalue of the weighted non-backtracking matrix is close to one. By considering the impact of single link removal on the largest eigenvalue, we develop an efficient algorithm that aims to identify the optimal set of links whose removal will drive the system to the critical state. Comparisons with other competing heuristics on both synthetic and real-world networks indicate that the proposed method can maximize the dynamic range by removing the smallest number of links, and at the same time maintaining the largest size of the giant connected component.
I. INTRODUCTION
A defining characteristic of sensory systems is their ability to distinguish intensities of physical stimuli varied by a wide range of magnitude [1,2]. In previous studies, it was revealed that such nonlinear transduction of information could be realized by the collective dynamics of coupled excitable elements [3–7]. As a result, the excitable network has become a key model in the field of psychophysics [8]. In a broader context, many biological, social and engineering systems can be properly modeled by networks of interacting excitable nodes. So far, the excitable network model has been used in a variety of applications, for instance, information processing in sensory neural networks [9–12], signal transmission in brain networks [13–15], and influencing detection in social networks [16].
The central question in the study of excitable networks is how they respond to external stimuli whose intensities usually vary by several orders of magnitude. The performance of an excitable network can be evaluated by the dynamic range, which quantifies the range of stimulus intensities that can be robustly distinguished by the system. In particular, the dynamic range of an excitable network is determined by the topology of the network connections: the optimal (or maximal) dynamic range is achieved in the critical state of the system [4,17,18]. In homogeneous random graphs, Kinouchi and Copelli found that the critical state occurred when the branching ratio σ = 1 [4]. For more general network structures, Larremore et_al found that the critical state was characterized by the unit largest eigenvalue of the weighted adjacency matrix λ_{W} = 1 [17]. In a more recent work, Campos et_al [19] pointed out that while the phase transition in annealed dynamics can be predicted by the unit branching ratio σ = 1, it is not true for quenched dynamics due to spatial correlation. In the quenched case, the model becomes critical as the largest eigenvalue λ_{W} approaches unity in the thermodynamic limit.
In applications, a higher dynamic range of excitable systems implies a better functionality in detecting external stimuli. Therefore, it is desirable to maximize the dynamic range without changing the network structure dramatically. Many previous studies have explored the strategy to optimize the dynamic range [13,20,21]. In this work, we study how to perturb the excitable networks to criticality via the deletion of a minimal number of connections. To do this, we first formulate the activation propagation dynamics in excitable networks as a message passing process, in which the focal nodes are assumed to be “virtually” removed from the network [22]. By linearizing the system about the zero solution, the message passing equations recover the same form for the bond percolation process [23,24]. The critical state is therefore governed by the largest eigenvalue of the weighted non-backtracking (WNB) matrix λ_{NB}, which controls the stability of the zero solution. Through simulations on various networks, we verify that the dynamic range is maximized when the largest eigenvalue of the WNB matrix is one, i.e., λ_{NB} = 1.
Based on the linearized system, we explore the impact of link removal on the largest eigenvalue of the WNB matrix. With proper approximations, we derive the analytical form of the collective influence (CI) of each link on the largest eigenvalue of the WNB matrix [25]. By adaptively removing the links with high CI scores, we propose a heuristic algorithm to find the optimal set of influential links whose removal would drive the system to the critical state. We compare the performance of the proposed algorithm with several commonly used link ranking methods, including weight-based, degree-based and eigenvector-based ranking algorithms. The results indicate that the collective influence algorithm outperforms other competing methods in three aspects: (1) the number of links removed to maximize the dynamic range is smaller; (2) the dynamic range in the critical state is higher; and (3) the size of the largest connected component during the link removal remains larger. Because the collective influence of links only depends on the form of the WNB matrix, this algorithm can be adapted and used for identifying influential links in other dynamical processes whose dynamics are controlled by the largest eigenvalue of the WNB matrix.
II. DYNAMIC RANGE OF EXCITABLE NETWORKS
The dynamical evolution of nodes' states in an excitable network can be described by the Kinouchi-Copelli model [4]. Considering a system composed of N nodes and M directed links, each node i can be in one of the m + 1 states: the resting state x_{i} = 0, the excited state x_{i} = 1, and the refractory states x_{i}=2,3,…,m (m≥2). At each time step t, a resting node i (xit=0) can be excited by its neighbor j in the excited state (xjt=1) with probability a_{ij}, or independently by an external stimulus with probability η. Meanwhile, nodes in the excited or refractory state (xit≥1) will transit to the next refractory state deterministically, until xit=m which will return to the resting state. That is, xit+1=xit+1 if 1≤xit<m and xit+1=0 if xit=m. In the excitable network, the topology of connections and pairwise strength of interactions are described by the weighted adjacency matrix W={aij}{N×N}. In particular, we define a_{ij} > 0, if there is a link from node j to i.
For a given external stimulus strength η, the network response F is defined as
where ⟨·⟩{t} denotes an average over time and f^{t} is the fraction of excited nodes at time t. With a larger stimulus strength η∈(0,1), we have a larger value of response F. Therefore, F = F(η) is a monotonically increasing function of η. In excitable networks, the dynamic range Δ quantifies the range of external stimuli that result in distinguishable network responses F. To discard the responses that are negligible or close to saturation, we select a lower stimulus threshold η_{low} and an upper stimulus threshold η_{high}. The dynamic range is then defined as
In this work, we select the lower threshold η_{0.1} (upper threshold η_{0.9}) to exclude the lower 10% (upper 10%) network responses. In particular, η_{0.1} and η_{0.9} are determined from their corresponding responses F_{0.1} and F_{0.9}, where F_{x}=F_{0}+x(F_{max}−F_{0}) (here, F_{0}=lim_{η→0}F and F_{max} are the minimum and maximum responses of the network). An illustration of the definition of the dynamic range is presented in Fig. 1.
III. CRITICALITY AND NON-BACKTRACKING (NB) MATRIX
A. Theoretical analysis
We first formulate the activation propagation in excitable networks as a message passing process. In this framework, we define the probability that a given node i is excited at time t by pit. To examine the impact of a node j on its neighboring node i, it is intuitive to explore the probability of node i being activated if node j is assumed to be absent from the network. This procedure of creating a virtual cavity at node j is the foundation for the message passing algorithms used in statistical physics [22]. In particular, this probability can be regarded as a message passed from node i to j (excluding the effect of j), which can be further recursively written as a function of the messages coming from node i's other neighbors. The final activation probability of node i in the original network can thus be obtained by considering all the effects, or messages, passed from its neighbors.
For a link from i to j (i→j), suppose node j is “virtually” removed from the network (i.e., creating a “cavity” at node j) and reconsider if node i is excited or not [25]. This information can be stored in an auxiliary variable pi→jt representing the probability of node i being excited in the absence of node j at time t. Notice that although node j cannot directly affect the activation of node i through the directed link i→j, it may be realized through the possible bidirectional link i↔j in undirected networks, or a longer directed path j→⋯→i in directed networks. For m = 1, the system has only two states, resting and excited. For sparse networks, the updating process can be described by
where A_{ij} is the element of the binary adjacency matrix (A_{ij} = 1 if a_{ij} > 0, and A_{ij} = 0 otherwise) and k∖j means k runs over all nodes except j. Putting back j into the network, we can get the probability of node i being excited at time t + 1 through
The assumption of sparse (or locally tree-like) networks guarantees that there are not too many short loops. The existence of excessive numbers of short loops will invalidate the mutual independence of activation among neighboring nodes, which is the basis to write down Eqs. (3) and (4). Real-world networks are mostly sparse, but even for some social networks with dense clusters, it was found that results based on sparseness assumption also work well [26].
For general situations with m≥2, the probability of node i being at any refractory states in the absence of node j at time t is ∑l=1m−1pi→jt−l, so the probability of node i to be in the resting state is 1−∑l=0m−1pi→jt−l. The updating process, therefore, follows:
Denote limt→∞pi→jt=p_{i→j} and limt→∞pit=p_{i}. Equations (5) and (6) in the steady state become
and
To solve the above self-consistent equations, let us denote G_{i→j}(η,p_{→})=η+(1−η)[1−∏_{k\j}(1−p_{k→i}a_{ik}A_{ik})] and G_{i}(η,p_{→})=η+(1−η)[1−∏_{k}(1−p_{k→i}a_{ik}A_{ik})]. After rearranging the equations, we have
and
Notice that p_{i→j} and p_{i} are actually the functions of η. As a result, the response F=F(η) can be written as follows:
For η = 1, it is trivial that G_{i→j}(1,p_{→})=1 and G_{i}(1,p_{→})=1. This leads to a constant maximal response F_{max}=1/(m+1), regardless of the network structure. The dynamic range depends on both the minimal response F_{0}=limη→0F(η) and how F(η) approaches F_{0} and F_{max}. When η = 0, Eq. (9) always has a trivial solution {p_{i→j}=0} for all i→j, which in turn gives {p_{i}=0} for all node i and thus F_{0}=0. The stability of this solution is controlled by the largest eigenvalue of the linear operator M̂ of the nonlinear function Eq. (9). In the subcritical regime with the largest eigenvalue smaller than 1, the minimal response F_{0} remains zero. As the largest eigenvalue increases, the sensitivity of the network is enlarged because the amplifying effect on weak stimuli caused by activity propagation among neighbors becomes stronger. As a result, the dynamic range Δ increases monotonically with the largest eigenvalue. In the supercritical regime with the largest eigenvalue larger than 1, the minimal response F_{0} becomes nonzero and masks the existence of weak stimuli, which reduces the dynamic range Δ. Consequently, the maximal dynamic range should be achieved in the critical state where the largest eigenvalue is around one [4].
We now derive the form of the M × M matrix M̂ defined for the directed links k→l,i→j
Here, G_{i→j}=0 when η = 0 and {p_{i→j}=0} for all i→j. According to the definition of G_{i→j}, the partial derivative of G_{i→j} is given by
Going back to Eq. (12), we obtain the M × M matrix M̂={M_{k→l,i→j}}
The matrix M̂ is a generalization of the non-backtracking (NB) matrix of networks [27], which recently has found many applications in network science [23–25,28,29]. Therefore, we refer M̂ as the weighted non-backtracking (WNB) matrix of the excitable network. The stability of the zero solution is determined by the largest eigenvalue of the WNB matrix λ_{NB}: stable if λ_{NB}<1 and unstable if λ_{NB}>1.
In Appendix A, we also derived the Steven's exponent m = 1/2 in the critical state of the system using the message-passing equations (7) and (8), which recovers the same result obtained from the mean-field approximation in Kinouchi and Copelli [4].
B. Numerical validation
To verify this theoretical result, we performed simulations on synthetic random networks. In particular, we are interested in the largest eigenvalue of the WNB matrix λ_{NB} when the dynamic range is maximized. In previous study, it was found that the optimal dynamic range appears if the largest eigenvalue of the weighted adjacency matrix λ_{W} is one [17]. To compare these results, in our simulations, we also reported the values of λ_{W} when the maximal dynamic range was observed.
We start from homogeneous random networks. To generate directed Erdös-Rényi (ER) networks, we first generated independent in-degree and out-degree sequences from a Poisson degree distribution P(k)=K^{k}e^{−K}/k!, where K is the average degree. Then, we connected the nodes using the configuration model [30]. For simplicity, we assume that the weights of all links are constant. By varying the link weight, we can control both λ_{NB} and λ_{W}. In simulations, we generated 1000 independent realizations of the directed ER networks with network size N = 5000 and average degree K = 2.5. For each network, we slowly tuned up the link weight, calculated the dynamic range and recorded λ_{NB} and λ_{W}, when Δ reached the peak. In Fig. 2, we display the relationship between the dynamic range and the largest eigenvalue of the WNB matrix λ_{NB}. The maximal dynamic range is achieved when λ_{NB} is close to one. The distributions of λ_{NB} and λ_{W} in the maximal dynamic range are shown in Fig. 3(a). We further performed the same analysis on directed scale-free (SF) networks, generated using a power-law degree distribution P(k)∼k^{−γ} and the configuration model (N = 5000, γ = 3). Specifically, we first generated in-degree and out-degree sequences from the distribution P(k)∼k^{−γ} with k_{min} = 2 and k_{max} = 1000, and then connected the “stubs” randomly. The results are presented in Fig. 3(b). The narrow distributions tightly surrounding λ_{NB} = 1 and λ_{W}=1 indicate that, for spare random networks, (1) the dynamic range is maximized when the largest eigenvalue of the WNB matrix is close to one and (2) this finding is consistent with previous results on the weighted adjacency matrix of directed networks.
The deviations of λ_{W} and λ_{NB} from the theoretical value of one are attributed to both the finite network size and numerical inaccuracy. To show this, we calculated the standard deviations of the distributions of λ_{W} and λ_{NB} with increasing network size. As shown in Fig. 4, the standard deviation decreases with the growing network size, for both ER and SF networks. However, the decrease for SF networks slows down after N = 4000. The remaining fluctuations are possibly due to the choice of the step length in tuning λ_{W} and λ_{NB}, as well as the large variability in the SF network structure.
The agreement of the results for λ_{W} and λ_{NB} in directed networks shown in Fig. 3 has a reason. In the directed networks we have created, there is little chance to observe backtracking links. As a consequence, the adverse effect of backtracking links was precluded by the design of network structure. However, this good structural property (lack of backtracking links) does not hold for undirected networks, where every link can be treated as a backtracking path. In Fig. 5, we repeat the analysis in Fig. 3 on undirected ER and SF networks. The distribution of λ_{NB} in the critical state remains centering around one, but all values of λ_{W} at criticality are well above one. The reason is that because a node cannot be excited in consecutive steps, excitations cannot go back to the same node through a bidirectional link. In particular, it was found that the presence of a refractory period does not allow self-sustained activity to occur in the absence of loops in the network structure [7]. This phenomenon is what the NB matrix captures, but the adjacency matrix does not. This comparison indicates that λ_{NB} is indeed a better quantity to characterize criticality.
The above result is reminiscent of recent findings on bond percolation [23,24]. On sparse networks, it was found that the percolation threshold is given by the inverse of the largest eigenvalue of the non-backtracking (NB) matrix. For sparse networks, this result is equivalent to previous finding that the critical occupation probability for percolation is the reciprocal of the largest eigenvalue of the adjacency matrix [31]. For dense networks, however, both estimations give a lower bound of the real threshold value, but the estimation based on the NB matrix is tighter [24].
IV. DYNAMIC RANGE MAXIMIZATION
In applications, it is common to encounter the situation where we want to modify an existing excitable network to maximize its dynamic range with a lower cost. Given that many different ways of modifications may exist, in this work, we assume that only the network structure can be changed, while the link weights remain fixed. Because the dynamic range is optimized in the critical state, the problem becomes adjusting the connections in the network so that the largest eigenvalue of the WNB matrix λ_{NB} is one. Here, we consider the following optimization problem: for an excitable network with λ_{NB}>1, find the minimal set of links whose removal will lead to λ_{NB} = 1. For networks with λ_{NB}<1, the adjustment may require addition of new links. We leave this problem to future works.
To find the optimal link set, we first define the collective influence (CI) of each link on the largest eigenvalue λ_{NB}. Here, the term “collective” means the proposed measure is calculated from the collective information of links surrounding the topological structure, rather than the information on each individual link. The collective influence theory was developed to find multiple influential nodes in optimal percolation [25], and has been applied to an independent spreading model [32], a linear threshold model [33] and the Boolean network model [34]. Here, we generalize it to work for network links. The main idea is to quantify the impact of each link's removal on the value of λ_{NB}, which is collectively determined by the global network structure.
We use the power method to estimate the largest eigenvalue of the WNB matrix [25]. For a M dimensional nonzero vector w_{0} that is not orthogonal to the eigenvector associated with λ_{NB}, denote
The largest eigenvalue of M̂ is
where
For notation convenience, we put M_{k→l,i→j} into a larger space of dimension N×N×N×N
Here, δ_{ij}=1 if and only if i = j. Supposing the initial vector is w_{0}={|w_{1}⟩_{ij}}={A_{ji}}, we can calculate the iteration starting from ℓ = 1 as
Defining Si\jin=∑_{k\j}a_{ik}A_{ik} and Kj\iout=∑_{l\i}A_{lj}, we have
Using |w_{ℓ+1}⟩_{ij}=∑_{kl}M̂{ijkl}|w_{ℓ}⟩_{kl}, we can calculate w_{2}. For ℓ = 2,
So, |w2|{2} is
The above calculation can be extended to any iteration time ℓ. Specifically, we have
The collective influence (CI) of the link i→j is defined as the contribution of the terms containing a_{ji}A_{ji} to |wℓ|{2}. According to Eq. (16), a link with a higher CI score will contribute more to the value of |w_{ℓ}|, thus λ_{NB}. If an existing link i→j is removed from the network, the value of |wℓ|{2} will drop by
where P2ℓ−1i→j(α,β) is the set of directed paths of length 2ℓ−1 that cross the link i→j, whose head and tail are the links α→α′ and β′→β, respectively. In Eq. (26), α, α′, β, and β′ run over all possible choices of nodes that satisfy the definition of paths in P2ℓ−1i→j(α,β). In a tree structure without loops, the directed path between α and β is simply the shortest path connecting them. In local tree-like networks, we can approximate the directed path using the shortest path from α to β, because the number of other paths will become negligible as the network size increases [25]. In implementation, the shortest paths crossing the link i→j can be easily found using a breadth-first search algorithm. Notice that Eq. (26) can be generalized for undirected links. Specifically, we treat an undirected edge i↔j as the superposition of two directed links. The CI value of length ℓ is defined as CIijℓ=CIi→jℓ+CIj→iℓ.
In order to find the optimal set of links, we adopt a heuristic approach following a greedy strategy [35]. The greedy algorithm makes a locally optimal choice at each time step, aiming to find a global optimum. Although a greedy strategy, in general, does not find the global optimum, it can usually yield locally optimal solutions that approximate the global one in a reasonable time. Specifically, we adaptively remove the link with the highest CI score until the critical state is reached, i.e., λ_{NB} = 1. After each removal, the CI scores of the existing links are recalculated. In practice, we use several techniques to speed up the computation. (1) We limit the path length ℓ to a small value to avoid enumerating long paths. Computationally, finding the shortest paths of a fixed length ℓ crossing a given link takes O(1) time. As a result, the complexity of computing CI values for all links is O(M). (2) We use a heap structure to find the link with the highest CI score [36], which takes O(logM) time. (3) After each removal, we only update the CI values of the links within 2ℓ steps from the removed link, because the CI values of the links outside this scope will not be affected by the removal. This procedure will reduce the computation time of CI update from O(M) to O(1). Combining all these techniques, the overall computational complexity of the algorithm is O(MlogM).
The pseudocode for computing the CI score for an undirected link i↔j is shown below:
Here, ∂Ball(i,L_{1}) is the frontier of the ball centered at node i with radius L_{1} and Dii_{1}…i_{L1}L_{1}(i,i_{L1}) represents the shortest path of length L_{1} between node i and i_{L1}. Moreover, j∉Dii_{1}…i_{L1}L_{1}(i,i_{L1}) means node j is not on the shortest path i,i_{1},…,i_{L1}, i.e., j∉{i,i_{1},…,i_{L1}}.
V. COMPETING METHODS
There exist several widely used link ranking methods that can be potentially used in dynamic range maximization [37–41]. Here, we introduce some heuristic methods that are applicable to large-scale networks. For simplicity, in our following analysis, we assume that the networks are undirected. In numerical simulations, we first rank links using each method, and then remove links following this order. Specifically, removing an undirected link from an undirected network is equivalent to deleting two directed links that follow the opposite directions in a directed network.
• Weight-based ranking. To quantify the importance of an undirected link i↔j, we define its high weight (HW) score as the sum of links' weights at both ends of the link, i.e., CijHW=∑_{k∈∂i}a_{ki}+∑_{k∈∂j}a_{kj}, where ∂i is the set of node i's neighbors. In the high weight (HW) ranking, we sort the links by their HW scores in a descending order, and then remove those ranked in the top q fraction. An effective way to improve the performance of HW strategy is to rank the links adaptively. That is, after the removal of each link, the HW scores of the remaining links are recalculated. We refer to this method as high weight adaptive (HWA) in the following comparison.
• Degree-based ranking. In high degree (HD) ranking, the score of each link i↔j is determined by the number of connections at nodes i and j: CijHD=∑_{k∈∂i}A_{ki}+∑_{k∈∂j}A_{kj}. In the comparison, we also perform the adaptive version of HD ranking (HDA).
Eigenvector-based ranking. Many ranking methods make use of the eigenvector corresponding to the largest eigenvalue of the adjacency matrix, which incorporates the information on the global network structure [42–44]. For instance, the dynamical importance of network links can be characterized by the quantity defined based on eigenvectors [44]. Using a perturbation analysis on the largest eigenvalue, the dynamical importance of a link i→j is calculated as
where v and u denote the right and left eigenvectors of the weighted adjacency matrix W. That is, Wu=λ_{W}u and v^{T}W=λ_{W}v^{T}. For undirected networks, the left and right eigenvectors are identical. In the following analysis, we also use two versions of this method—Eig (without adaptive calculation) and EigA (with adaptive calculation).
VI. NUMERICAL EXPERIMENTS
To test the performance of the CI algorithm, here, we examine how the dynamic range evolves after a certain fraction of links is removed. The set of removed links is selected by different methods, including the CI algorithm with ℓ = 1 and 2, HWA, HW, HDA, HD, EigA and Eig. For reference, we also use a random selection (Rand) method to pick the links randomly. A better method will result in a smaller fraction of links when the dynamic range is optimized.
We first test on homogeneous ER networks. For ER networks with size N and average degree K, we generated the networks by randomly assigning NK/2 links among N nodes. Networks with size N = 10 000 and the average degree K = 3 were used in the simulations. To avoid too many short loops in the network, we choose a relatively small average degree K = 3, which can at the same time maintain the connectivity of the network. Here, we assume that the initial λ_{NB} is not too far away from 1, so that the critical state can be reached through a small perturbation (i.e., removal of a small fraction of links) on the network structure. To keep the initial λ_{NB} close to 1, the link weights were randomly drawn from a uniform distribution U[0.5,0.6]. The specific distribution of link weights will not affect the performance of each method. Starting from the initial network structure, links were removed one by one and we calculated the dynamic range at every 1% interval. After each link removal, we only kept the giant connected component in the network and discarded the isolated small clusters. If a small cluster is disconnected from the giant component (GC), it can be viewed as a separate system. We will focus on the functionality of the largest connected component of the network. In another study, the excitable network is also divided into subgroups in the context of heterogeneity [45].
The evolution of the dynamic range for different methods is presented in Fig. 6. Clearly, the CI algorithm with ℓ = 2 outperforms other methods by achieving the critical state with a smaller set of links (see Table I). We repeated the analysis on ER networks with K = 2 and 2.5 (see Fig. 11 in Appendix B). As the average degree K grows, the critical fraction of links required to optimize the dynamic range increases from less than 10% to around 20%. These results indicate that a better connected ER network needs more links to be removed to reach the critical state. The adaptive dynamical importance EigA also has a satisfactory result and performs better than other ranking strategies except for the CI_{ℓ}_{=2} algorithm. The performance of the CI_{ℓ}_{=1} algorithm is similar to HWA and HDA, as it only uses local information adaptively like HWA and HDA. With adaptive calculation, HWA and HDA have substantial improvements compared with the original version of HW and HD. Finally, the random selection and Eig has almost no effect on improving the dynamic range.
The functionality of excitable networks is not solely determined by the dynamic range. To keep the sensory network working, it is critical to maintain the integrity of the network structure. Here, we use the size of the giant component (GC) to quantify the completeness of the network. In particular, the system should reach the critical state before the network gets fragmented by link removal. In Fig. 7, we show the decrease of GC size with the removal of links. Before the critical state, GC for the CI_{ℓ}_{=2} algorithm is the largest among all methods, although it drops abruptly afterwards. This implies that the CI_{ℓ}_{=2} algorithm will first select redundant links surrounded by clusters of hubs whose removal will not affect the overall connectivity of the network. As a result, the CI_{ℓ}_{=2} algorithm is suitable for dynamic range maximization, since it will not significantly change the original network structure. One simple heuristic way to avoid disconnecting nodes is to only remove edges that do not cause disconnection of the network. We will explore this option in future works.
Now we compare the performance of different methods on heterogeneous SF networks. We generated undirected SF networks with size N = 10 000 and power-law exponent γ = 2.8. The link weights are generated from a uniform distribution U[0.5, 0.6]. We performed the same analysis as for ER networks and present the evolution of dynamic range in Fig. 8. Similar to the results on ER networks, the CI_{ℓ}_{=2} algorithm is capable of finding a smaller set of important links (see Table I). We tested other choices of the power-law exponent γ = 3 and 3.5 (see Fig. 11 in Appendix B). As the network becomes more heterogeneous (the power-law exponent γ from 3.5 to 2.8), more fraction of links is required to be removed before the critical state appears. For SF networks, the performance of the adaptive dynamical importance EigA becomes worse than CI_{ℓ}_{=1}, HWA and HDA, which is different from the case of ER networks.
The change in the giant component size for different methods is presented in Fig. 9. The CI_{ℓ}_{=2} algorithm has the largest GC size in the critical state. An interesting observation is that as the network becomes more heterogeneous (the power-law exponent γ changes from 3.5 to 2.8, figures not shown here), more links are required to be removed to fragment the network. This is different from optimal percolation in which fewer nodes are needed for more heterogenous networks [25]. The reason is, as networks become more heterogeneous, important nodes will have more connections. In optimal percolation, removing a smaller number of high-degree nodes will be enough to dismantle the network. However, in link removal, it will require more deletion to reduce the number of connections of high-degree nodes, which has a significant impact on the largest eigenvalue.
After the tests on synthetic networks, we turn to more structurally complex real-world networks. Here, we select two realistic networks: (1) a yeast protein-protein interaction network (Protein) [46] and (2) an Internet autonomous system network (Computer) [47]. The undirected protein network contains protein interactions contained in the yeast. A node represents a protein and an edge represents a metabolic interaction between two proteins. The network consists of 1870 nodes and 2277 links, resulting in an average degree of 2.44. The giant component of the protein network has 1458 nodes. We remove other small clusters in the simulations. The degree sequence follows a power-law distribution with the exponent γ = 3.04. The computer network is the undirected network of autonomous systems of the Internet connected with each other. Nodes are autonomous systems and edges denote communication. The computer network contains 6474 vertices and 13895 edges, with a power-law degree distribution whose exponent is γ = 2.11. The computer network is fully connected. For both networks, the link weights are randomly drawn from a uniform distribution U[0.5, 0.6]. We note that here, these two networks are only used as templates for networks with a more structured architecture, and there are no actual excitable nodes in Protein and Computer networks.
Using different methods, we gradually removed links one by one from the networks. At each 1% interval, we calculated the dynamic range of the networks. The evolution of dynamic range is shown in Figs. 10(a) and 10(b). For protein network in Fig. 10(a), removing 11.5% links using the CI_{ℓ}_{=2} algorithm can boost the dynamic range from 33.1 to 51.8, a remarkable 56.5% improvement. The CI algorithms with ℓ = 2 and ℓ = 1 outperform other methods, implying that they can handle more complex structure in real-world networks, such as the community structure, degree correlation, clustering, etc. For a computer network in Fig. 10(b), which is more heterogeneous than the protein network, the CI_{ℓ}_{=2} algorithm needs to remove 21.5% links to reach the critical state. This agrees with the result of synthetic SF networks. The dynamic range is enhanced from 35.2 to 47.1, a 33.8% improvement. The GC size evolution is presented in Figs. 10(c) and 10(d). In the critical state, the GC size for the CI_{ℓ}_{=2} algorithm is 1458 (100%) and 6474 (100%) for a protein network and a computer network, respectively. As a result, for real-world networks, the CI algorithm can make the most use of the excitable elements after the adjustment of the network structure. In this case, the CI_{ℓ}_{=2} algorithm preserves all excitable nodes in the networks, while others do not. In other competing methods, the EigA ranking outperforms weight-based and degree-based methods, leading to a higher dynamic range and a larger GC size in the critical state.
VII. CONCLUSIONS
In this study, we explored the strategy to maximize the dynamic range of a given excitable network by removing a minimal number of links. We used a message passing process to describe the activation propagation in excitable networks and found that the dynamic range is optimized in the critical state, where the largest eigenvalue of the WNB matrix is close to one (λ_{NB} = 1). To quantify the collective influence (CI) of each single link on λ_{NB}, we analyzed the message passing equations through linearization and approximated the largest eigenvalue using power method iteration. Based on the CI scores of links, we proposed a greedy algorithm that adaptively removes edges with the largest CI value. Simulations on both synthetic and real-world networks indicate that, compared with other widely used heuristics, the CI algorithm can find a smaller set of links whose removal will perturb the network to the critical state. Meanwhile, the CI algorithm maintains a larger giant component after the removal of links, which preserves the majority of excitable elements in the network. The proposed method provides a practical way to enhance the dynamic range of excitable networks through a minimal control of the network structure, and can be generalized to quantify the dynamical importance of links in other dynamical processes.
One concern in the above ranking methods is that these methods remove links following a certain order. So, some of the perturbations may reduce the largest eigenvalue to less than one. A better algorithm can be thus designed by removing links that can make the largest eigenvalue closest to one. As the largest eigenvalue gets closer to one, the optimal pruning may involve removing a less important link, which is not necessarily the next one in the rank. This strategy can optimize the dynamic range, but may increase the number of removed links. We can explore this approach in future works. Also, more ranking methods for nodes, e.g., Lobby index [48], can be adapted and tested for use in dynamic range maximization. The problem of dynamic range maximization is conceptually similar to a targeted attack in which links are removed. Their relationship is also worthy of further exploration in future works.
Networks of coupled excitable elements can properly describe many real-world systems. The nonlinear collective dynamics of an excitable network allow the system to distinguish stimulus intensities spanning several orders of magnitude, manifested by a broad dynamic range. In practice, how to maximize the dynamic range under the minimal control of the network structure has profound implications in designing excitable systems that can achieve optimal functionality. In this work, we show that the dynamic range is maximized when the largest eigenvalue of the weighted non-backtracking (WNB) matrix is close to one. Based on the stability analysis of the WNB matrix, we propose a heuristic algorithm that outperforms other widely used ranking methods in dynamic range maximization. This study provides a practical method to locate high-impact links in general dynamical processes governed by the largest eigenvalue of the WNB matrix.
A defining characteristic of sensory systems is their ability to distinguish intensities of physical stimuli varied by a wide range of magnitude [1,2]. In previous studies, it was revealed that such nonlinear transduction of information could be realized by the collective dynamics of coupled excitable elements [3–7]. As a result, the excitable network has become a key model in the field of psychophysics [8]. In a broader context, many biological, social and engineering systems can be properly modeled by networks of interacting excitable nodes. So far, the excitable network model has been used in a variety of applications, for instance, information processing in sensory neural networks [9–12], signal transmission in brain networks [13–15], and influencing detection in social networks [16].
The central question in the study of excitable networks is how they respond to external stimuli whose intensities usually vary by several orders of magnitude. The performance of an excitable network can be evaluated by the dynamic range, which quantifies the range of stimulus intensities that can be robustly distinguished by the system. In particular, the dynamic range of an excitable network is determined by the topology of the network connections: the optimal (or maximal) dynamic range is achieved in the critical state of the system [4,17,18]. In homogeneous random graphs, Kinouchi and Copelli found that the critical state occurred when the branching ratio σ = 1 [4]. For more general network structures, Larremore et_al found that the critical state was characterized by the unit largest eigenvalue of the weighted adjacency matrix λ_{W} = 1 [17]. In a more recent work, Campos et_al [19] pointed out that while the phase transition in annealed dynamics can be predicted by the unit branching ratio σ = 1, it is not true for quenched dynamics due to spatial correlation. In the quenched case, the model becomes critical as the largest eigenvalue λ_{W} approaches unity in the thermodynamic limit.
In applications, a higher dynamic range of excitable systems implies a better functionality in detecting external stimuli. Therefore, it is desirable to maximize the dynamic range without changing the network structure dramatically. Many previous studies have explored the strategy to optimize the dynamic range [13,20,21]. In this work, we study how to perturb the excitable networks to criticality via the deletion of a minimal number of connections. To do this, we first formulate the activation propagation dynamics in excitable networks as a message passing process, in which the focal nodes are assumed to be “virtually” removed from the network [22]. By linearizing the system about the zero solution, the message passing equations recover the same form for the bond percolation process [23,24]. The critical state is therefore governed by the largest eigenvalue of the weighted non-backtracking (WNB) matrix λ_{NB}, which controls the stability of the zero solution. Through simulations on various networks, we verify that the dynamic range is maximized when the largest eigenvalue of the WNB matrix is one, i.e., λ_{NB} = 1.
Based on the linearized system, we explore the impact of link removal on the largest eigenvalue of the WNB matrix. With proper approximations, we derive the analytical form of the collective influence (CI) of each link on the largest eigenvalue of the WNB matrix [25]. By adaptively removing the links with high CI scores, we propose a heuristic algorithm to find the optimal set of influential links whose removal would drive the system to the critical state. We compare the performance of the proposed algorithm with several commonly used link ranking methods, including weight-based, degree-based and eigenvector-based ranking algorithms. The results indicate that the collective influence algorithm outperforms other competing methods in three aspects: (1) the number of links removed to maximize the dynamic range is smaller; (2) the dynamic range in the critical state is higher; and (3) the size of the largest connected component during the link removal remains larger. Because the collective influence of links only depends on the form of the WNB matrix, this algorithm can be adapted and used for identifying influential links in other dynamical processes whose dynamics are controlled by the largest eigenvalue of the WNB matrix.
The dynamical evolution of nodes' states in an excitable network can be described by the Kinouchi-Copelli model [4]. Considering a system composed of N nodes and M directed links, each node i can be in one of the m + 1 states: the resting state x_{i} = 0, the excited state x_{i} = 1, and the refractory states x_{i}=2,3,…,m (m≥2). At each time step t, a resting node i (xit=0) can be excited by its neighbor j in the excited state (xjt=1) with probability a_{ij}, or independently by an external stimulus with probability η. Meanwhile, nodes in the excited or refractory state (xit≥1) will transit to the next refractory state deterministically, until xit=m which will return to the resting state. That is, xit+1=xit+1 if 1≤xit<m and xit+1=0 if xit=m. In the excitable network, the topology of connections and pairwise strength of interactions are described by the weighted adjacency matrix W={aij}{N×N}. In particular, we define a_{ij} > 0, if there is a link from node j to i.
For a given external stimulus strength η, the network response F is defined as
where ⟨·⟩{t} denotes an average over time and f^{t} is the fraction of excited nodes at time t. With a larger stimulus strength η∈(0,1), we have a larger value of response F. Therefore, F = F(η) is a monotonically increasing function of η. In excitable networks, the dynamic range Δ quantifies the range of external stimuli that result in distinguishable network responses F. To discard the responses that are negligible or close to saturation, we select a lower stimulus threshold η_{low} and an upper stimulus threshold η_{high}. The dynamic range is then defined as
In this work, we select the lower threshold η_{0.1} (upper threshold η_{0.9}) to exclude the lower 10% (upper 10%) network responses. In particular, η_{0.1} and η_{0.9} are determined from their corresponding responses F_{0.1} and F_{0.9}, where F_{x}=F_{0}+x(F_{max}−F_{0}) (here, F_{0}=lim_{η→0}F and F_{max} are the minimum and maximum responses of the network). An illustration of the definition of the dynamic range is presented in Fig. 1.
We first formulate the activation propagation in excitable networks as a message passing process. In this framework, we define the probability that a given node i is excited at time t by pit. To examine the impact of a node j on its neighboring node i, it is intuitive to explore the probability of node i being activated if node j is assumed to be absent from the network. This procedure of creating a virtual cavity at node j is the foundation for the message passing algorithms used in statistical physics [22]. In particular, this probability can be regarded as a message passed from node i to j (excluding the effect of j), which can be further recursively written as a function of the messages coming from node i's other neighbors. The final activation probability of node i in the original network can thus be obtained by considering all the effects, or messages, passed from its neighbors.
For a link from i to j (i→j), suppose node j is “virtually” removed from the network (i.e., creating a “cavity” at node j) and reconsider if node i is excited or not [25]. This information can be stored in an auxiliary variable pi→jt representing the probability of node i being excited in the absence of node j at time t. Notice that although node j cannot directly affect the activation of node i through the directed link i→j, it may be realized through the possible bidirectional link i↔j in undirected networks, or a longer directed path j→⋯→i in directed networks. For m = 1, the system has only two states, resting and excited. For sparse networks, the updating process can be described by
where A_{ij} is the element of the binary adjacency matrix (A_{ij} = 1 if a_{ij} > 0, and A_{ij} = 0 otherwise) and k∖j means k runs over all nodes except j. Putting back j into the network, we can get the probability of node i being excited at time t + 1 through
The assumption of sparse (or locally tree-like) networks guarantees that there are not too many short loops. The existence of excessive numbers of short loops will invalidate the mutual independence of activation among neighboring nodes, which is the basis to write down Eqs. (3) and (4). Real-world networks are mostly sparse, but even for some social networks with dense clusters, it was found that results based on sparseness assumption also work well [26].
For general situations with m≥2, the probability of node i being at any refractory states in the absence of node j at time t is ∑l=1m−1pi→jt−l, so the probability of node i to be in the resting state is 1−∑l=0m−1pi→jt−l. The updating process, therefore, follows:
Denote limt→∞pi→jt=p_{i→j} and limt→∞pit=p_{i}. Equations (5) and (6) in the steady state become
and
To solve the above self-consistent equations, let us denote G_{i→j}(η,p_{→})=η+(1−η)[1−∏_{k\j}(1−p_{k→i}a_{ik}A_{ik})] and G_{i}(η,p_{→})=η+(1−η)[1−∏_{k}(1−p_{k→i}a_{ik}A_{ik})]. After rearranging the equations, we have
and
Notice that p_{i→j} and p_{i} are actually the functions of η. As a result, the response F=F(η) can be written as follows:
For η = 1, it is trivial that G_{i→j}(1,p_{→})=1 and G_{i}(1,p_{→})=1. This leads to a constant maximal response F_{max}=1/(m+1), regardless of the network structure. The dynamic range depends on both the minimal response F_{0}=limη→0F(η) and how F(η) approaches F_{0} and F_{max}. When η = 0, Eq. (9) always has a trivial solution {p_{i→j}=0} for all i→j, which in turn gives {p_{i}=0} for all node i and thus F_{0}=0. The stability of this solution is controlled by the largest eigenvalue of the linear operator M̂ of the nonlinear function Eq. (9). In the subcritical regime with the largest eigenvalue smaller than 1, the minimal response F_{0} remains zero. As the largest eigenvalue increases, the sensitivity of the network is enlarged because the amplifying effect on weak stimuli caused by activity propagation among neighbors becomes stronger. As a result, the dynamic range Δ increases monotonically with the largest eigenvalue. In the supercritical regime with the largest eigenvalue larger than 1, the minimal response F_{0} becomes nonzero and masks the existence of weak stimuli, which reduces the dynamic range Δ. Consequently, the maximal dynamic range should be achieved in the critical state where the largest eigenvalue is around one [4].
We now derive the form of the M × M matrix M̂ defined for the directed links k→l,i→j
Here, G_{i→j}=0 when η = 0 and {p_{i→j}=0} for all i→j. According to the definition of G_{i→j}, the partial derivative of G_{i→j} is given by
Going back to Eq. (12), we obtain the M × M matrix M̂={M_{k→l,i→j}}
The matrix M̂ is a generalization of the non-backtracking (NB) matrix of networks [27], which recently has found many applications in network science [23–25,28,29]. Therefore, we refer M̂ as the weighted non-backtracking (WNB) matrix of the excitable network. The stability of the zero solution is determined by the largest eigenvalue of the WNB matrix λ_{NB}: stable if λ_{NB}<1 and unstable if λ_{NB}>1.
In Appendix A, we also derived the Steven's exponent m = 1/2 in the critical state of the system using the message-passing equations (7) and (8), which recovers the same result obtained from the mean-field approximation in Kinouchi and Copelli [4].
To verify this theoretical result, we performed simulations on synthetic random networks. In particular, we are interested in the largest eigenvalue of the WNB matrix λ_{NB} when the dynamic range is maximized. In previous study, it was found that the optimal dynamic range appears if the largest eigenvalue of the weighted adjacency matrix λ_{W} is one [17]. To compare these results, in our simulations, we also reported the values of λ_{W} when the maximal dynamic range was observed.
We start from homogeneous random networks. To generate directed Erdös-Rényi (ER) networks, we first generated independent in-degree and out-degree sequences from a Poisson degree distribution P(k)=K^{k}e^{−K}/k!, where K is the average degree. Then, we connected the nodes using the configuration model [30]. For simplicity, we assume that the weights of all links are constant. By varying the link weight, we can control both λ_{NB} and λ_{W}. In simulations, we generated 1000 independent realizations of the directed ER networks with network size N = 5000 and average degree K = 2.5. For each network, we slowly tuned up the link weight, calculated the dynamic range and recorded λ_{NB} and λ_{W}, when Δ reached the peak. In Fig. 2, we display the relationship between the dynamic range and the largest eigenvalue of the WNB matrix λ_{NB}. The maximal dynamic range is achieved when λ_{NB} is close to one. The distributions of λ_{NB} and λ_{W} in the maximal dynamic range are shown in Fig. 3(a). We further performed the same analysis on directed scale-free (SF) networks, generated using a power-law degree distribution P(k)∼k^{−γ} and the configuration model (N = 5000, γ = 3). Specifically, we first generated in-degree and out-degree sequences from the distribution P(k)∼k^{−γ} with k_{min} = 2 and k_{max} = 1000, and then connected the “stubs” randomly. The results are presented in Fig. 3(b). The narrow distributions tightly surrounding λ_{NB} = 1 and λ_{W}=1 indicate that, for spare random networks, (1) the dynamic range is maximized when the largest eigenvalue of the WNB matrix is close to one and (2) this finding is consistent with previous results on the weighted adjacency matrix of directed networks.
The deviations of λ_{W} and λ_{NB} from the theoretical value of one are attributed to both the finite network size and numerical inaccuracy. To show this, we calculated the standard deviations of the distributions of λ_{W} and λ_{NB} with increasing network size. As shown in Fig. 4, the standard deviation decreases with the growing network size, for both ER and SF networks. However, the decrease for SF networks slows down after N = 4000. The remaining fluctuations are possibly due to the choice of the step length in tuning λ_{W} and λ_{NB}, as well as the large variability in the SF network structure.
The agreement of the results for λ_{W} and λ_{NB} in directed networks shown in Fig. 3 has a reason. In the directed networks we have created, there is little chance to observe backtracking links. As a consequence, the adverse effect of backtracking links was precluded by the design of network structure. However, this good structural property (lack of backtracking links) does not hold for undirected networks, where every link can be treated as a backtracking path. In Fig. 5, we repeat the analysis in Fig. 3 on undirected ER and SF networks. The distribution of λ_{NB} in the critical state remains centering around one, but all values of λ_{W} at criticality are well above one. The reason is that because a node cannot be excited in consecutive steps, excitations cannot go back to the same node through a bidirectional link. In particular, it was found that the presence of a refractory period does not allow self-sustained activity to occur in the absence of loops in the network structure [7]. This phenomenon is what the NB matrix captures, but the adjacency matrix does not. This comparison indicates that λ_{NB} is indeed a better quantity to characterize criticality.
The above result is reminiscent of recent findings on bond percolation [23,24]. On sparse networks, it was found that the percolation threshold is given by the inverse of the largest eigenvalue of the non-backtracking (NB) matrix. For sparse networks, this result is equivalent to previous finding that the critical occupation probability for percolation is the reciprocal of the largest eigenvalue of the adjacency matrix [31]. For dense networks, however, both estimations give a lower bound of the real threshold value, but the estimation based on the NB matrix is tighter [24].
In applications, it is common to encounter the situation where we want to modify an existing excitable network to maximize its dynamic range with a lower cost. Given that many different ways of modifications may exist, in this work, we assume that only the network structure can be changed, while the link weights remain fixed. Because the dynamic range is optimized in the critical state, the problem becomes adjusting the connections in the network so that the largest eigenvalue of the WNB matrix λ_{NB} is one. Here, we consider the following optimization problem: for an excitable network with λ_{NB}>1, find the minimal set of links whose removal will lead to λ_{NB} = 1. For networks with λ_{NB}<1, the adjustment may require addition of new links. We leave this problem to future works.
To find the optimal link set, we first define the collective influence (CI) of each link on the largest eigenvalue λ_{NB}. Here, the term “collective” means the proposed measure is calculated from the collective information of links surrounding the topological structure, rather than the information on each individual link. The collective influence theory was developed to find multiple influential nodes in optimal percolation [25], and has been applied to an independent spreading model [32], a linear threshold model [33] and the Boolean network model [34]. Here, we generalize it to work for network links. The main idea is to quantify the impact of each link's removal on the value of λ_{NB}, which is collectively determined by the global network structure.
We use the power method to estimate the largest eigenvalue of the WNB matrix [25]. For a M dimensional nonzero vector w_{0} that is not orthogonal to the eigenvector associated with λ_{NB}, denote
The largest eigenvalue of M̂ is
where
For notation convenience, we put M_{k→l,i→j} into a larger space of dimension N×N×N×N
Here, δ_{ij}=1 if and only if i = j. Supposing the initial vector is w_{0}={|w_{1}⟩_{ij}}={A_{ji}}, we can calculate the iteration starting from ℓ = 1 as
Defining Si\jin=∑_{k\j}a_{ik}A_{ik} and Kj\iout=∑_{l\i}A_{lj}, we have
Using |w_{ℓ+1}⟩_{ij}=∑_{kl}M̂{ijkl}|w_{ℓ}⟩_{kl}, we can calculate w_{2}. For ℓ = 2,
So, |w2|{2} is
The above calculation can be extended to any iteration time ℓ. Specifically, we have
The collective influence (CI) of the link i→j is defined as the contribution of the terms containing a_{ji}A_{ji} to |wℓ|{2}. According to Eq. (16), a link with a higher CI score will contribute more to the value of |w_{ℓ}|, thus λ_{NB}. If an existing link i→j is removed from the network, the value of |wℓ|{2} will drop by
where P2ℓ−1i→j(α,β) is the set of directed paths of length 2ℓ−1 that cross the link i→j, whose head and tail are the links α→α′ and β′→β, respectively. In Eq. (26), α, α′, β, and β′ run over all possible choices of nodes that satisfy the definition of paths in P2ℓ−1i→j(α,β). In a tree structure without loops, the directed path between α and β is simply the shortest path connecting them. In local tree-like networks, we can approximate the directed path using the shortest path from α to β, because the number of other paths will become negligible as the network size increases [25]. In implementation, the shortest paths crossing the link i→j can be easily found using a breadth-first search algorithm. Notice that Eq. (26) can be generalized for undirected links. Specifically, we treat an undirected edge i↔j as the superposition of two directed links. The CI value of length ℓ is defined as CIijℓ=CIi→jℓ+CIj→iℓ.
In order to find the optimal set of links, we adopt a heuristic approach following a greedy strategy [35]. The greedy algorithm makes a locally optimal choice at each time step, aiming to find a global optimum. Although a greedy strategy, in general, does not find the global optimum, it can usually yield locally optimal solutions that approximate the global one in a reasonable time. Specifically, we adaptively remove the link with the highest CI score until the critical state is reached, i.e., λ_{NB} = 1. After each removal, the CI scores of the existing links are recalculated. In practice, we use several techniques to speed up the computation. (1) We limit the path length ℓ to a small value to avoid enumerating long paths. Computationally, finding the shortest paths of a fixed length ℓ crossing a given link takes O(1) time. As a result, the complexity of computing CI values for all links is O(M). (2) We use a heap structure to find the link with the highest CI score [36], which takes O(logM) time. (3) After each removal, we only update the CI values of the links within 2ℓ steps from the removed link, because the CI values of the links outside this scope will not be affected by the removal. This procedure will reduce the computation time of CI update from O(M) to O(1). Combining all these techniques, the overall computational complexity of the algorithm is O(MlogM).
The pseudocode for computing the CI score for an undirected link i↔j is shown below:
Here, ∂Ball(i,L_{1}) is the frontier of the ball centered at node i with radius L_{1} and Dii_{1}…i_{L1}L_{1}(i,i_{L1}) represents the shortest path of length L_{1} between node i and i_{L1}. Moreover, j∉Dii_{1}…i_{L1}L_{1}(i,i_{L1}) means node j is not on the shortest path i,i_{1},…,i_{L1}, i.e., j∉{i,i_{1},…,i_{L1}}.
There exist several widely used link ranking methods that can be potentially used in dynamic range maximization [37–41]. Here, we introduce some heuristic methods that are applicable to large-scale networks. For simplicity, in our following analysis, we assume that the networks are undirected. In numerical simulations, we first rank links using each method, and then remove links following this order. Specifically, removing an undirected link from an undirected network is equivalent to deleting two directed links that follow the opposite directions in a directed network.
• Weight-based ranking. To quantify the importance of an undirected link i↔j, we define its high weight (HW) score as the sum of links' weights at both ends of the link, i.e., CijHW=∑_{k∈∂i}a_{ki}+∑_{k∈∂j}a_{kj}, where ∂i is the set of node i's neighbors. In the high weight (HW) ranking, we sort the links by their HW scores in a descending order, and then remove those ranked in the top q fraction. An effective way to improve the performance of HW strategy is to rank the links adaptively. That is, after the removal of each link, the HW scores of the remaining links are recalculated. We refer to this method as high weight adaptive (HWA) in the following comparison.
• Degree-based ranking. In high degree (HD) ranking, the score of each link i↔j is determined by the number of connections at nodes i and j: CijHD=∑_{k∈∂i}A_{ki}+∑_{k∈∂j}A_{kj}. In the comparison, we also perform the adaptive version of HD ranking (HDA).
Eigenvector-based ranking. Many ranking methods make use of the eigenvector corresponding to the largest eigenvalue of the adjacency matrix, which incorporates the information on the global network structure [42–44]. For instance, the dynamical importance of network links can be characterized by the quantity defined based on eigenvectors [44]. Using a perturbation analysis on the largest eigenvalue, the dynamical importance of a link i→j is calculated as
where v and u denote the right and left eigenvectors of the weighted adjacency matrix W. That is, Wu=λ_{W}u and v^{T}W=λ_{W}v^{T}. For undirected networks, the left and right eigenvectors are identical. In the following analysis, we also use two versions of this method—Eig (without adaptive calculation) and EigA (with adaptive calculation).
Weight-based ranking. To quantify the importance of an undirected link i↔j, we define its high weight (HW) score as the sum of links' weights at both ends of the link, i.e., CijHW=∑_{k∈∂i}a_{ki}+∑_{k∈∂j}a_{kj}, where ∂i is the set of node i's neighbors. In the high weight (HW) ranking, we sort the links by their HW scores in a descending order, and then remove those ranked in the top q fraction. An effective way to improve the performance of HW strategy is to rank the links adaptively. That is, after the removal of each link, the HW scores of the remaining links are recalculated. We refer to this method as high weight adaptive (HWA) in the following comparison.
Degree-based ranking. In high degree (HD) ranking, the score of each link i↔j is determined by the number of connections at nodes i and j: CijHD=∑_{k∈∂i}A_{ki}+∑_{k∈∂j}A_{kj}. In the comparison, we also perform the adaptive version of HD ranking (HDA).
Eigenvector-based ranking. Many ranking methods make use of the eigenvector corresponding to the largest eigenvalue of the adjacency matrix, which incorporates the information on the global network structure [42–44]. For instance, the dynamical importance of network links can be characterized by the quantity defined based on eigenvectors [44]. Using a perturbation analysis on the largest eigenvalue, the dynamical importance of a link i→j is calculated as
To test the performance of the CI algorithm, here, we examine how the dynamic range evolves after a certain fraction of links is removed. The set of removed links is selected by different methods, including the CI algorithm with ℓ = 1 and 2, HWA, HW, HDA, HD, EigA and Eig. For reference, we also use a random selection (Rand) method to pick the links randomly. A better method will result in a smaller fraction of links when the dynamic range is optimized.
We first test on homogeneous ER networks. For ER networks with size N and average degree K, we generated the networks by randomly assigning NK/2 links among N nodes. Networks with size N = 10 000 and the average degree K = 3 were used in the simulations. To avoid too many short loops in the network, we choose a relatively small average degree K = 3, which can at the same time maintain the connectivity of the network. Here, we assume that the initial λ_{NB} is not too far away from 1, so that the critical state can be reached through a small perturbation (i.e., removal of a small fraction of links) on the network structure. To keep the initial λ_{NB} close to 1, the link weights were randomly drawn from a uniform distribution U[0.5,0.6]. The specific distribution of link weights will not affect the performance of each method. Starting from the initial network structure, links were removed one by one and we calculated the dynamic range at every 1% interval. After each link removal, we only kept the giant connected component in the network and discarded the isolated small clusters. If a small cluster is disconnected from the giant component (GC), it can be viewed as a separate system. We will focus on the functionality of the largest connected component of the network. In another study, the excitable network is also divided into subgroups in the context of heterogeneity [45].
The evolution of the dynamic range for different methods is presented in Fig. 6. Clearly, the CI algorithm with ℓ = 2 outperforms other methods by achieving the critical state with a smaller set of links (see Table I). We repeated the analysis on ER networks with K = 2 and 2.5 (see Fig. 11 in Appendix B). As the average degree K grows, the critical fraction of links required to optimize the dynamic range increases from less than 10% to around 20%. These results indicate that a better connected ER network needs more links to be removed to reach the critical state. The adaptive dynamical importance EigA also has a satisfactory result and performs better than other ranking strategies except for the CI_{ℓ}_{=2} algorithm. The performance of the CI_{ℓ}_{=1} algorithm is similar to HWA and HDA, as it only uses local information adaptively like HWA and HDA. With adaptive calculation, HWA and HDA have substantial improvements compared with the original version of HW and HD. Finally, the random selection and Eig has almost no effect on improving the dynamic range.
The functionality of excitable networks is not solely determined by the dynamic range. To keep the sensory network working, it is critical to maintain the integrity of the network structure. Here, we use the size of the giant component (GC) to quantify the completeness of the network. In particular, the system should reach the critical state before the network gets fragmented by link removal. In Fig. 7, we show the decrease of GC size with the removal of links. Before the critical state, GC for the CI_{ℓ}_{=2} algorithm is the largest among all methods, although it drops abruptly afterwards. This implies that the CI_{ℓ}_{=2} algorithm will first select redundant links surrounded by clusters of hubs whose removal will not affect the overall connectivity of the network. As a result, the CI_{ℓ}_{=2} algorithm is suitable for dynamic range maximization, since it will not significantly change the original network structure. One simple heuristic way to avoid disconnecting nodes is to only remove edges that do not cause disconnection of the network. We will explore this option in future works.
Now we compare the performance of different methods on heterogeneous SF networks. We generated undirected SF networks with size N = 10 000 and power-law exponent γ = 2.8. The link weights are generated from a uniform distribution U[0.5, 0.6]. We performed the same analysis as for ER networks and present the evolution of dynamic range in Fig. 8. Similar to the results on ER networks, the CI_{ℓ}_{=2} algorithm is capable of finding a smaller set of important links (see Table I). We tested other choices of the power-law exponent γ = 3 and 3.5 (see Fig. 11 in Appendix B). As the network becomes more heterogeneous (the power-law exponent γ from 3.5 to 2.8), more fraction of links is required to be removed before the critical state appears. For SF networks, the performance of the adaptive dynamical importance EigA becomes worse than CI_{ℓ}_{=1}, HWA and HDA, which is different from the case of ER networks.
The change in the giant component size for different methods is presented in Fig. 9. The CI_{ℓ}_{=2} algorithm has the largest GC size in the critical state. An interesting observation is that as the network becomes more heterogeneous (the power-law exponent γ changes from 3.5 to 2.8, figures not shown here), more links are required to be removed to fragment the network. This is different from optimal percolation in which fewer nodes are needed for more heterogenous networks [25]. The reason is, as networks become more heterogeneous, important nodes will have more connections. In optimal percolation, removing a smaller number of high-degree nodes will be enough to dismantle the network. However, in link removal, it will require more deletion to reduce the number of connections of high-degree nodes, which has a significant impact on the largest eigenvalue.
After the tests on synthetic networks, we turn to more structurally complex real-world networks. Here, we select two realistic networks: (1) a yeast protein-protein interaction network (Protein) [46] and (2) an Internet autonomous system network (Computer) [47]. The undirected protein network contains protein interactions contained in the yeast. A node represents a protein and an edge represents a metabolic interaction between two proteins. The network consists of 1870 nodes and 2277 links, resulting in an average degree of 2.44. The giant component of the protein network has 1458 nodes. We remove other small clusters in the simulations. The degree sequence follows a power-law distribution with the exponent γ = 3.04. The computer network is the undirected network of autonomous systems of the Internet connected with each other. Nodes are autonomous systems and edges denote communication. The computer network contains 6474 vertices and 13895 edges, with a power-law degree distribution whose exponent is γ = 2.11. The computer network is fully connected. For both networks, the link weights are randomly drawn from a uniform distribution U[0.5, 0.6]. We note that here, these two networks are only used as templates for networks with a more structured architecture, and there are no actual excitable nodes in Protein and Computer networks.
Using different methods, we gradually removed links one by one from the networks. At each 1% interval, we calculated the dynamic range of the networks. The evolution of dynamic range is shown in Figs. 10(a) and 10(b). For protein network in Fig. 10(a), removing 11.5% links using the CI_{ℓ}_{=2} algorithm can boost the dynamic range from 33.1 to 51.8, a remarkable 56.5% improvement. The CI algorithms with ℓ = 2 and ℓ = 1 outperform other methods, implying that they can handle more complex structure in real-world networks, such as the community structure, degree correlation, clustering, etc. For a computer network in Fig. 10(b), which is more heterogeneous than the protein network, the CI_{ℓ}_{=2} algorithm needs to remove 21.5% links to reach the critical state. This agrees with the result of synthetic SF networks. The dynamic range is enhanced from 35.2 to 47.1, a 33.8% improvement. The GC size evolution is presented in Figs. 10(c) and 10(d). In the critical state, the GC size for the CI_{ℓ}_{=2} algorithm is 1458 (100%) and 6474 (100%) for a protein network and a computer network, respectively. As a result, for real-world networks, the CI algorithm can make the most use of the excitable elements after the adjustment of the network structure. In this case, the CI_{ℓ}_{=2} algorithm preserves all excitable nodes in the networks, while others do not. In other competing methods, the EigA ranking outperforms weight-based and degree-based methods, leading to a higher dynamic range and a larger GC size in the critical state.
In this study, we explored the strategy to maximize the dynamic range of a given excitable network by removing a minimal number of links. We used a message passing process to describe the activation propagation in excitable networks and found that the dynamic range is optimized in the critical state, where the largest eigenvalue of the WNB matrix is close to one (λ_{NB} = 1). To quantify the collective influence (CI) of each single link on λ_{NB}, we analyzed the message passing equations through linearization and approximated the largest eigenvalue using power method iteration. Based on the CI scores of links, we proposed a greedy algorithm that adaptively removes edges with the largest CI value. Simulations on both synthetic and real-world networks indicate that, compared with other widely used heuristics, the CI algorithm can find a smaller set of links whose removal will perturb the network to the critical state. Meanwhile, the CI algorithm maintains a larger giant component after the removal of links, which preserves the majority of excitable elements in the network. The proposed method provides a practical way to enhance the dynamic range of excitable networks through a minimal control of the network structure, and can be generalized to quantify the dynamical importance of links in other dynamical processes.
One concern in the above ranking methods is that these methods remove links following a certain order. So, some of the perturbations may reduce the largest eigenvalue to less than one. A better algorithm can be thus designed by removing links that can make the largest eigenvalue closest to one. As the largest eigenvalue gets closer to one, the optimal pruning may involve removing a less important link, which is not necessarily the next one in the rank. This strategy can optimize the dynamic range, but may increase the number of removed links. We can explore this approach in future works. Also, more ranking methods for nodes, e.g., Lobby index [48], can be adapted and tested for use in dynamic range maximization. The problem of dynamic range maximization is conceptually similar to a targeted attack in which links are removed. Their relationship is also worthy of further exploration in future works.
APPENDIX A: DERIVATION OF THE STEVEN'S EXPONENT
In Kinouchi and Copelli [4], the authors derived the approximating relation between F and η for low η values: F(η)≈η^{m}, where m = 1 out of criticality and m = 1/2 (for homogeneous networks, or m < 1 for general networks) in the critical state. It is this m < 1 exponent that is responsible for the large dynamic range. The exponent m is called Steven's exponent in psychophysics literature, and δ=1/m is the standard source field critical exponent in standard critical systems.
Here, using a different formalization, we can rederive the critical exponent m = 1/2 for homogeneous networks at criticality. Consider a regular network where all nodes have the same degree K and all links share the same weight σ. In the stationary state, Eqs. (7) and (8) are simplified to
and
From Eq. (A1), it can be easily obtained that the critical value for the weight σ is σ_{c}=1/(K−1). When η and p_{→} are close to zero, we can expand (1−σcp→){K−1}≈1−p_{→}+p→2(K−2)/2(K−1)+O(p→3) in Eq. (A1), from which we obtain
Denote C=m+K−22(K−1) and drop off the negligible term O(p→3). Now, we have a quadratic function of p_{→}
Solving this equation and retaining the leading order of η yields p_{→}≈η/C. Finally, using Eq. (A2), we have F(η)=p(η)≈Kη/C/(K−1), which recovers the exponent m = 1/2.
APPENDIX B: ADDITIONAL ANALYSES ON ER AND SF NETWORKS
We performed additional analyses on ER networks with different mean degrees K = 2 and K = 2.5. The evolution of dynamic range with the fraction of removed links for different methods is displayed in Figs. 11(a) and 11(b). CI performs consistently better than other competing methods. The results obtained for SF networks with different power-law exponents γ = 3 and γ=3.5 are also presented in Figs. 11(c) and 11(d).
Algorithm 1: 
CI(G,i,j,ℓ)
TABLE I. 
The percentage (%) of removed links at criticality for different methods and networks are presented. NA means there is no clear peak for the dynamic range.
Algorithm 1: -body
1: CI=0;
2: for each L_{1}∈[0,2ℓ−2], do
3: L_{2}=2ℓ−2−L_{1};
4: S_{1}=0,S_{2}=0;
5: K_{1}=0,K_{2}=0;
6: fori_{L1}∈∂Ball(i,L_{1}), do
7: ifj∉Dii_{1}…i_{L1}L_{1}(i,i_{L1})then,
8: calculate Si_{L1}\i_{L1−1}in and Ki_{L1}\i_{L1−1}out;
9: P=∏k=0L_{1}−1a_{ikik+1};
10: S_{1}+=Si_{L1}\i_{L1−1}in×P;
11: K_{1}+=Ki_{L1}\i_{L1−1}out×P;
12: forj_{L2}∈∂Ball(j,L_{2}), do
13: ifi∉Djj_{1}…j_{L2}L_{2}(j,j_{L2})then,
14: calculate Sj_{L2}\j_{L2−1}in and Kj_{L2}\j_{L2−1}out;
15: P=∏k=0L_{2}−1a_{jkjk+1};
16: S_{2}+=Sj_{L2}\j_{L2−1}in×P;
17: K_{2}+=Kj_{L2}\j_{L2−1}out×P;
18: CI+=S_{1}×K_{2}+S_{2}×K_{1};
19: returnCI=CI×a_{ij}.
TABLE I. -body
Network	CI ℓ = 1	CI ℓ = 2	HWA	HW	HDA	HD	EigA	Eig	Rand
ER	18.9	17.9	19.9	25.8	19.9	25.8	19.9	36.8	36.8
SF	26.9	25.9	27.8	35.8	27.8	35.8	30.8	48.7	NA
Protein	12.0	11.0	14.0	23.0	14.0	23.0	19.0	29.0	NA
Computer	4.9	21.9	NA	NA	NA	NA	30.8	NA	NA
FIG. 1. 
An illustration of the definition of dynamic range. The dotted curve shows the network response F as a function of the external stimuli η. Horizontal dash lines mark the minimum and the maximum response F_{0} and F_{max}, respectively. The interval between F_{0.1} and F_{0.9} is the response range we use in defining the dynamic range Δ.
FIG. 2. 
For directed ER networks (N = 5000, K = 2.5) and SF networks (N = 5000,γ = 3), the relationship between the dynamic range and the largest eigenvalue of the WNB matrix λ_{NB}. The results are averaged over 50 independent realizations.
FIG. 3. 
For directed ER networks (N = 5000, K = 2.5), the distributions of the largest eigenvalues of the weighted adjacency matrix λ_{W} and the WNB matrix λ_{NB} when the dynamic range is maximized are displayed in (a). The results are obtained from 1000 independent realizations. Same analyses for directed SF networks (N = 5000, γ = 3) are presented in (b).
FIG. 4. 
We plot the standard deviation of the distributions of critical λ_{W} and λ_{NB} for directed ER networks (N = 5000, K = 2.5) with increasing network sizes N = 2000, 4000, 6000, 8000 and 10 000 in (a). The results for directed SF networks (N = 5000, γ = 3) are shown in (b). The results are obtained from 1000 independent realizations.
FIG. 5. 
For undirected ER networks (N = 5000, K = 2.5), the distributions of the largest eigenvalues of the weighted adjacency matrix λ_{W} and the WNB matrix λ_{NB} when the dynamic range is maximized are displayed in (a). The results are obtained from 1000 independent realizations. A comparison of undirected SF networks (N = 5000, γ=2.8) is presented in (b).
FIG. 6. 
For ER networks with size N = 10 000 and mean degree K = 3, we use different methods (including CI with ℓ = 1 and ℓ = 2, HWA, HW, HDA, HD, EigA, Eig, and Rand) to remove links and display the dynamic range of the remaining networks. Curves for different methods are distinguished by color. The results are averaged over 20 independent realizations. The error bars indicate the standard deviation.
FIG. 7. 
For ER networks, we display the size of the giant component (GC) in the remaining network with the removal of a certain fraction of links. Different methods are used in selecting removed links. The network structure is the same as in Fig. 6. The results are averaged over 20 independent realizations. The error bars indicate the standard deviation.
FIG. 8. 
We show the dynamic range of scale-free (SF) networks after a certain fraction of links is deleted, using different ranking methods. Networks are generated with size N = 10 000 and the power-law exponent γ=2.8. The results are averaged over 20 independent realizations. The error bars indicate the standard deviation.
FIG. 9. 
For SF networks, we display the size of the giant component (GC) in the remaining network with the removal of a certain fraction of links. The results are averaged over 20 independent realizations. The error bars indicate the standard deviation.
FIG. 10. 
For a protein network (a) and a computer network (b), the dynamic ranges after the removal of a fraction of links are compared for different methods. The changes in the GC size for a protein network (c) and a computer network (d) are also displayed. The results are averaged over 20 independent realizations. The error bars indicate the standard deviation.
FIG. 11. 
For ER networks with size N = 10 000 and mean degree K = 2 (a) and K = 2.5 (b), we use different methods (including CI with ℓ = 1 and ℓ = 2, HWA, HW, HDA, HD, EigA, and Rand) to remove links and display the dynamic range of the remaining networks. The same analyses for SF networks with size N = 10 000 and power-law exponent γ = 3 (c) and γ=3.5 (d) are displayed.
